[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/data/geospatial/hexagon.html",
    "href": "In-class_Ex/In-class_Ex1/data/geospatial/hexagon.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n                 +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs 0 0     false"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/data/geospatial/MPSZ-2019.html",
    "href": "In-class_Ex/In-class_Ex1/data/geospatial/MPSZ-2019.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html",
    "title": "In-class Exercise 1: My First Date with Geospatial Data Science",
    "section": "",
    "text": "In this in-class exercise, you are required to prepare a choropleth map showing the distribution of passenger trips at planning sub-zone by integrating Passenger Volume by Origin Destination Bus Stops and bus stop data sets downloaded from LTA DataMall and Planning Sub-zone boundary of URA Master Plan 2019 downloaded from data.gov.sg.\n\nThe specific task of this in-class exercise are as follows:\n\nto import Passenger Volume by Origin Destination Bus Stops data set downloaded from LTA DataMall in to RStudio environment,\nto import geospatial data in ESRI shapefile format into sf data frame format,\nto perform data wrangling by using appropriate functions from tidyverse and sf pakcges, and\nto visualise the distribution of passenger trip by using tmap methods and functions."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#the-task",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#the-task",
    "title": "In-class Exercise 1: My First Date with Geospatial Data Science",
    "section": "",
    "text": "In this in-class exercise, you are required to prepare a choropleth map showing the distribution of passenger trips at planning sub-zone by integrating Passenger Volume by Origin Destination Bus Stops and bus stop data sets downloaded from LTA DataMall and Planning Sub-zone boundary of URA Master Plan 2019 downloaded from data.gov.sg.\n\nThe specific task of this in-class exercise are as follows:\n\nto import Passenger Volume by Origin Destination Bus Stops data set downloaded from LTA DataMall in to RStudio environment,\nto import geospatial data in ESRI shapefile format into sf data frame format,\nto perform data wrangling by using appropriate functions from tidyverse and sf pakcges, and\nto visualise the distribution of passenger trip by using tmap methods and functions."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#getting-started",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#getting-started",
    "title": "In-class Exercise 1: My First Date with Geospatial Data Science",
    "section": "Getting Started",
    "text": "Getting Started\nThree R packages will be used in this in-class exercise, they are:\n\ntidyverse for non-spatial data handling,\nsf for geospatial data handling,\ntmap for thematic mapping, and\nknitr for creating html table.\n\n\nThe taskThe solution\n\n\nUsing the steps you learned from Hands-on Exercise 1, load these three R packages into RStudio.\n\n\n\npacman::p_load(tmap, sf, tidyverse, \n               knitr)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#importing-the-od-data",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#importing-the-od-data",
    "title": "In-class Exercise 1: My First Date with Geospatial Data Science",
    "section": "Importing the OD data",
    "text": "Importing the OD data\nFirstly, we will import the Passenger Volume by Origin Destination Bus Stops data set downloaded from LTA DataMall by using read_csv() of readr package.\n\nThe taskThe solution\n\n\nUsing the steps you learned from Hands-on Exercise 1, import origin_destination_bus_202308.csv downloaded from LTA DataMall into RStudio and save it as a tibble data frame called odbus.\n\n\n\nodbus &lt;- read_csv(\"data/aspatial/origin_destination_bus_202308.csv\")\n\n\n\n\nA quick check of odbus tibble data frame shows that the values in OROGIN_PT_CODE and DESTINATON_PT_CODE are in numeric data type.\n\nglimpse(odbus)\n\nRows: 5,709,512\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-08\", \"2023-08\", \"2023-08\", \"2023-08\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKDAY\", \"WEEKENDS/HOLIDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 16, 16, 14, 14, 17, 17, 17, 17, 7, 17, 14, 10, 10,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;chr&gt; \"04168\", \"04168\", \"80119\", \"80119\", \"44069\", \"4406…\n$ DESTINATION_PT_CODE &lt;chr&gt; \"10051\", \"10051\", \"90079\", \"90079\", \"17229\", \"1722…\n$ TOTAL_TRIPS         &lt;dbl&gt; 7, 2, 3, 10, 5, 4, 3, 22, 3, 3, 7, 1, 3, 1, 3, 1, …\n\n\n\nThe taskThe solution\n\n\nUsing appropriate tidyverse functions to convert these data values into factor data type.\n\n\n\nodbus$ORIGIN_PT_CODE &lt;- as.factor(odbus$ORIGIN_PT_CODE)\nodbus$DESTINATION_PT_CODE &lt;- as.factor(odbus$DESTINATION_PT_CODE) \n\n\n\n\nNotice that both of them are in factor data type now.\n\nglimpse(odbus)\n\nRows: 5,709,512\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-08\", \"2023-08\", \"2023-08\", \"2023-08\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKDAY\", \"WEEKENDS/HOLIDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 16, 16, 14, 14, 17, 17, 17, 17, 7, 17, 14, 10, 10,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;fct&gt; 04168, 04168, 80119, 80119, 44069, 44069, 20281, 2…\n$ DESTINATION_PT_CODE &lt;fct&gt; 10051, 10051, 90079, 90079, 17229, 17229, 20141, 2…\n$ TOTAL_TRIPS         &lt;dbl&gt; 7, 2, 3, 10, 5, 4, 3, 22, 3, 3, 7, 1, 3, 1, 3, 1, …\n\n\n\nExtracting the study data\n\nThe taskThe solution\n\n\nFor the purpose of this exercise, we will extract commuting flows during the weekday morning peak. Call the output tibble data table as origin7_9.\n\n\n\norigin7_9 &lt;- odbus %&gt;%\n  filter(DAY_TYPE == \"WEEKDAY\") %&gt;%\n  filter(TIME_PER_HOUR &gt;= 7 &\n           TIME_PER_HOUR &lt;= 9) %&gt;%\n  group_by(ORIGIN_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\n\n\n\nIt should look similar to the data table below.\n\nkable(head(origin7_9))\n\n\n\n\nORIGIN_PT_CODE\nTRIPS\n\n\n\n\n01012\n1617\n\n\n01013\n813\n\n\n01019\n1620\n\n\n01029\n2383\n\n\n01039\n2727\n\n\n01059\n1415\n\n\n\n\n\nWe will save the output in rds format for future used.\n\nwrite_rds(origin7_9, \"data/rds/origin7_9.rds\")\n\nThe code chunk below will be used to import the save origin7_9.rds into R environment.\n\norigin7_9 &lt;- read_rds(\"data/rds/origin7_9.rds\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#working-with-geospatial-data",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#working-with-geospatial-data",
    "title": "In-class Exercise 1: My First Date with Geospatial Data Science",
    "section": "Working with Geospatial Data",
    "text": "Working with Geospatial Data\nIn this section, you are required to import two shapefile into RStudio, they are:\n\nBusStop: This data provides the location of bus stop as at last quarter of 2022.\nMPSZ-2019: This data provides the sub-zone boundary of URA Master Plan 2019.\n\n\nImporting geospatial data\n\nThe taskThe solution\n\n\nUsing the steps you learned from Hands-on Exercise 1, import BusStop downloaded from LTA DataMall into RStudio and save it as a sf data frame called busstop.\n\n\n\nbusstop &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"BusStop\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `D:\\tskam\\ISSS624\\In-class_Ex\\In-class_Ex1\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\n\n\n\nThe structure of busstop sf tibble data frame should look as below.\n\nglimpse(busstop)\n\nRows: 5,161\nColumns: 4\n$ BUS_STOP_N &lt;chr&gt; \"22069\", \"32071\", \"44331\", \"96081\", \"11561\", \"66191\", \"2338…\n$ BUS_ROOF_N &lt;chr&gt; \"B06\", \"B23\", \"B01\", \"B05\", \"B05\", \"B03\", \"B02A\", \"B02\", \"B…\n$ LOC_DESC   &lt;chr&gt; \"OPP CEVA LOGISTICS\", \"AFT TRACK 13\", \"BLK 239\", \"GRACE IND…\n$ geometry   &lt;POINT [m]&gt; POINT (13576.31 32883.65), POINT (13228.59 44206.38),…\n\n\n\nThe taskThe solution\n\n\nUsing the steps you learned from Hands-on Exercise 1, import MPSZ-2019 downloaded from eLearn into RStudio and save it as a sf data frame called mpsz.\n\n\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"MPSZ-2019\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `D:\\tskam\\ISSS624\\In-class_Ex\\In-class_Ex1\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\n\n\nThe structure of mpsz sf tibble data frame should look as below.\n\nglimpse(mpsz)\n\nRows: 332\nColumns: 7\n$ SUBZONE_N  &lt;chr&gt; \"MARINA EAST\", \"INSTITUTION HILL\", \"ROBERTSON QUAY\", \"JURON…\n$ SUBZONE_C  &lt;chr&gt; \"MESZ01\", \"RVSZ05\", \"SRSZ01\", \"WISZ01\", \"MUSZ02\", \"MPSZ05\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA EAST\", \"RIVER VALLEY\", \"SINGAPORE RIVER\", \"WESTERN …\n$ PLN_AREA_C &lt;chr&gt; \"ME\", \"RV\", \"SR\", \"WI\", \"MU\", \"MP\", \"WI\", \"WI\", \"SI\", \"SI\",…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"WEST…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"WR\", \"CR\", \"CR\", \"WR\", \"WR\", \"CR\", \"CR\",…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((33222.98 29..., MULTIPOLYGON (…\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nst_read() function of sf package is used to import the shapefile into R as sf data frame.\nst_transform() function of sf package is used to transform the projection to crs 3414."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#geospatial-data-wrangling",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#geospatial-data-wrangling",
    "title": "In-class Exercise 1: My First Date with Geospatial Data Science",
    "section": "Geospatial data wrangling",
    "text": "Geospatial data wrangling\n\nCombining Busstop and mpsz\nCode chunk below populates the planning subzone code (i.e. SUBZONE_C) of mpsz sf data frame into busstop sf data frame.\n\nbusstop_mpsz &lt;- st_intersection(busstop, mpsz) %&gt;%\n  select(BUS_STOP_N, SUBZONE_C) %&gt;%\n  st_drop_geometry()\n\n\n\n\n\n\n\nNote\n\n\n\n\nst_intersection() is used to perform point and polygon overly and the output will be in point sf object.\nselect() of dplyr package is then use to retain only BUS_STOP_N and SUBZONE_C in the busstop_mpsz sf data frame.\nfive bus stops are excluded in the resultant data frame because they are outside of Singapore bpundary.\n\n\n\nBefore moving to the next step, it is wise to save the output into rds format.\n\nwrite_rds(busstop_mpsz, \"data/rds/busstop_mpsz.csv\")  \n\n\nThe taskThe solution\n\n\nNext, we are going to append the planning subzone code from busstop_mpsz data frame onto odbus7_9 data frame.\n\n\n\norigin_SZ &lt;- left_join(origin7_9 , busstop_mpsz,\n            by = c(\"ORIGIN_PT_CODE\" = \"BUS_STOP_N\")) %&gt;%\n  rename(ORIGIN_BS = ORIGIN_PT_CODE,\n         ORIGIN_SZ = SUBZONE_C) %&gt;%\n  group_by(ORIGIN_SZ) %&gt;%\n  summarise(TOT_TRIPS = sum(TRIPS))\n\n\n\n\nBefore continue, it is a good practice for us to check for duplicating records.\n\nduplicate &lt;- origin_SZ %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nIf duplicated records are found, the code chunk below will be used to retain the unique records.\n\norigin_data &lt;- unique(origin_SZ)\n\nIt will be a good practice to confirm if the duplicating records issue has been addressed fully.\n\nThe taskThe solution\n\n\nNext, write a code chunk to update od_data data frame with the planning subzone codes.\n\n\n\norigintrip_SZ &lt;- left_join(mpsz, \n                           origin_SZ,\n                           by = c(\"SUBZONE_C\" = \"ORIGIN_SZ\"))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#choropleth-visualisation",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#choropleth-visualisation",
    "title": "In-class Exercise 1: My First Date with Geospatial Data Science",
    "section": "Choropleth Visualisation",
    "text": "Choropleth Visualisation\n\nThe taskThe solution\n\n\nUsing the steps you had learned, prepare a choropleth map showing the distribution of passenger trips at planning sub-zone level.\n\n\n\ntm_shape(origintrip_SZ)+\n  tm_fill(\"TOT_TRIPS\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Passenger trips\") +\n  tm_layout(main.title = \"Passenger trips generated at planning sub-zone level\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from URA\\n and Passenger trips data from LTA\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\nCreating interactive map\n\ntmap_mode(\"view\")\ntmap_options(check.and.fix = TRUE)\ntm_shape(origintrip_SZ)+\n  tm_fill(\"TOT_TRIPS\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Passenger trips\") +\n  tm_layout(main.title = \"Passenger trips generated at planning sub-zone level\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from URA\\n and Passenger trips data from LTA\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n:::"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2-EHSA.html",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2-EHSA.html",
    "title": "In-class Exercise 2: Emerging Hot Spot Analysis: sfdep methods",
    "section": "",
    "text": "Emerging Hot Spot Analysis (EHSA) is a spatio-temporal analysis method for revealing and describing how hot spot and cold spot areas evolve over time. The analysis consist of four main steps:\n\nBuilding a space-time cube,\nCalculating Getis-Ord local Gi* statistic for each bin by using an FDR correction,\nEvaluating these hot and cold spot trends by using Mann-Kendall trend test,\nCategorising each study area location by referring to the resultant trend z-score and p-value for each location with data, and with the hot spot z-score and p-value for each bin."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2-EHSA.html#installing-and-loading-the-r-packages",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2-EHSA.html#installing-and-loading-the-r-packages",
    "title": "In-class Exercise 2: Emerging Hot Spot Analysis: sfdep methods",
    "section": "Installing and Loading the R Packages",
    "text": "Installing and Loading the R Packages\nAs usual, p_load() of pacman package will be used to check if the necessary packages have been installed in R, if yes, load the packages on R environment.\nFive R packages are need for this in-class exercise, they are: sf, sfdep, tmap, plotly and tidyverse.\n\n\n\n\n\n\nDo It Yourself!\n\n\n\nUsing the steps you learned in previous lesson, install and load sf, tmap, sfdep and tidyverse packages into R environment.\n\n\n\n\n\nShow the code\npacman::p_load(sf, sfdep, tmap, plotly, tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2-EHSA.html#importing-geospatial-data",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2-EHSA.html#importing-geospatial-data",
    "title": "In-class Exercise 2: Emerging Hot Spot Analysis: sfdep methods",
    "section": "Importing geospatial data",
    "text": "Importing geospatial data\nIn the code chunk below, st_read() of sf package is used to import Hunan shapefile into R.\n\n\n\nShow the code\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\n\nReading layer `Hunan' from data source \n  `D:\\tskam\\ISSS624\\In-class_Ex\\In-class_Ex2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\nDo it Yourself\nUsing the steps you learned in previous lesson, examine the content hunan sf data.frame"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2-EHSA.html#importing-attribute-table",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2-EHSA.html#importing-attribute-table",
    "title": "In-class Exercise 2: Emerging Hot Spot Analysis: sfdep methods",
    "section": "Importing attribute table",
    "text": "Importing attribute table\nIn the code chunk below, read_csv() of readr is used to import Hunan_GDPPC.csv into R.\n\n\n\nShow the code\nGDPPC &lt;- read_csv(\"data/aspatial/Hunan_GDPPC.csv\")\n\n\n\n\nDo it Yourself\nUsing the steps you learned in previous lesson, examine the content the GDPPC tibble data.frame."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2-EHSA.html#computing-gi",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2-EHSA.html#computing-gi",
    "title": "In-class Exercise 2: Emerging Hot Spot Analysis: sfdep methods",
    "section": "Computing Gi*",
    "text": "Computing Gi*\nNext, we will compute the local Gi* statistics.\n\nDeriving the spatial weights\nThe code chunk below will be used to identify neighbors and to derive an inverse distance weights.\n\n\n\nShow the code\nGDPPC_nb &lt;- GDPPC_st %&gt;%\n  activate(\"geometry\") %&gt;%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         wt = st_inverse_distance(nb, geometry,\n                                  scale = 1,\n                                  alpha = 1),\n         .before = 1) %&gt;%\n  set_nbs(\"nb\") %&gt;%\n  set_wts(\"wt\")\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nactivate() of dplyr package is used to activate the geometry context\nmutate() of dplyr package is used to create two new columns nb and wt.\nThen we will activate the data context again and copy over the nb and wt columns to each time-slice using set_nbs() and set_wts()\n\nrow order is very important so do not rearrange the observations after using set_nbs() or set_wts().\n\n\n\n\nNote that this dataset now has neighbors and weights for each time-slice.\n\nhead(GDPPC_nb)\n\n# A tibble: 6 × 5\n   Year County  GDPPC nb        wt       \n  &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;list&gt;    &lt;list&gt;   \n1  2005 Anxiang  8184 &lt;int [6]&gt; &lt;dbl [6]&gt;\n2  2005 Hanshou  6560 &lt;int [6]&gt; &lt;dbl [6]&gt;\n3  2005 Jinshi   9956 &lt;int [5]&gt; &lt;dbl [5]&gt;\n4  2005 Li       8394 &lt;int [5]&gt; &lt;dbl [5]&gt;\n5  2005 Linli    8850 &lt;int [5]&gt; &lt;dbl [5]&gt;\n6  2005 Shimen   9244 &lt;int [6]&gt; &lt;dbl [6]&gt;"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2-EHSA.html#computing-gi-1",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2-EHSA.html#computing-gi-1",
    "title": "In-class Exercise 2: Emerging Hot Spot Analysis: sfdep methods",
    "section": "Computing Gi*",
    "text": "Computing Gi*\nWe can use these new columns to manually calculate the local Gi* for each location. We can do this by grouping by Year and using local_gstar_perm() of sfdep package. After which, we use unnest() to unnest gi_star column of the newly created gi_starts data.frame.\n\n\n\nShow the code\ngi_stars &lt;- GDPPC_nb %&gt;% \n  group_by(Year) %&gt;% \n  mutate(gi_star = local_gstar_perm(\n    GDPPC, nb, wt)) %&gt;% \n  tidyr::unnest(gi_star)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2-EHSA.html#arrange-to-show-significant-emerging-hotcold-spots",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2-EHSA.html#arrange-to-show-significant-emerging-hotcold-spots",
    "title": "In-class Exercise 2: Emerging Hot Spot Analysis: sfdep methods",
    "section": "Arrange to show significant emerging hot/cold spots",
    "text": "Arrange to show significant emerging hot/cold spots\n\n\n\nShow the code\nemerging &lt;- ehsa %&gt;% \n  arrange(sl, abs(tau)) %&gt;% \n  slice(1:5)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2-EHSA.html#performing-emerging-hotspot-analysis",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2-EHSA.html#performing-emerging-hotspot-analysis",
    "title": "In-class Exercise 2: Emerging Hot Spot Analysis: sfdep methods",
    "section": "Performing Emerging Hotspot Analysis",
    "text": "Performing Emerging Hotspot Analysis\nLastly, we will perform EHSA analysis by using emerging_hotspot_analysis() of sfdep package. It takes a spacetime object x (i.e. GDPPC_st), and the quoted name of the variable of interest (i.e. GDPPC) for .var argument. The k argument is used to specify the number of time lags which is set to 1 by default. Lastly, nsim map numbers of simulation to be performed.\n\n\n\nShow the code\nehsa &lt;- emerging_hotspot_analysis(\n  x = GDPPC_st, \n  .var = \"GDPPC\", \n  k = 1, \n  nsim = 99\n)\n\n\n\n\nVisualising the distribution of EHSA classes\nIn the code chunk below, ggplot2 functions ised used to reveal the distribution of EHSA classes as a bar chart.\n\n\n\nShow the code\nggplot(data = ehsa,\n       aes(x = classification)) +\n  geom_bar()\n\n\n\n\n\n\nFigure above shows that sporadic cold spots class has the high numbers of county.\n\n\nVisualising EHSA\nIn this section, you will learn how to visualise the geographic distribution EHSA classes. However, before we can do so, we need to join both hunan and ehsa together by using the code chunk below.\n\n\n\nShow the code\nhunan_ehsa &lt;- hunan %&gt;%\n  left_join(ehsa,\n            by = join_by(County == location))\n\n\n\nNext, tmap functions will be used to plot a categorical choropleth map by using the code chunk below.\n\n\n\nShow the code\nehsa_sig &lt;- hunan_ehsa  %&gt;%\n  filter(p_value &lt; 0.05)\ntmap_mode(\"plot\")\ntm_shape(hunan_ehsa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(ehsa_sig) +\n  tm_fill(\"classification\") + \n  tm_borders(alpha = 0.4)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2-GLSA.html",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2-GLSA.html",
    "title": "In-class Exercise 2: Global and Local Measures of Spatial Association - sfdep methods",
    "section": "",
    "text": "This in-class introduces an alternative R package to spdep package you used in Chapter 9: Global Measures of Spatial Autocorrelation and Chapter 10: Local Measures of Spatial Autocorrelation. The package is called sfdep. According to Josiah Parry, the developer of the package, “sfdep builds on the great shoulders of spdep package for spatial dependence. sfdep creates an sf and tidyverse friendly interface to the package as well as introduces new functionality that is not present in spdep. sfdep utilizes list columns extensively to make this interface possible.”"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2-GLSA.html#overview",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2-GLSA.html#overview",
    "title": "In-class Exercise 2: Global and Local Measures of Spatial Association - sfdep methods",
    "section": "",
    "text": "This in-class introduces an alternative R package to spdep package you used in Chapter 9: Global Measures of Spatial Autocorrelation and Chapter 10: Local Measures of Spatial Autocorrelation. The package is called sfdep. According to Josiah Parry, the developer of the package, “sfdep builds on the great shoulders of spdep package for spatial dependence. sfdep creates an sf and tidyverse friendly interface to the package as well as introduces new functionality that is not present in spdep. sfdep utilizes list columns extensively to make this interface possible.”"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2-GLSA.html#getting-started",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2-GLSA.html#getting-started",
    "title": "In-class Exercise 2: Global and Local Measures of Spatial Association - sfdep methods",
    "section": "Getting started",
    "text": "Getting started\n\nInstalling and Loading the R Packages\nFour R packages will be used for this in-class exercise, they are: sf, sfdep, tmap and tidyverse.\n\n\n\n\n\n\nDo It Yourself!\n\n\n\nUsing the steps you learned in previous lesson, install and load sf, tmap, sfdep and tidyverse packages into R environment.\n\n\n\n\n\nShow the code\npacman::p_load(sf, sfdep, tmap, tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2-GLSA.html#the-data",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2-GLSA.html#the-data",
    "title": "In-class Exercise 2: Global and Local Measures of Spatial Association - sfdep methods",
    "section": "The Data",
    "text": "The Data\nFor the purpose of this in-class exercise, the Hunan data sets will be used. There are two data sets in this use case, they are:\n\nHunan, a geospatial data set in ESRI shapefile format, and\nHunan_2012, an attribute data set in csv format.\n\n\nImporting geospatial data\n\n\n\n\n\n\nDo It Yourself!\n\n\n\nUsing the steps you learned in previous lesson, import Hunan shapefile into R environment as an sf data frame.\n\n\n\n\n\nShow the code\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\n\nReading layer `Hunan' from data source \n  `D:\\tskam\\ISSS624\\In-class_Ex\\In-class_Ex2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n\nImporting attribute table\n\n\n\n\n\n\nDo It Yourself!\n\n\n\nUsing the steps you learned in previous lesson, import Hunan_2012.csv into R environment as an tibble data frame.\n\n\n\n\n\nShow the code\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n\n\nCombining both data frame by using left join\n\n\n\n\n\n\nDo It Yourself!\n\n\n\nUsing the steps you learned in previous lesson, combine the Hunan sf data frame and Hunan_2012 data frame. Ensure that the output is an sf data frame.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nIn order to retain the geospatial properties, the left data frame must the sf data.frame (i.e. hunan)\n\n\n\n\n\nShow the code\nhunan_GDPPC &lt;- left_join(hunan, hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\n\n\n\n\nPlotting a choropleth map\n\n\n\n\n\n\nDo It Yourself!\n\n\n\nUsing the steps you learned in previous lesson, plot a choropleth map showing the distribution of GDPPC of Hunan Province.\n\n\nThe choropleth should look similar to the figure below.\n\n\n\nShow the code\ntmap_mode(\"plot\")\ntm_shape(hunan_GDPPC) +\n  tm_fill(\"GDPPC\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"GDPPC\") +\n  tm_layout(main.title = \"Distribution of GDP per capita by district, Hunan Province\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2-GLSA.html#global-measures-of-spatial-association",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2-GLSA.html#global-measures-of-spatial-association",
    "title": "In-class Exercise 2: Global and Local Measures of Spatial Association - sfdep methods",
    "section": "Global Measures of Spatial Association",
    "text": "Global Measures of Spatial Association\n\nStep 1: Deriving contiguity weights: Queen’s method\n\n\n\n\n\n\nDo it Yourself!\n\n\n\nUsing the steps you learned in previous lesson, derive a Queen’s contiguity weights by using appropriate spdep and tidyverse functions.\n\n\n\n\nDeriving contiguity weights: Queen’s method\nIn the code chunk below, queen method is used to derive the contiguity weights.\n\n\nwm_q &lt;- hunan_GDPPC %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1) \n\n\nNotice that st_weights() provides tree arguments, they are:\n\nnb: A neighbor list object as created by st_neighbors().\nstyle: Default “W” for row standardized weights. This value can also be “B”, “C”, “U”, “minmax”, and “S”. B is the basic binary coding, W is row standardised (sums over all links to n), C is globally standardised (sums over all links to n), U is equal to C divided by the number of neighbours (sums over all links to unity), while S is the variance-stabilizing coding scheme proposed by Tiefelsdorf et al. 1999, p. 167-168 (sums over all links to n).\nallow_zero: If TRUE, assigns zero as lagged value to zone without neighbors.\n\n\n\nwm_q\n\nSimple feature collection with 88 features and 8 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\nFirst 10 features:\n                               nb\n1                 2, 3, 4, 57, 85\n2               1, 57, 58, 78, 85\n3                     1, 4, 5, 85\n4                      1, 3, 5, 6\n5                     3, 4, 6, 85\n6                4, 5, 69, 75, 85\n7                  67, 71, 74, 84\n8       9, 46, 47, 56, 78, 80, 86\n9           8, 66, 68, 78, 84, 86\n10 16, 17, 19, 20, 22, 70, 72, 73\n                                                                            wt\n1                                                      0.2, 0.2, 0.2, 0.2, 0.2\n2                                                      0.2, 0.2, 0.2, 0.2, 0.2\n3                                                       0.25, 0.25, 0.25, 0.25\n4                                                       0.25, 0.25, 0.25, 0.25\n5                                                       0.25, 0.25, 0.25, 0.25\n6                                                      0.2, 0.2, 0.2, 0.2, 0.2\n7                                                       0.25, 0.25, 0.25, 0.25\n8  0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571\n9             0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667\n10                      0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125\n     NAME_2  ID_3    NAME_3   ENGTYPE_3    County GDPPC\n1   Changde 21098   Anxiang      County   Anxiang 23667\n2   Changde 21100   Hanshou      County   Hanshou 20981\n3   Changde 21101    Jinshi County City    Jinshi 34592\n4   Changde 21102        Li      County        Li 24473\n5   Changde 21103     Linli      County     Linli 25554\n6   Changde 21104    Shimen      County    Shimen 27137\n7  Changsha 21109   Liuyang County City   Liuyang 63118\n8  Changsha 21110 Ningxiang      County Ningxiang 62202\n9  Changsha 21111 Wangcheng      County Wangcheng 70666\n10 Chenzhou 21112     Anren      County     Anren 12761\n                         geometry\n1  POLYGON ((112.0625 29.75523...\n2  POLYGON ((112.2288 29.11684...\n3  POLYGON ((111.8927 29.6013,...\n4  POLYGON ((111.3731 29.94649...\n5  POLYGON ((111.6324 29.76288...\n6  POLYGON ((110.8825 30.11675...\n7  POLYGON ((113.9905 28.5682,...\n8  POLYGON ((112.7181 28.38299...\n9  POLYGON ((112.7914 28.52688...\n10 POLYGON ((113.1757 26.82734...\n\n\n\n\n\nComputing Global Moran’ I\nIn the code chunk below, global_moran() function is used to compute the Moran’s I value. Different from spdep package, the output is a tibble data.frame.\n\n\nmoranI &lt;- global_moran(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt)\nglimpse(moranI)\n\nList of 2\n $ I: num 0.301\n $ K: num 7.64\n\n\n\n\n\nPerforming Global Moran’sI test\nIn general, Moran’s I test will be performed instead of just computing the Moran’s I statistics. With sfdep package, Moran’s I test can be performed by using global_moran_test() as shown in the code chunk below.\n\n\nglobal_moran_test(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\n\n\n\n\n\n\nTip\n\n\n\n\nThe default for alternative argument is “two.sided”. Other supported arguments are “greater” or “less”. randomization, and\nBy default the randomization argument is TRUE. If FALSE, under the assumption of normality.\n\n\n\n\n\nPerforming Global Moran’I permutation test\nIn practice, monte carlo simulation should be used to perform the statistical test. For sfdep, it is supported by globel_moran_perm()\nIt is always a good practice to use set.seed() before performing simulation. This is to ensure that the computation is reproducible.\n\nset.seed(1234)\n\nNext, global_moran_perm() is used to perform Monte Carlo simulation.\n\n\nglobal_moran_perm(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt,\n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.30075, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\nThe report above show that the p-value is smaller than alpha value of 0.05. Hence, reject the null hypothesis that the spatial patterns spatial independent. Because the Moran’s I statistics is greater than 0. We can infer the spatial distribution shows sign of clustering.\n\n\n\n\n\n\nReminder\n\n\n\nThe numbers of simulation is alway equal to nsim + 1. This mean in nsim = 99. This mean 100 simulation will be performed."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2-GLSA.html#computing-local-morans-i",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2-GLSA.html#computing-local-morans-i",
    "title": "In-class Exercise 2: Global and Local Measures of Spatial Association - sfdep methods",
    "section": "Computing local Moran’s I",
    "text": "Computing local Moran’s I\nIn this section, you will learn how to compute Local Moran’s I of GDPPC at county level by using local_moran() of sfdep package.\n\n\nlisa &lt;- wm_q %&gt;% \n  mutate(local_moran = local_moran(\n    GDPPC, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\n\nThe output of local_moran() is a sf data.frame containing the columns ii, eii, var_ii, z_ii, p_ii, p_ii_sim, and p_folded_sim.\n\nii: local moran statistic\neii: expectation of local moran statistic; for localmoran_permthe permutation sample means\nvar_ii: variance of local moran statistic; for localmoran_permthe permutation sample standard deviations\nz_ii: standard deviate of local moran statistic; for localmoran_perm based on permutation sample means and standard deviations\np_ii: p-value of local moran statistic using pnorm(); for localmoran_perm using standard deviatse based on permutation sample means and standard deviations\np_ii_sim: For localmoran_perm(), rank() and punif() of observed statistic rank for [0, 1] p-values using alternative=\np_folded_sim: the simulation folded [0, 0.5] range ranked p-value based on crand.py of pysal\nskewness: For localmoran_perm, the output of e1071::skewness() for the permutation samples underlying the standard deviates\nkurtosis: For localmoran_perm, the output of e1071::kurtosis() for the permutation samples underlying the standard deviates.\n\n\n\n\n\n\n\nImportant\n\n\n\nunnest() of tidyr package is used to expand a list-column containing data frames into rows and columns.\n\n\n\nVisualising local Moran’s I\nIn this code chunk below, tmap functions are used prepare a choropleth map by using value in the ii field.\n\n\ntmap_mode(\"plot\")\ntm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of GDPPC\",\n            main.title.size = 0.8)\n\n\n\n\n\n\n\nVisualising p-value of local Moran’s I\nIn the code chunk below, tmap functions are used prepare a choropleth map by using value in the p_ii_sim field.\n\n\ntmap_mode(\"plot\")\ntm_shape(lisa) +\n  tm_fill(\"p_ii_sim\") + \n  tm_borders(alpha = 0.5) +\n   tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nFor p-values, the appropriate classification should be 0.001, 0.01, 0.05 and not significant instead of using default classification scheme.\n\n\n\n\nVisualising local Moran’s I and p-value\nFor effective comparison, it will be better for us to plot both maps next to each other as shown below.\n\n\n\nShow the code\ntmap_mode(\"plot\")\nmap1 &lt;- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of GDPPC\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\n\n\n\n\n\n\n\nVisualising LISA map\nLISA map is a categorical map showing outliers and clusters. There are two types of outliers namely: High-Low and Low-High outliers. Likewise, there are two type of clusters namely: High-High and Low-Low cluaters. In fact, LISA map is an interpreted map by combining local Moran’s I of geographical areas and their respective p-values.\nIn lisa sf data.frame, we can find three fields contain the LISA categories. They are mean, median and pysal. In general, classification in mean will be used as shown in the code chunk below.\n\n\nlisa_sig &lt;- lisa  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\ntmap_mode(\"plot\")\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2-GLSA.html#hot-spot-and-cold-spot-area-analysis-hcsa",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2-GLSA.html#hot-spot-and-cold-spot-area-analysis-hcsa",
    "title": "In-class Exercise 2: Global and Local Measures of Spatial Association - sfdep methods",
    "section": "Hot Spot and Cold Spot Area Analysis (HCSA)",
    "text": "Hot Spot and Cold Spot Area Analysis (HCSA)\nHCSA uses spatial weights to identify locations of statistically significant hot spots and cold spots in an spatially weighted attribute that are in proximity to one another based on a calculated distance. The analysis groups features when similar high (hot) or low (cold) values are found in a cluster. The polygon features usually represent administration boundaries or a custom grid structure."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2-GLSA.html#computing-local-gi-statistics",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2-GLSA.html#computing-local-gi-statistics",
    "title": "In-class Exercise 2: Global and Local Measures of Spatial Association - sfdep methods",
    "section": "Computing local Gi* statistics",
    "text": "Computing local Gi* statistics\n\n\n\n\n\n\nDo It Yourself!\n\n\n\nUsing the steps you learned in previous lesson, derive an inverse distance weights matrix.\n\n\n\n\n\nShow the code\nwm_idw &lt;- hunan_GDPPC %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\n\n\nNext, local_gstar_perm() of sfdep package will be used to compute local Gi* statistics as shown in the code chunk below.\n\n\nHCSA &lt;- wm_idw %&gt;% \n  mutate(local_Gi = local_gstar_perm(\n    GDPPC, nb, wt, nsim = 499),\n         .before = 1) %&gt;%\n  unnest(local_Gi)\nHCSA\n\nSimple feature collection with 88 features and 16 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n# A tibble: 88 × 17\n   gi_star   e_gi    var_gi p_value   p_sim p_folded_sim skewness kurtosis nb   \n     &lt;dbl&gt;  &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;nb&gt; \n 1  0.0416 0.0114   6.24e-6  0.0472 9.62e-1        0.84     0.42     0.739 &lt;int&gt;\n 2 -0.333  0.0112   6.39e-6 -0.301  7.64e-1        0.932    0.466    0.852 &lt;int&gt;\n 3  0.281  0.0125   7.83e-6 -0.0911 9.27e-1        0.872    0.436    1.01  &lt;int&gt;\n 4  0.411  0.0113   7.14e-6  0.508  6.11e-1        0.568    0.284    0.868 &lt;int&gt;\n 5  0.387  0.0114   7.81e-6  0.421  6.74e-1        0.54     0.27     1.25  &lt;int&gt;\n 6 -0.368  0.0116   6.81e-6 -0.478  6.33e-1        0.764    0.382    0.914 &lt;int&gt;\n 7  3.56   0.0146   7.04e-6  2.84   4.56e-3        0.032    0.016    1.09  &lt;int&gt;\n 8  2.52   0.0135   5.08e-6  1.69   9.14e-2        0.148    0.074    0.797 &lt;int&gt;\n 9  4.56   0.0141   4.57e-6  4.12   3.71e-5        0.008    0.004    1.03  &lt;int&gt;\n10  1.16   0.0109   4.92e-6  1.35   1.76e-1        0.208    0.104    0.597 &lt;int&gt;\n# ℹ 78 more rows\n# ℹ 8 more variables: wts &lt;list&gt;, NAME_2 &lt;chr&gt;, ID_3 &lt;int&gt;, NAME_3 &lt;chr&gt;,\n#   ENGTYPE_3 &lt;chr&gt;, County &lt;chr&gt;, GDPPC &lt;dbl&gt;, geometry &lt;POLYGON [°]&gt;\n\n\n\n\nVisualising Gi*\n\n\ntmap_mode(\"plot\")\ntm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8))\n\n\n\n\n\n\n\nVisualising p-value of HCSA\n\n\ntmap_mode(\"plot\")\ntm_shape(HCSA) +\n  tm_fill(\"p_sim\") + \n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\nVisuaising local HCSA\nFor effective comparison, you can plot both maps next to each other as shown below.\n\n\n\nShow the code\ntmap_mode(\"plot\")\nmap1 &lt;- tm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of GDPPC\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(HCSA) +\n  tm_fill(\"p_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n          labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2-GLSA.html#visualising-hot-spot-and-cold-spot-areas",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2-GLSA.html#visualising-hot-spot-and-cold-spot-areas",
    "title": "In-class Exercise 2: Global and Local Measures of Spatial Association - sfdep methods",
    "section": "Visualising hot spot and cold spot areas",
    "text": "Visualising hot spot and cold spot areas\nNow, we are ready to plot the significant (i.e. p-values less than 0.05) hot spot and cold spot areas by using appropriate tmap functions as shown below.\n\n\nHCSA_sig &lt;- HCSA  %&gt;%\n  filter(p_sim &lt; 0.05)\ntmap_mode(\"plot\")\ntm_shape(HCSA) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\nFigure above reveals that there is one hot spot area and two cold spot areas. Interestingly, the hot spot areas coincide with the High-high cluster identifies by using local Moran’s I method in the earlier sub-section."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2-Spatial_Weights.html",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2-Spatial_Weights.html",
    "title": "In-class Exercise 2: Spatial Weights - sfdep methods",
    "section": "",
    "text": "This in-class introduces an alternative R package to spdep package you used in Hands-on Exercise 6. The package is called sfdep. According to Josiah Parry, the developer of the package, “sfdep builds on the great shoulders of spdep package for spatial dependence. sfdep creates an sf and tidyverse friendly interface to the package as well as introduces new functionality that is not present in spdep. sfdep utilizes list columns extensively to make this interface possible.”"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2-Spatial_Weights.html#overview",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2-Spatial_Weights.html#overview",
    "title": "In-class Exercise 2: Spatial Weights - sfdep methods",
    "section": "",
    "text": "This in-class introduces an alternative R package to spdep package you used in Hands-on Exercise 6. The package is called sfdep. According to Josiah Parry, the developer of the package, “sfdep builds on the great shoulders of spdep package for spatial dependence. sfdep creates an sf and tidyverse friendly interface to the package as well as introduces new functionality that is not present in spdep. sfdep utilizes list columns extensively to make this interface possible.”"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2-Spatial_Weights.html#getting-started",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2-Spatial_Weights.html#getting-started",
    "title": "In-class Exercise 2: Spatial Weights - sfdep methods",
    "section": "Getting started",
    "text": "Getting started\n\nInstalling and Loading the R Packages\nFour R packages will be used for this in-class exercise, they are: sf, sfdep, tmap, tidyverse.\n\n\n\n\n\n\nDo It Yourself!\n\n\n\nUsing the steps you learned in previous lesson, install and load sf, tmap, sfdep, tidyverse and knitr packages into R environment.\n\n\n\n\nShow the code\npacman::p_load(sf, sfdep, tmap, tidyverse, knitr)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2-Spatial_Weights.html#the-data",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2-Spatial_Weights.html#the-data",
    "title": "In-class Exercise 2: Spatial Weights - sfdep methods",
    "section": "The Data",
    "text": "The Data\nFor the purpose of this in-class exercise, the Hunan data sets will be used. There are two data sets in this use case, they are:\n\nHunan, a geospatial data set in ESRI shapefile format, and\nHunan_2012, an attribute data set in csv format.\n\n\nImporting geospatial data\n\n\n\n\n\n\nDo It Yourself!\n\n\n\nUsing the steps you learned in previous lesson, import Hunan shapefile into R environment as an sf data frame.\n\n\n\n\nShow the code\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\n\nReading layer `Hunan' from data source \n  `D:\\tskam\\ISSS624\\In-class_Ex\\In-class_Ex2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\nImporting attribute table\n\n\n\n\n\n\nDo It Yourself!\n\n\n\nUsing the steps you learned in previous lesson, import Hunan_2012.csv into R environment as an tibble data frame.\n\n\n\n\nShow the code\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n\nCombining both data frame by using left join\n\n\n\n\n\n\nDo It Yourself!\n\n\n\nUsing the steps you learned in previous lesson, combine the Hunan sf data frame and Hunan_2012 data frame. Ensure that the output is an sf data frame.\n\n\n\n\nShow the code\nhunan_GDPPC &lt;- left_join(hunan, hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\n\n\n\n\n\n\n\nImportant\n\n\n\nIn order to retain the geospatial properties, the left data frame must the sf data.frame (i.e. hunan)\n\n\n\n\nPlotting a choropleth map\n\n\n\n\n\n\nDo It Yourself!\n\n\n\nUsing the steps you learned in previous lesson, plot a choropleth map showing the distribution of GDPPC of Hunan Province.\n\n\nThe choropleth should look similar to ther figure below.\n\n\nShow the code\ntmap_mode(\"plot\")\ntm_shape(hunan_GDPPC) +\n  tm_fill(\"GDPPC\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"GDPPC\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Distribution of GDP per capita by district, Hunan Province\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2-Spatial_Weights.html#deriving-contiguity-spatial-weights",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2-Spatial_Weights.html#deriving-contiguity-spatial-weights",
    "title": "In-class Exercise 2: Spatial Weights - sfdep methods",
    "section": "Deriving Contiguity Spatial Weights",
    "text": "Deriving Contiguity Spatial Weights\nBy and large, there are two types of spatial weights, they are contiguity wights and distance-based weights. In this section, you will learn how to derive contiguity spatial weights by using sfdep.\nTwo steps are required to derive a contiguity spatial weights, they are:\n\nidentifying contiguity neighbour list by st_contiguity() of sfdep package, and\nderiving the contiguity spatial weights by using st_weights() of sfdep package\n\nIn this section, we will learn how to derive the contiguity neighbour list and contiguity spatial weights separately. Then, we will learn how to combine both steps into a single process.\n\nIdentifying contiguity neighbours: Queen’s method\nIn the code chunk below st_contiguity() is used to derive a contiguity neighbour list by using Queen’s method.\n\nnb_queen &lt;- hunan_GDPPC %&gt;% \n  mutate(nb = st_contiguity(geometry),\n         .before = 1)\n\n\n\n\n\n\n\nImportant\n\n\n\nBy default, queen argument is TRUE. If you do not specify queen = FALSE, this function will return a list of first order neighbours by using the Queen criteria. Rooks method will be used to identify the first order neighbour if queen = FALSE is used.\n\n\nThe code chunk below is used to print the summary of the first lag neighbour list (i.e. nb) .\n\nsummary(nb_queen$nb)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nThe summary report above shows that there are 88 area units in Hunan province. The most connected area unit has 11 neighbours. There are two are units with only one neighbour.\nTo view the content of the data table, you can either display the output data frame on RStudio data viewer or by printing out the first ten records by using the code chunk below.\n\nnb_queen\n\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\nFirst 10 features:\n                               nb   NAME_2  ID_3    NAME_3   ENGTYPE_3\n1                 2, 3, 4, 57, 85  Changde 21098   Anxiang      County\n2               1, 57, 58, 78, 85  Changde 21100   Hanshou      County\n3                     1, 4, 5, 85  Changde 21101    Jinshi County City\n4                      1, 3, 5, 6  Changde 21102        Li      County\n5                     3, 4, 6, 85  Changde 21103     Linli      County\n6                4, 5, 69, 75, 85  Changde 21104    Shimen      County\n7                  67, 71, 74, 84 Changsha 21109   Liuyang County City\n8       9, 46, 47, 56, 78, 80, 86 Changsha 21110 Ningxiang      County\n9           8, 66, 68, 78, 84, 86 Changsha 21111 Wangcheng      County\n10 16, 17, 19, 20, 22, 70, 72, 73 Chenzhou 21112     Anren      County\n      County GDPPC                       geometry\n1    Anxiang 23667 POLYGON ((112.0625 29.75523...\n2    Hanshou 20981 POLYGON ((112.2288 29.11684...\n3     Jinshi 34592 POLYGON ((111.8927 29.6013,...\n4         Li 24473 POLYGON ((111.3731 29.94649...\n5      Linli 25554 POLYGON ((111.6324 29.76288...\n6     Shimen 27137 POLYGON ((110.8825 30.11675...\n7    Liuyang 63118 POLYGON ((113.9905 28.5682,...\n8  Ningxiang 62202 POLYGON ((112.7181 28.38299...\n9  Wangcheng 70666 POLYGON ((112.7914 28.52688...\n10     Anren 12761 POLYGON ((113.1757 26.82734...\n\n\nThe print shows that polygon 1 has five neighbours. They are polygons number 2, 3, 4, 57,and 85.\nOne of the advantage of sfdep over spdep is that the output is an sf tibble data frame.\n\n\n\n\n\n\nDo It Yourself!\n\n\n\nUsing the steps you learned in previous lesson, display nb_queen sf tibble data frame in a table display.\n\n\n\n\nShow the code\nkable(head(nb_queen,\n           n=10))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnb\nNAME_2\nID_3\nNAME_3\nENGTYPE_3\nCounty\nGDPPC\ngeometry\n\n\n\n\n2, 3, 4, 57, 85\nChangde\n21098\nAnxiang\nCounty\nAnxiang\n23667\nPOLYGON ((112.0625 29.75523…\n\n\n1, 57, 58, 78, 85\nChangde\n21100\nHanshou\nCounty\nHanshou\n20981\nPOLYGON ((112.2288 29.11684…\n\n\n1, 4, 5, 85\nChangde\n21101\nJinshi\nCounty City\nJinshi\n34592\nPOLYGON ((111.8927 29.6013,…\n\n\n1, 3, 5, 6\nChangde\n21102\nLi\nCounty\nLi\n24473\nPOLYGON ((111.3731 29.94649…\n\n\n3, 4, 6, 85\nChangde\n21103\nLinli\nCounty\nLinli\n25554\nPOLYGON ((111.6324 29.76288…\n\n\n4, 5, 69, 75, 85\nChangde\n21104\nShimen\nCounty\nShimen\n27137\nPOLYGON ((110.8825 30.11675…\n\n\n67, 71, 74, 84\nChangsha\n21109\nLiuyang\nCounty City\nLiuyang\n63118\nPOLYGON ((113.9905 28.5682,…\n\n\n9, 46, 47, 56, 78, 80, 86\nChangsha\n21110\nNingxiang\nCounty\nNingxiang\n62202\nPOLYGON ((112.7181 28.38299…\n\n\n8, 66, 68, 78, 84, 86\nChangsha\n21111\nWangcheng\nCounty\nWangcheng\n70666\nPOLYGON ((112.7914 28.52688…\n\n\n16, 17, 19, 20, 22, 70, 72, 73\nChenzhou\n21112\nAnren\nCounty\nAnren\n12761\nPOLYGON ((113.1757 26.82734…\n\n\n\n\n\n\n\nIdentify contiguity neighbours: Rooks’ method\n\n\n\n\n\n\nDo It Yourself!\n\n\n\nUsing the steps you just learned, derive a contiguity neighbour list using Rooks’ method.\n\n\n\n\nShow the code\nnb_rook &lt;- hunan_GDPPC %&gt;% \n  mutate(nb = st_contiguity(geometry,\n                            queen = FALSE),\n         .before = 1)\n\n\n\n\nIdentifying higher order neighbors\nThere are times that we need to identify high order contiguity neighbours. To accomplish the task, st_nb_lag_cumul() should be used as shown in the code chunk below.\n\n\n\n\n\n\nDo It Yourself!\n\n\n\nUsing the steps you just learned, derive a contiguity neighbour list using lag 2 Queen’s method.\n\n\n\n\nShow the code\nnb2_queen &lt;-  hunan_GDPPC %&gt;% \n  mutate(nb = st_contiguity(geometry),\n         nb2 = st_nb_lag_cumul(nb, 2),\n         .before = 1)\n\n\nNote that if the order is 2, the result contains both 1st and 2nd order neighbors as shown on the print below.\n\nnb2_queen\n\nSimple feature collection with 88 features and 8 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\nFirst 10 features:\n                               nb\n1                 2, 3, 4, 57, 85\n2               1, 57, 58, 78, 85\n3                     1, 4, 5, 85\n4                      1, 3, 5, 6\n5                     3, 4, 6, 85\n6                4, 5, 69, 75, 85\n7                  67, 71, 74, 84\n8       9, 46, 47, 56, 78, 80, 86\n9           8, 66, 68, 78, 84, 86\n10 16, 17, 19, 20, 22, 70, 72, 73\n                                                                                        nb2\n1                                     2, 3, 4, 5, 6, 32, 56, 57, 58, 64, 69, 75, 76, 78, 85\n2                           1, 3, 4, 5, 6, 8, 9, 32, 56, 57, 58, 64, 68, 69, 75, 76, 78, 85\n3                                                 1, 2, 4, 5, 6, 32, 56, 57, 69, 75, 78, 85\n4                                                             1, 2, 3, 5, 6, 57, 69, 75, 85\n5                                                 1, 2, 3, 4, 6, 32, 56, 57, 69, 75, 78, 85\n6                                         1, 2, 3, 4, 5, 32, 53, 55, 56, 57, 69, 75, 78, 85\n7                                                     9, 19, 66, 67, 71, 73, 74, 76, 84, 86\n8  2, 9, 19, 21, 31, 32, 34, 35, 36, 41, 45, 46, 47, 56, 58, 66, 68, 74, 78, 80, 84, 85, 86\n9               2, 7, 8, 19, 21, 35, 46, 47, 56, 58, 66, 67, 68, 74, 76, 78, 80, 84, 85, 86\n10               11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 70, 71, 72, 73, 74, 82, 83, 86\n     NAME_2  ID_3    NAME_3   ENGTYPE_3    County GDPPC\n1   Changde 21098   Anxiang      County   Anxiang 23667\n2   Changde 21100   Hanshou      County   Hanshou 20981\n3   Changde 21101    Jinshi County City    Jinshi 34592\n4   Changde 21102        Li      County        Li 24473\n5   Changde 21103     Linli      County     Linli 25554\n6   Changde 21104    Shimen      County    Shimen 27137\n7  Changsha 21109   Liuyang County City   Liuyang 63118\n8  Changsha 21110 Ningxiang      County Ningxiang 62202\n9  Changsha 21111 Wangcheng      County Wangcheng 70666\n10 Chenzhou 21112     Anren      County     Anren 12761\n                         geometry\n1  POLYGON ((112.0625 29.75523...\n2  POLYGON ((112.2288 29.11684...\n3  POLYGON ((111.8927 29.6013,...\n4  POLYGON ((111.3731 29.94649...\n5  POLYGON ((111.6324 29.76288...\n6  POLYGON ((110.8825 30.11675...\n7  POLYGON ((113.9905 28.5682,...\n8  POLYGON ((112.7181 28.38299...\n9  POLYGON ((112.7914 28.52688...\n10 POLYGON ((113.1757 26.82734..."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2-Spatial_Weights.html#deriving-contiguity-weights-queens-method",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2-Spatial_Weights.html#deriving-contiguity-weights-queens-method",
    "title": "In-class Exercise 2: Spatial Weights - sfdep methods",
    "section": "Deriving contiguity weights: Queen’s method",
    "text": "Deriving contiguity weights: Queen’s method\nNow, you are ready to compute the contiguity weights by using st_weights() of sfdep package.\n\nDeriving contiguity weights: Queen’s method\nIn the code chunk below, queen method is used to derive the contiguity weights.\n\nwm_q &lt;- hunan_GDPPC %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1) \n\nNotice that st_weights() provides tree arguments, they are:\n\nnb: A neighbor list object as created by st_neighbors().\nstyle: Default “W” for row standardized weights. This value can also be “B”, “C”, “U”, “minmax”, and “S”. B is the basic binary coding, W is row standardised (sums over all links to n), C is globally standardised (sums over all links to n), U is equal to C divided by the number of neighbours (sums over all links to unity), while S is the variance-stabilizing coding scheme proposed by Tiefelsdorf et al. 1999, p. 167-168 (sums over all links to n).\nallow_zero: If TRUE, assigns zero as lagged value to zone without neighbors.\n\n\nwm_q\n\nSimple feature collection with 88 features and 8 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\nFirst 10 features:\n                               nb\n1                 2, 3, 4, 57, 85\n2               1, 57, 58, 78, 85\n3                     1, 4, 5, 85\n4                      1, 3, 5, 6\n5                     3, 4, 6, 85\n6                4, 5, 69, 75, 85\n7                  67, 71, 74, 84\n8       9, 46, 47, 56, 78, 80, 86\n9           8, 66, 68, 78, 84, 86\n10 16, 17, 19, 20, 22, 70, 72, 73\n                                                                            wt\n1                                                      0.2, 0.2, 0.2, 0.2, 0.2\n2                                                      0.2, 0.2, 0.2, 0.2, 0.2\n3                                                       0.25, 0.25, 0.25, 0.25\n4                                                       0.25, 0.25, 0.25, 0.25\n5                                                       0.25, 0.25, 0.25, 0.25\n6                                                      0.2, 0.2, 0.2, 0.2, 0.2\n7                                                       0.25, 0.25, 0.25, 0.25\n8  0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571\n9             0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667\n10                      0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125\n     NAME_2  ID_3    NAME_3   ENGTYPE_3    County GDPPC\n1   Changde 21098   Anxiang      County   Anxiang 23667\n2   Changde 21100   Hanshou      County   Hanshou 20981\n3   Changde 21101    Jinshi County City    Jinshi 34592\n4   Changde 21102        Li      County        Li 24473\n5   Changde 21103     Linli      County     Linli 25554\n6   Changde 21104    Shimen      County    Shimen 27137\n7  Changsha 21109   Liuyang County City   Liuyang 63118\n8  Changsha 21110 Ningxiang      County Ningxiang 62202\n9  Changsha 21111 Wangcheng      County Wangcheng 70666\n10 Chenzhou 21112     Anren      County     Anren 12761\n                         geometry\n1  POLYGON ((112.0625 29.75523...\n2  POLYGON ((112.2288 29.11684...\n3  POLYGON ((111.8927 29.6013,...\n4  POLYGON ((111.3731 29.94649...\n5  POLYGON ((111.6324 29.76288...\n6  POLYGON ((110.8825 30.11675...\n7  POLYGON ((113.9905 28.5682,...\n8  POLYGON ((112.7181 28.38299...\n9  POLYGON ((112.7914 28.52688...\n10 POLYGON ((113.1757 26.82734..."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2-Spatial_Weights.html#distance-based-weights",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2-Spatial_Weights.html#distance-based-weights",
    "title": "In-class Exercise 2: Spatial Weights - sfdep methods",
    "section": "Distance-based Weights",
    "text": "Distance-based Weights\nThere are three popularly used distance-based spatial weights, they are:\n\nfixed distance weights,\nadaptive distance weights, and\ninverse distance weights (IDW).\n\n\nDeriving fixed distance weights\nBefore we can derive the fixed distance weights, we need to determine the upper limit for distance band by using the steps below:\n\ngeo &lt;- sf::st_geometry(hunan_GDPPC)\nnb &lt;- st_knn(geo, longlat = TRUE)\ndists &lt;- unlist(st_nb_dists(geo, nb))\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nst_nb_dists() of sfdep is used to calculate the nearest neighbour distance. The output is a list of distances for each observation’s neighbors list.\nunlist() of Base R is then used to return the output as a vector so that the summary statistics of the nearest neighbour distances can be derived.\n\n\n\nNow, we will go ahead to derive summary statistics of the nearest neighbour distances vector (i.e. dists) by usign the coced chunk below.\n\nsummary(dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  21.56   29.11   36.89   37.34   43.21   65.80 \n\n\nThe summary statistics report above shows that the maximum nearest neighbour distance is 65.80km. By using a threshold value of 66km will ensure that each area will have at least one neighbour.\nNow we will go ahead to compute the fixed distance weights by using the code chunk below.\n\nwm_fd &lt;- hunan_GDPPC %&gt;%\n  mutate(nb = st_dist_band(geometry,\n                           upper = 66),\n               wt = st_weights(nb),\n               .before = 1)\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nst_dists_band() of sfdep is used to identify neighbors based on a distance band (i.e. 66km). The output is a list of neighbours (i.e. nb).\nst_weights() is then used to calculate polygon spatial weights of the nb list. Note that:\n\nthe default style argument is set to “W” for row standardized weights, and\nthe default allow_zero is set to TRUE, assigns zero as lagged value to zone without neighbors.\n\n\n\n\n\n\n\n\n\n\nDo It Yourself\n\n\n\nUsing the steps you learned in previous section, examine the data frame of the fixed distance weights.\n\n\n\n\nDeriving adaptive distance weights\nIn this section, you will derive an adaptive spatial weights by using the code chunk below.\n\nwm_ad &lt;- hunan_GDPPC %&gt;% \n  mutate(nb = st_knn(geometry,\n                     k=8),\n         wt = st_weights(nb),\n               .before = 1)\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nst_knn() of sfdep is used to identify neighbors based on k (i.e. k = 8 indicates the nearest eight neighbours). The output is a list of neighbours (i.e. nb).\nst_weights() is then used to calculate polygon spatial weights of the nb list. Note that:\n\nthe default style argument is set to “W” for row standardized weights, and\nthe default allow_zero is set to TRUE, assigns zero as lagged value to zone without neighbors.\n\n\n\n\n\n\nCalculate inverse distance weights\nIn this section, you will derive an inverse distance weights by using the code chunk below.\n\nwm_idw &lt;- hunan_GDPPC %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nst_contiguity() of sfdep is used to identify the neighbours by using contiguity criteria. The output is a list of neighbours (i.e. nb).\nst_inverse_distance() is then used to calculate inverse distance weights of neighbours on the nb list."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/data/geospatial/Business.html",
    "href": "In-class_Ex/In-class_Ex4/data/geospatial/Business.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/data/geospatial/entertn.html",
    "href": "In-class_Ex/In-class_Ex4/data/geospatial/entertn.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/data/geospatial/F&B.html",
    "href": "In-class_Ex/In-class_Ex4/data/geospatial/F&B.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/data/geospatial/FinServ.html",
    "href": "In-class_Ex/In-class_Ex4/data/geospatial/FinServ.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/data/geospatial/Liesure&Recreation.html",
    "href": "In-class_Ex/In-class_Ex4/data/geospatial/Liesure&Recreation.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/data/geospatial/MPSZ-2019.html",
    "href": "In-class_Ex/In-class_Ex4/data/geospatial/MPSZ-2019.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/data/geospatial/Retails.html",
    "href": "In-class_Ex/In-class_Ex4/data/geospatial/Retails.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/In-class_Ex4-GDS.html",
    "href": "In-class_Ex/In-class_Ex4/In-class_Ex4-GDS.html",
    "title": "In-class Exercise 4: Preparing Spatial Interaction Modelling Variables",
    "section": "",
    "text": "A healthy baby need healthy food. Likewise, a well calibrated Spatial Interaction Model need conceptually logical and well prepared propulsiveness and attractiveness variables. In this in-class exercise, you will gain hands-on experience on preparing propulsiveness and attractiveness variables require for calibrating spatial interaction models. By the end of this in-class exercise, you will be able to:\n\nperform geocoding by using SLA OneMap API,\nconvert an aspatial data into a simple feature tibble data.frame,\nperform point-in-polygon count analysis, and\nappend the propulsiveness and attractiveness variables onto a flow data."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/In-class_Ex4-GDS.html#overview",
    "href": "In-class_Ex/In-class_Ex4/In-class_Ex4-GDS.html#overview",
    "title": "In-class Exercise 4: Preparing Spatial Interaction Modelling Variables",
    "section": "",
    "text": "A healthy baby need healthy food. Likewise, a well calibrated Spatial Interaction Model need conceptually logical and well prepared propulsiveness and attractiveness variables. In this in-class exercise, you will gain hands-on experience on preparing propulsiveness and attractiveness variables require for calibrating spatial interaction models. By the end of this in-class exercise, you will be able to:\n\nperform geocoding by using SLA OneMap API,\nconvert an aspatial data into a simple feature tibble data.frame,\nperform point-in-polygon count analysis, and\nappend the propulsiveness and attractiveness variables onto a flow data."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/In-class_Ex4-GDS.html#getting-started",
    "href": "In-class_Ex/In-class_Ex4/In-class_Ex4-GDS.html#getting-started",
    "title": "In-class Exercise 4: Preparing Spatial Interaction Modelling Variables",
    "section": "Getting Started",
    "text": "Getting Started\nTo get start, the following R packages will be loaded into R environment. They are:\n\ntidyverse, provide a family of modern R packages for data import, wrangling\n\n\npacman::p_load(tidyverse, sf, httr,\n               tmap)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/In-class_Ex4-GDS.html#counting-number-of-schools-in-each-ura-planning-subzone",
    "href": "In-class_Ex/In-class_Ex4/In-class_Ex4-GDS.html#counting-number-of-schools-in-each-ura-planning-subzone",
    "title": "In-class Exercise 4: Preparing Spatial Interaction Modelling Variables",
    "section": "Counting number of schools in each URA Planning Subzone",
    "text": "Counting number of schools in each URA Planning Subzone\n\nDownloading General information of schools data from data.gov.sg\nTo get started, you are required to download General information of schools data set of School Directory and Information from data.gov.sg.\n\n\n\n\n\n\nImportant\n\n\n\nWe assume that the downloaded School Directory and Information is placed in a sub-folder called data/aspatial/).\n\n\n\n\nGeocoding using SLA API\nAddress geocoding, or simply geocoding, is the process of taking a aspatial description of a location, such as an address or postcode, and returning geographic coordinates, frequently latitude/longitude pair, to identify a location on the Earth’s surface.\nSingapore Land Authority (SLA) supports an online geocoding service called OneMap API. The Search API looks up the address data or 6-digit postal code for an entered value. It then returns both latitude, longitude and x,y coordinates of the searched location.\nThe code chunks below will perform geocoding using SLA OneMap API. The input data will be in csv file format. It will be read into R Studio environment using read_csv function of readr package. A collection of http call functions of httr package of R will then be used to pass the individual records to the geocoding server at OneMap.\nTwo tibble data.frames will be created if the geocoding process completed successfully. They are called found and not_found. found contains all records that are geocoded correctly and not_found contains postal that failed to be geocoded.\nLastly, the found data table will joined with the initial csv data table by using a unique identifier (i.e. POSTAL) common to both data tables. The output data table will then save as an csv file called found.\n\nurl&lt;-\"https://www.onemap.gov.sg/api/common/elastic/search\"\n\ncsv&lt;-read_csv(\"data/aspatial/Generalinformationofschools.csv\")\npostcodes&lt;-csv$`postal_code`\n\nfound&lt;-data.frame()\nnot_found&lt;-data.frame()\n\nfor(postcode in postcodes){\n  query&lt;-list('searchVal'=postcode,'returnGeom'='Y','getAddrDetails'='Y','pageNum'='1')\n  res&lt;- GET(url,query=query)\n  \n  if((content(res)$found)!=0){\n    found&lt;-rbind(found,data.frame(content(res))[4:13])\n  } else{\n    not_found = data.frame(postcode)\n  }\n}\n\nNext, the code chunk below will be used to combine both found and not_found data.frames into a single tibble data.frame called merged. At the same time, we will write merged and not_found tibble data.frames into two separate csv files called schools and not_found respectively.\n\nmerged = merge(csv, found, by.x = 'postal_code', by.y = 'results.POSTAL', all = TRUE)\nwrite.csv(merged, file = \"data/aspatial/schools.csv\")\nwrite.csv(not_found, file = \"data/aspatial/not_found.csv\")\n\n\n\n\n\n\n\nDo it yourself!\n\n\n\n\nWith the help of Google Map, located the location information of the ungeocoded school by using it’s postcode.\nUpdate the results.LATITUDE and results.LONGITUDE fields of the ungeocoded record in schoolss.csv manually.\n\n\n\n\n\nTidying schools data.frame\nIn this sub-section, you will import schools.csv into R environment and at the same time tidying the data by selecting only the necessary fields as well as rename some fields.\n\n\n\n\n\n\nDo it yourself!\n\n\n\nUsing the steps you learned in Hands-on Exercise 1, perform the following tasks:\n\nimport schools.csv in R environment as an tibble data.frame called schools,\nrename results.LATITUDE and results.LONGITUDE to latitude and longitude respectively,\nretain only postal_code, school_name, latitude and longitude in schools tibble data.frame.\n\n\n\n\n\nShow the code chunk\nschools &lt;- read_csv(\"data/aspatial/schools.csv\") %&gt;%\n  rename(latitude = \"results.LATITUDE\",\n         longitude = \"results.LONGITUDE\")%&gt;%\n  select(postal_code, school_name, latitude, longitude)\n\n\n\n\nConverting an aspatial data into sf tibble data.frame\nNext, you will convert schools tibble data.frame data into a simple feature tibble data.frame called schools_sf by using values in latitude and longitude fields.\n\nRefer to st_as_sf() of sf package.\n\n\n\nShow the code chunk\nschools_sf &lt;- st_as_sf(schools, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %&gt;%\n  st_transform(crs = 3414)\n\n\n\n\nPlotting a point simple feature layer\nTo ensure that schools sf tibble data.frame has been projected and converted correctly, you can plot the schools point data for visual inspection.\nFirst, let us import MPSZ-2019 shapefile into R environment and save it as an sf tibble data.frame called mpsz.\n\n\n\n\n\n\nDo it yourself!\n\n\n\nUsing the step your learned in previous hands-on exercise, import MPSZ-2019 shapefile into R as sf tibble data.frame and name it mpsz.\n\n\n\n\nShow the code chunk\nmpsz &lt;- st_read(dsn = \"data/geospatial/\",\n                layer = \"MPSZ-2019\") %&gt;%\n  st_transform(crs = 3414)\n\n\nReading layer `MPSZ-2019' from data source \n  `D:\\tskam\\ISSS624\\In-class_Ex\\In-class_Ex4\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\nDo it yourself!\nUsing the steps you learned in previous exercises, create a point symbol map showing the location of schools with OSM as the background map.\n\n\n\nShow the code chunk\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz) +\n  tm_polygons() +\ntm_shape(schools_sf) +\n  tm_dots()\n\n\n\n\n\n\n\nPerforming point-in-polygon count process\nNext, we will count the number of schools located inside the planning subzones.\n\n\n\n\n\n\nDo it yourself!\n\n\n\nUsing the steps you learned from previous hands-on exercises, count the number of schools within each planning subzone by using lengths() of Base and st_intersects() of sf package.\n\n\n\n\nShow the code chunk\nmpsz$`SCHOOL_COUNT`&lt;- lengths(\n  st_intersects(\n    mpsz, schools_sf))\n\n\nIt is always a good practice to examine the summary statistics of the derived variable.\n\n\n\n\n\n\nDo it yourself!\n\n\n\nUsing the steps you learned in previous exercises, compute and display the summary statistics of sch_count field.\n\n\n\nsummary(mpsz$SCHOOL_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   0.000   1.054   2.000  12.000 \n\n\n\n\n\n\n\n\nImportant\n\n\n\nThe summary statistics above reveals that there are excessive 0 values in SCHOOL_COUNT field. If log() is going to use to transform this field, additional step is required to ensure that all 0 will be replaced with a value between 0 and 1 but not 0 neither 1."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/In-class_Ex4-GDS.html#data-integration-and-final-touch-up",
    "href": "In-class_Ex/In-class_Ex4/In-class_Ex4-GDS.html#data-integration-and-final-touch-up",
    "title": "In-class Exercise 4: Preparing Spatial Interaction Modelling Variables",
    "section": "Data Integration and Final Touch-up",
    "text": "Data Integration and Final Touch-up\n\n\n\n\n\n\nDo it yourself!\n\n\n\nUsing the steps you learned in earlier sub-sections, count the number of Business points in each planning subzone.\n\n\n\nbusiness_sf &lt;- st_read(dsn = \"data/geospatial\",\n                      layer = \"Business\")\n\nReading layer `Business' from data source \n  `D:\\tskam\\ISSS624\\In-class_Ex\\In-class_Ex4\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 6550 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3669.148 ymin: 25408.41 xmax: 47034.83 ymax: 50148.54\nProjected CRS: SVY21 / Singapore TM\n\n\n\n\nShow the code chunk\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz) +\n  tm_polygons() +\ntm_shape(business_sf) +\n  tm_dots()\n\n\n\n\n\n\n\nShow the code chunk\nmpsz$`BUSINESS_COUNT`&lt;- lengths(\n  st_intersects(\n    mpsz, business_sf))\n\n\n\nsummary(mpsz$BUSINESS_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    2.00   19.73   13.00  307.00 \n\n\nNow, it is time for us to bring in the flow_data.rds saved after Hands-on Exercise 3.\n\n\nShow the code chunk\nflow_data &lt;- read_rds(\"data/rds/flow_data.rds\")\nflow_data\n\n\nSimple feature collection with 14734 features and 10 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 5105.594 ymin: 25813.33 xmax: 49483.22 ymax: 49552.79\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n   ORIGIN_SZ DESTIN_SZ MORNING_PEAK      dist ORIGIN_AGE7_12 ORIGIN_AGE13_24\n1     AMSZ01    AMSZ01         1998   50.0000            310             710\n2     AMSZ01    AMSZ02         8289  810.4491            310             710\n3     AMSZ01    AMSZ03         8971 1360.9294            310             710\n4     AMSZ01    AMSZ04         2252  840.4432            310             710\n5     AMSZ01    AMSZ05         6136 1076.7916            310             710\n6     AMSZ01    AMSZ06         2148  805.2979            310             710\n7     AMSZ01    AMSZ07         1620 1798.7526            310             710\n8     AMSZ01    AMSZ08         1925 2576.0199            310             710\n9     AMSZ01    AMSZ09         1773 1204.2846            310             710\n10    AMSZ01    AMSZ10           63 1417.8035            310             710\n   ORIGIN_AGE25_64 DESTIN_AGE7_12 DESTIN_AGE13_24 DESTIN_AGE25_64\n1             2780         310.00          710.00         2780.00\n2             2780        1140.00         2770.00        15700.00\n3             2780        1010.00         2650.00        14240.00\n4             2780         980.00         2000.00        11320.00\n5             2780         810.00         1920.00         9650.00\n6             2780        1050.00         2390.00        12460.00\n7             2780         420.00         1120.00         3620.00\n8             2780         390.00         1150.00         4350.00\n9             2780        1190.00         3260.00        13350.00\n10            2780           0.99            0.99            0.99\n                         geometry\n1  LINESTRING (29501.77 39419....\n2  LINESTRING (29501.77 39419....\n3  LINESTRING (29501.77 39419....\n4  LINESTRING (29501.77 39419....\n5  LINESTRING (29501.77 39419....\n6  LINESTRING (29501.77 39419....\n7  LINESTRING (29501.77 39419....\n8  LINESTRING (29501.77 39419....\n9  LINESTRING (29501.77 39419....\n10 LINESTRING (29501.77 39419....\n\n\nNotice that this is an sf tibble data.frame and the features are polylines linking the centroid of origins and destination planning subzone.\n\n\n\n\n\n\nDo it yourself\n\n\n\nUsing the steps your learned in Hands-on Exercise 3, append SCHOOL_COUNT and BUSINESS_COUNT into flow_data sf tibble data.frame.\n\n\n\n\nShow the code chunk\nmpsz_tidy &lt;- mpsz %&gt;%\n  st_drop_geometry() %&gt;%\n  select(SUBZONE_C, SCHOOL_COUNT, BUSINESS_COUNT)\n\n\nNow, we will append SCHOOL_COUNT and BUSINESS_COUNT fields from mpsz_tidy data.frame into flow_data sf tibble data.frame by using the code chunk below.\n\nflow_data &lt;- flow_data %&gt;%\n  left_join(mpsz_tidy,\n            by = c(\"DESTIN_SZ\" = \"SUBZONE_C\")) %&gt;%\n  rename(TRIPS = MORNING_PEAK,\n         DIST = dist)\n\n\n\n\n\n\n\nImportant\n\n\n\nNote that the unique join field used is DESTIN_SZ of flow_data and SUBZONE_C of mpsz_tidy. Do you know why?\n\n\n\nChecking for variables with zero values\nSince Poisson Regression is based of log and log 0 is undefined, it is important for us to ensure that no 0 values in the explanatory variables.\nIn the code chunk below, summary() of Base R is used to compute the summary statistics of all variables in wd_od data frame.\n\nsummary(flow_data)\n\n  ORIGIN_SZ          DESTIN_SZ             TRIPS             DIST      \n Length:14734       Length:14734       Min.   :     1   Min.   :   50  \n Class :character   Class :character   1st Qu.:    14   1st Qu.: 3346  \n Mode  :character   Mode  :character   Median :    76   Median : 6067  \n                                       Mean   :  1021   Mean   : 6880  \n                                       3rd Qu.:   426   3rd Qu.: 9729  \n                                       Max.   :232187   Max.   :26136  \n ORIGIN_AGE7_12    ORIGIN_AGE13_24    ORIGIN_AGE25_64    DESTIN_AGE7_12   \n Min.   :   0.99   Min.   :    0.99   Min.   :    0.99   Min.   :   0.99  \n 1st Qu.: 240.00   1st Qu.:  440.00   1st Qu.: 2200.00   1st Qu.: 240.00  \n Median : 700.00   Median : 1350.00   Median : 6810.00   Median : 720.00  \n Mean   :1031.86   Mean   : 2268.84   Mean   :10487.62   Mean   :1033.40  \n 3rd Qu.:1480.00   3rd Qu.: 3260.00   3rd Qu.:15770.00   3rd Qu.:1500.00  \n Max.   :6340.00   Max.   :16380.00   Max.   :74610.00   Max.   :6340.00  \n DESTIN_AGE13_24    DESTIN_AGE25_64     SCHOOL_COUNT    BUSINESS_COUNT  \n Min.   :    0.99   Min.   :    0.99   Min.   : 0.000   Min.   :  0.00  \n 1st Qu.:  460.00   1st Qu.: 2200.00   1st Qu.: 0.000   1st Qu.:  0.00  \n Median : 1420.00   Median : 7030.00   Median : 1.000   Median :  3.00  \n Mean   : 2290.35   Mean   :10574.46   Mean   : 1.583   Mean   : 16.17  \n 3rd Qu.: 3260.00   3rd Qu.:15830.00   3rd Qu.: 2.000   3rd Qu.: 12.00  \n Max.   :16380.00   Max.   :74610.00   Max.   :12.000   Max.   :307.00  \n          geometry    \n LINESTRING   :14734  \n epsg:3414    :    0  \n +proj=tmer...:    0  \n                      \n                      \n                      \n\n\nThe print report above reveals that variables ORIGIN_AGE7_12, ORIGIN_AGE13_24, ORIGIN_AGE25_64, DESTIN_AGE7_12, DESTIN_AGE13_24, DESTIN_AGE25_64 consist of 0 values.\nIn view of this, code chunk below will be used to replace zero values to 0.99.\n\nflow_data$SCHOOL_COUNT &lt;- ifelse(\n  flow_data$SCHOOL_COUNT == 0,\n  0.99, flow_data$SCHOOL_COUNT)\nflow_data$BUSINESS_COUNT &lt;- ifelse(\n  flow_data$BUSINESS_COUNT == 0,\n  0.99, flow_data$BUSINESS_COUNT)\n\nYou can run the summary() again.\n\nsummary(flow_data)\n\n  ORIGIN_SZ          DESTIN_SZ             TRIPS             DIST      \n Length:14734       Length:14734       Min.   :     1   Min.   :   50  \n Class :character   Class :character   1st Qu.:    14   1st Qu.: 3346  \n Mode  :character   Mode  :character   Median :    76   Median : 6067  \n                                       Mean   :  1021   Mean   : 6880  \n                                       3rd Qu.:   426   3rd Qu.: 9729  \n                                       Max.   :232187   Max.   :26136  \n ORIGIN_AGE7_12    ORIGIN_AGE13_24    ORIGIN_AGE25_64    DESTIN_AGE7_12   \n Min.   :   0.99   Min.   :    0.99   Min.   :    0.99   Min.   :   0.99  \n 1st Qu.: 240.00   1st Qu.:  440.00   1st Qu.: 2200.00   1st Qu.: 240.00  \n Median : 700.00   Median : 1350.00   Median : 6810.00   Median : 720.00  \n Mean   :1031.86   Mean   : 2268.84   Mean   :10487.62   Mean   :1033.40  \n 3rd Qu.:1480.00   3rd Qu.: 3260.00   3rd Qu.:15770.00   3rd Qu.:1500.00  \n Max.   :6340.00   Max.   :16380.00   Max.   :74610.00   Max.   :6340.00  \n DESTIN_AGE13_24    DESTIN_AGE25_64     SCHOOL_COUNT    BUSINESS_COUNT  \n Min.   :    0.99   Min.   :    0.99   Min.   : 0.990   Min.   :  0.99  \n 1st Qu.:  460.00   1st Qu.: 2200.00   1st Qu.: 0.990   1st Qu.:  0.99  \n Median : 1420.00   Median : 7030.00   Median : 1.000   Median :  3.00  \n Mean   : 2290.35   Mean   :10574.46   Mean   : 1.987   Mean   : 16.47  \n 3rd Qu.: 3260.00   3rd Qu.:15830.00   3rd Qu.: 2.000   3rd Qu.: 12.00  \n Max.   :16380.00   Max.   :74610.00   Max.   :12.000   Max.   :307.00  \n          geometry    \n LINESTRING   :14734  \n epsg:3414    :    0  \n +proj=tmer...:    0  \n                      \n                      \n                      \n\n\nNotice that all the 0 values have been replaced by 0.99.\nBefore we move on to calibrate the Spatial Interaction Models, let us save flow_data sf tibble data.frame into an rds file. Call the file flow_data_tidy.\n\nwrite_rds(flow_data,\n          \"data/rds/flow_data_tidy.rds\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS624",
    "section": "",
    "text": "Welcome to ISSS624 Geospatial Analytics Applications!\nIn this webpage, I am going to share with you my learning journey of geospatial analytics."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/In-class_Ex4-SIMs.html",
    "href": "In-class_Ex/In-class_Ex4/In-class_Ex4-SIMs.html",
    "title": "In-class Exercise 4: Calibrating Spatial Interaction Models with R",
    "section": "",
    "text": "This in-class exercise is a continuation of Hands-on Exercise 3, In-class Exercise 3 and In-class Exercise 4: Preparing Spatial Interaction Modelling Variables. We will continue our journey of calibrating Spatial Interaction Models by using propulsiveness and attractiveness variables prepared in earlier in-class exercise."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/In-class_Ex4-SIMs.html#overview",
    "href": "In-class_Ex/In-class_Ex4/In-class_Ex4-SIMs.html#overview",
    "title": "In-class Exercise 4: Calibrating Spatial Interaction Models with R",
    "section": "",
    "text": "This in-class exercise is a continuation of Hands-on Exercise 3, In-class Exercise 3 and In-class Exercise 4: Preparing Spatial Interaction Modelling Variables. We will continue our journey of calibrating Spatial Interaction Models by using propulsiveness and attractiveness variables prepared in earlier in-class exercise."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/In-class_Ex4-SIMs.html#getting-started",
    "href": "In-class_Ex/In-class_Ex4/In-class_Ex4-SIMs.html#getting-started",
    "title": "In-class Exercise 4: Calibrating Spatial Interaction Models with R",
    "section": "Getting Started",
    "text": "Getting Started\nFor the purpose of this exercise, five r packages will be used. They are:\n\nsf for importing, integrating, processing and transforming geospatial data.\ntidyverse for importing, integrating, wrangling and visualising data.\ntmap for plotting cartographicquality thematic maps.\nperformance for computing model comparison matrices such as rmse.\nggpubr for creating publication quality statistical graphics.\n\n\n\n\n\n\n\nDo it yourself\n\n\n\nUsing the steps you learned in previous exercises, load the above packages onto R environment.\n\n\n\n\nShow the code chunk\npacman::p_load(tmap, sf, performance, knitr,\n               AER, MASS, ggpubr, tidyverse,\n               epiDisplay)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/In-class_Ex4-SIMs.html#the-data",
    "href": "In-class_Ex/In-class_Ex4/In-class_Ex4-SIMs.html#the-data",
    "title": "In-class Exercise 4: Calibrating Spatial Interaction Models with R",
    "section": "The Data",
    "text": "The Data\nThis exercise is a continuation of Hands-on Exercise 3 and In-class Exercise 4: Preparing Spatial Interaction Modelling Variables. The following data will be used:\n\nflow_data_tidy.rds, weekday morning peak passenger flows at planning subzone level.\nmpsz.rds, URA Master Plan 2019 Planning Subzone boundary in simple feature tibble data frame format.\n\n\nflow_data &lt;- read_rds(\"data/rds/flow_data_tidy.rds\")\n\n\nglimpse(flow_data)\n\nRows: 14,734\nColumns: 13\n$ ORIGIN_SZ       &lt;chr&gt; \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMS…\n$ DESTIN_SZ       &lt;chr&gt; \"AMSZ01\", \"AMSZ02\", \"AMSZ03\", \"AMSZ04\", \"AMSZ05\", \"AMS…\n$ TRIPS           &lt;dbl&gt; 1998, 8289, 8971, 2252, 6136, 2148, 1620, 1925, 1773, …\n$ DIST            &lt;dbl&gt; 50.0000, 810.4491, 1360.9294, 840.4432, 1076.7916, 805…\n$ ORIGIN_AGE7_12  &lt;dbl&gt; 310, 310, 310, 310, 310, 310, 310, 310, 310, 310, 310,…\n$ ORIGIN_AGE13_24 &lt;dbl&gt; 710, 710, 710, 710, 710, 710, 710, 710, 710, 710, 710,…\n$ ORIGIN_AGE25_64 &lt;dbl&gt; 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, …\n$ DESTIN_AGE7_12  &lt;dbl&gt; 310.00, 1140.00, 1010.00, 980.00, 810.00, 1050.00, 420…\n$ DESTIN_AGE13_24 &lt;dbl&gt; 710.00, 2770.00, 2650.00, 2000.00, 1920.00, 2390.00, 1…\n$ DESTIN_AGE25_64 &lt;dbl&gt; 2780.00, 15700.00, 14240.00, 11320.00, 9650.00, 12460.…\n$ SCHOOL_COUNT    &lt;dbl&gt; 0.99, 2.00, 2.00, 1.00, 3.00, 2.00, 0.99, 0.99, 3.00, …\n$ BUSINESS_COUNT  &lt;dbl&gt; 1.00, 0.99, 6.00, 0.99, 0.99, 0.99, 1.00, 117.00, 0.99…\n$ geometry        &lt;LINESTRING [m]&gt; LINESTRING (29501.77 39419...., LINESTRING …\n\n\nNotice that this sf tibble data.frame includes two additional fields namely: SCHOOL_COUNT and BUSINESS_COUNT. Both of them will be used as attractiveness variables when calibrating origin constrained SIM.\nThe code chunk below is used to display the first five columns and rows of flow_data.\n\nkable(head(flow_data[, 1:5], n = 5))\n\n\n\n\n\n\n\n\n\n\n\n\nORIGIN_SZ\nDESTIN_SZ\nTRIPS\nDIST\nORIGIN_AGE7_12\ngeometry\n\n\n\n\nAMSZ01\nAMSZ01\n1998\n50.0000\n310\nLINESTRING (29501.77 39419….\n\n\nAMSZ01\nAMSZ02\n8289\n810.4491\n310\nLINESTRING (29501.77 39419….\n\n\nAMSZ01\nAMSZ03\n8971\n1360.9294\n310\nLINESTRING (29501.77 39419….\n\n\nAMSZ01\nAMSZ04\n2252\n840.4432\n310\nLINESTRING (29501.77 39419….\n\n\nAMSZ01\nAMSZ05\n6136\n1076.7916\n310\nLINESTRING (29501.77 39419….\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nNotice that this data.frame include intra-zonal flow.\n\n\n\nPreparing inter-zonal flow data\nIn general, we will calibrate separate Spatial Interaction Models for inter- and intra-zonal flows. In this hands-on exercise, we will focus our attention on inter-zonal flow. Hence, we need to exclude the intra-zonal flow from flow_data.\nFirst, two new columns called FlowNoIntra and offset will be created by using the code chunk below.\n\nflow_data$FlowNoIntra &lt;- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ, \n  0, flow_data$TRIPS)\nflow_data$offset &lt;- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ, \n  0.000001, 1)\n\nAccording to the syntax used to derive values in FlowNoIntra field, all intra-zonal flow will be given a value of 0 or else the original flow values will be inserted.\nNext, inter-zonal flow will be selected from flow_data and save into a new output data.frame called inter_zonal_flow by using the code chunk below.\n\ninter_zonal_flow &lt;- flow_data %&gt;%\n  filter(FlowNoIntra &gt; 0)\n\nYou are ready to calibrate the Spatial Interaction Models now."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/In-class_Ex4-SIMs.html#model-comparison",
    "href": "In-class_Ex/In-class_Ex4/In-class_Ex4-SIMs.html#model-comparison",
    "title": "In-class Exercise 4: Calibrating Spatial Interaction Models with R",
    "section": "Model comparison",
    "text": "Model comparison\n\nStatistical measures\nAnother useful model performance measure for continuous dependent variable is Root Mean Squared Error. In this sub-section, you will learn how to use compare_performance() of performance package\nFirst of all, let us create a list called model_list by using the code chunk below.\n\nmodel_list &lt;- list(\n  Origin_Constrained = orcSIM_Poisson,\n  Doubly_Constrained = dbcSIM_Poisson)\n\nNext, we will compute the RMSE of all the models in model_list file by using the code chunk below.\n\ncompare_performance(model_list,\n                    metrics = \"RMSE\")\n\n# Comparison of Model Performance Indices\n\nName               | Model |     RMSE\n-------------------------------------\nOrigin_Constrained |   glm | 2613.236\nDoubly_Constrained |   glm | 1906.694\n\n\nThe print above reveals that doubly constrained SIM is the best model among the two SIMs because it has the smallest RMSE value of 1906.694.\n\n\nVisualising fitted values\nIn this section, you will learn how to visualise the observed values and the fitted values.\nFirstly we will extract the fitted values from Origin-constrained Model by using the code chunk below.\n\ndf &lt;- as.data.frame(orcSIM_Poisson$fitted.values) %&gt;%\n  round(digits = 0)\n\nNext, we will append the fitted values into inter_zonal_flow data frame by using the code chunk below.\n\ninter_zonal_flow &lt;- inter_zonal_flow %&gt;%\n  cbind(df) %&gt;%\n  rename(orcTRIPS = \"orcSIM_Poisson.fitted.values\")\n\n\n\n\n\n\n\nTip\n\n\n\nNotice that rename() is used to rename the field name and the $ in the original field name has been replaced with an .. This is because R replaced $ with . during the cbind().\n\n\n\n\n\n\n\n\nDo it yourself\n\n\n\nRepeat the same step for Doubly Constrained Model (i.e. dbcSIM_Poisson)\n\n\n\n\nShow the code chunk\ndf &lt;- as.data.frame(dbcSIM_Poisson$fitted.values) %&gt;%\n  round(digits = 0)\n\n\n\n\nShow the code chunk\ninter_zonal_flow &lt;- inter_zonal_flow %&gt;%\n  cbind(df) %&gt;%\n  rename(dbcTRIPS = \"dbcSIM_Poisson.fitted.values\")\n\n\nNext, two scatterplots will be created by using geom_point() and other appropriate functions of ggplot2 package.\n\norc_p &lt;- ggplot(data = inter_zonal_flow,\n                aes(x = orcTRIPS,\n                    y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm) +\n  coord_cartesian(xlim=c(0,150000),\n                  ylim=c(0,150000))\n\ndbc_p &lt;- ggplot(data = inter_zonal_flow,\n                aes(x = dbcTRIPS,\n                    y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm) +\n  coord_cartesian(xlim=c(0,150000),\n                  ylim=c(0,150000))\n\nNow, we will put all the graphs into a single visual for better comparison by using the code chunk below.\n\nggarrange(orc_p, dbc_p,\n          ncol = 2,\n          nrow = 1)\n\n\n\n\n\n\n\n\n\n\nQuiz\n\n\n\nWhat observation can you draw from the figure above and what follow-up action will you take?"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/In-class_Ex4-SIMs.html#fitting-a-negative-binormial-regression",
    "href": "In-class_Ex/In-class_Ex4/In-class_Ex4-SIMs.html#fitting-a-negative-binormial-regression",
    "title": "In-class Exercise 4: Calibrating Spatial Interaction Models with R",
    "section": "Fitting a Negative Binormial Regression",
    "text": "Fitting a Negative Binormial Regression\nThe negative binomial model is a generalized linear model only when the overdispersion parameter theta is known. In applications, we don’t know it, and it needs to be estimated along with the other parameters in the model.\nglm(., family = negative.binomial(theta)) requires you to have a value theta that you can supply. glm.nb() of MASS package, on the other hand, fits the traditional negative binomial model where theta is estimated. The latter is the on you want; never use the former.\nTheta is not assumed to be 1 in glm.nb(), but it is initialized with an arbitrary value because the way model fitting works with glm.nb() is that an initial guess of the parameter estimates is updated until convergence. The initial value can be supplied to init.theta, but there is no reason to do this in most cases.\n\ndbcSIM_nb &lt;- glm.nb(formula = TRIPS ~ \n                ORIGIN_SZ + \n                DESTIN_SZ +\n                log(DIST),\n                data = inter_zonal_flow,\n              na.action = na.exclude)\nsummary(dbcSIM_nb)\n\n\nCalcRSquared(dbcSIM_nb$y,\n             dbcSIM_nb$fitted.values)\n\n\nggplot(data = dbcSIM_nb,\n                aes(x = dbcSIM_nb$fitted.values,\n                    y = dbcSIM_nb$y)) +\n  geom_point() +\n  geom_smooth(method = lm)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/In-class_Ex4-SIMs.html#origin-production-constrained-sim",
    "href": "In-class_Ex/In-class_Ex4/In-class_Ex4-SIMs.html#origin-production-constrained-sim",
    "title": "In-class Exercise 4: Calibrating Spatial Interaction Models with R",
    "section": "Origin (Production) constrained SIM",
    "text": "Origin (Production) constrained SIM\nIn this section, we will fit an origin constrained SIM by using the equation below.\n ::: {.callout-note} Students are encouraged to revise the lesson slides as well as Sub-section 2.2 of Kingsley E. Haynes and A. Stewart Fotheringham (2020) Gravity and Spatial Interaction Models. :::\n\norcSIM_Poisson &lt;- glm(formula = TRIPS ~ \n                ORIGIN_SZ +\n                log(SCHOOL_COUNT) +\n                log(BUSINESS_COUNT) +\n                log(DIST) - 1,\n              family = poisson(link = \"log\"),\n              data = inter_zonal_flow,\n              na.action = na.exclude)\nsummary(orcSIM_Poisson)\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_SZ + log(SCHOOL_COUNT) + log(BUSINESS_COUNT) + \n    log(DIST) - 1, family = poisson(link = \"log\"), data = inter_zonal_flow, \n    na.action = na.exclude)\n\nCoefficients:\n                      Estimate Std. Error  z value Pr(&gt;|z|)    \nORIGIN_SZAMSZ01     19.8739840  0.0047627  4172.84   &lt;2e-16 ***\nORIGIN_SZAMSZ02     20.5902203  0.0042786  4812.33   &lt;2e-16 ***\nORIGIN_SZAMSZ03     20.2327026  0.0045531  4443.70   &lt;2e-16 ***\nORIGIN_SZAMSZ04     19.7744438  0.0049837  3967.79   &lt;2e-16 ***\nORIGIN_SZAMSZ05     19.6574529  0.0056396  3485.61   &lt;2e-16 ***\nORIGIN_SZAMSZ06     19.9659115  0.0048946  4079.16   &lt;2e-16 ***\nORIGIN_SZAMSZ07     18.6746164  0.0096316  1938.90   &lt;2e-16 ***\nORIGIN_SZAMSZ08     19.2701601  0.0090776  2122.82   &lt;2e-16 ***\nORIGIN_SZAMSZ09     19.9889467  0.0052858  3781.64   &lt;2e-16 ***\nORIGIN_SZAMSZ10     20.3422035  0.0045778  4443.62   &lt;2e-16 ***\nORIGIN_SZAMSZ11     18.3944113  0.0129212  1423.58   &lt;2e-16 ***\nORIGIN_SZAMSZ12     18.3484209  0.0109652  1673.33   &lt;2e-16 ***\nORIGIN_SZBDSZ01     20.9668587  0.0043388  4832.36   &lt;2e-16 ***\nORIGIN_SZBDSZ02     20.4059518  0.0050601  4032.75   &lt;2e-16 ***\nORIGIN_SZBDSZ03     20.6725514  0.0045276  4565.93   &lt;2e-16 ***\nORIGIN_SZBDSZ04     21.6703853  0.0038930  5566.44   &lt;2e-16 ***\nORIGIN_SZBDSZ05     20.7497445  0.0046085  4502.46   &lt;2e-16 ***\nORIGIN_SZBDSZ06     20.9119361  0.0046432  4503.77   &lt;2e-16 ***\nORIGIN_SZBDSZ07     18.9749815  0.0097896  1938.28   &lt;2e-16 ***\nORIGIN_SZBDSZ08     19.1933901  0.0091312  2101.95   &lt;2e-16 ***\nORIGIN_SZBKSZ01     19.5422606  0.0064732  3018.96   &lt;2e-16 ***\nORIGIN_SZBKSZ02     20.1748913  0.0050076  4028.89   &lt;2e-16 ***\nORIGIN_SZBKSZ03     20.3984624  0.0047226  4319.35   &lt;2e-16 ***\nORIGIN_SZBKSZ04     19.6182212  0.0059652  3288.76   &lt;2e-16 ***\nORIGIN_SZBKSZ05     19.6033818  0.0063181  3102.74   &lt;2e-16 ***\nORIGIN_SZBKSZ06     19.7145224  0.0056372  3497.20   &lt;2e-16 ***\nORIGIN_SZBKSZ07     20.4237448  0.0041912  4873.03   &lt;2e-16 ***\nORIGIN_SZBKSZ08     19.7992538  0.0050405  3928.02   &lt;2e-16 ***\nORIGIN_SZBKSZ09     19.7821586  0.0055558  3560.66   &lt;2e-16 ***\nORIGIN_SZBLSZ01     17.7977276  0.0149058  1194.01   &lt;2e-16 ***\nORIGIN_SZBLSZ02     17.4287491  0.0192364   906.03   &lt;2e-16 ***\nORIGIN_SZBLSZ03     16.5884288  0.0459848   360.74   &lt;2e-16 ***\nORIGIN_SZBLSZ04     17.7851626  0.0232823   763.89   &lt;2e-16 ***\nORIGIN_SZBMSZ01     20.0751840  0.0052887  3795.89   &lt;2e-16 ***\nORIGIN_SZBMSZ02     18.6956140  0.0066656  2804.80   &lt;2e-16 ***\nORIGIN_SZBMSZ03     19.3204425  0.0054755  3528.56   &lt;2e-16 ***\nORIGIN_SZBMSZ04     19.4724220  0.0049390  3942.59   &lt;2e-16 ***\nORIGIN_SZBMSZ05     16.9581801  0.0168804  1004.61   &lt;2e-16 ***\nORIGIN_SZBMSZ06     16.9898638  0.0181852   934.27   &lt;2e-16 ***\nORIGIN_SZBMSZ07     19.2868403  0.0056231  3429.91   &lt;2e-16 ***\nORIGIN_SZBMSZ08     19.1477543  0.0055918  3424.28   &lt;2e-16 ***\nORIGIN_SZBMSZ09     18.7564539  0.0086298  2173.46   &lt;2e-16 ***\nORIGIN_SZBMSZ10     18.3617854  0.0089250  2057.35   &lt;2e-16 ***\nORIGIN_SZBMSZ11     18.9167941  0.0063340  2986.54   &lt;2e-16 ***\nORIGIN_SZBMSZ12     18.7874661  0.0093024  2019.63   &lt;2e-16 ***\nORIGIN_SZBMSZ13     19.5654046  0.0057517  3401.70   &lt;2e-16 ***\nORIGIN_SZBMSZ14     19.0685619  0.0063346  3010.24   &lt;2e-16 ***\nORIGIN_SZBMSZ15     19.4403124  0.0058147  3343.30   &lt;2e-16 ***\nORIGIN_SZBMSZ16     18.4469203  0.0092638  1991.28   &lt;2e-16 ***\nORIGIN_SZBMSZ17     18.3430175  0.0157692  1163.22   &lt;2e-16 ***\nORIGIN_SZBPSZ01     20.1806714  0.0053660  3760.81   &lt;2e-16 ***\nORIGIN_SZBPSZ02     19.8116707  0.0061485  3222.19   &lt;2e-16 ***\nORIGIN_SZBPSZ03     19.8467602  0.0059769  3320.57   &lt;2e-16 ***\nORIGIN_SZBPSZ04     20.4613200  0.0048398  4227.72   &lt;2e-16 ***\nORIGIN_SZBPSZ05     20.5379711  0.0043769  4692.39   &lt;2e-16 ***\nORIGIN_SZBPSZ06     18.8948034  0.0093668  2017.21   &lt;2e-16 ***\nORIGIN_SZBPSZ07     19.4104568  0.0087961  2206.70   &lt;2e-16 ***\nORIGIN_SZBSSZ01     20.0139503  0.0056561  3538.45   &lt;2e-16 ***\nORIGIN_SZBSSZ02     20.2543885  0.0047198  4291.38   &lt;2e-16 ***\nORIGIN_SZBSSZ03     19.5428803  0.0052713  3707.41   &lt;2e-16 ***\nORIGIN_SZBTSZ01     20.0198045  0.0058541  3419.77   &lt;2e-16 ***\nORIGIN_SZBTSZ02     19.3618525  0.0081472  2376.51   &lt;2e-16 ***\nORIGIN_SZBTSZ03     19.5883853  0.0068935  2841.59   &lt;2e-16 ***\nORIGIN_SZBTSZ04     18.7720238  0.0103909  1806.58   &lt;2e-16 ***\nORIGIN_SZBTSZ05     18.8069026  0.0120628  1559.08   &lt;2e-16 ***\nORIGIN_SZBTSZ06     18.7068633  0.0094575  1978.00   &lt;2e-16 ***\nORIGIN_SZBTSZ07     17.6292257  0.0141551  1245.43   &lt;2e-16 ***\nORIGIN_SZBTSZ08     18.6989374  0.0109610  1705.94   &lt;2e-16 ***\nORIGIN_SZCBSZ01     18.2189868  0.0548317   332.27   &lt;2e-16 ***\nORIGIN_SZCCSZ01     18.9734563  0.0139450  1360.59   &lt;2e-16 ***\nORIGIN_SZCHSZ01     19.5955119  0.0121035  1619.00   &lt;2e-16 ***\nORIGIN_SZCHSZ02     19.3320960  0.0081620  2368.55   &lt;2e-16 ***\nORIGIN_SZCHSZ03     21.2164518  0.0063552  3338.43   &lt;2e-16 ***\nORIGIN_SZCKSZ01     20.1046845  0.0049333  4075.29   &lt;2e-16 ***\nORIGIN_SZCKSZ02     20.5371946  0.0050256  4086.53   &lt;2e-16 ***\nORIGIN_SZCKSZ03     20.7210560  0.0042184  4912.07   &lt;2e-16 ***\nORIGIN_SZCKSZ04     21.4013886  0.0042524  5032.80   &lt;2e-16 ***\nORIGIN_SZCKSZ05     20.9413146  0.0049434  4236.18   &lt;2e-16 ***\nORIGIN_SZCKSZ06     20.2557727  0.0071832  2819.88   &lt;2e-16 ***\nORIGIN_SZCLSZ01     19.3383703  0.0076634  2523.46   &lt;2e-16 ***\nORIGIN_SZCLSZ02     18.5226956  0.0135522  1366.77   &lt;2e-16 ***\nORIGIN_SZCLSZ03     19.0225512  0.0080145  2373.51   &lt;2e-16 ***\nORIGIN_SZCLSZ04     20.7981505  0.0042400  4905.22   &lt;2e-16 ***\nORIGIN_SZCLSZ05     18.3015625  0.0146815  1246.58   &lt;2e-16 ***\nORIGIN_SZCLSZ06     20.8207386  0.0039567  5262.09   &lt;2e-16 ***\nORIGIN_SZCLSZ07     19.6728958  0.0054199  3629.76   &lt;2e-16 ***\nORIGIN_SZCLSZ08     20.0851929  0.0056956  3526.43   &lt;2e-16 ***\nORIGIN_SZCLSZ09     18.5749589  0.0165415  1122.93   &lt;2e-16 ***\nORIGIN_SZDTSZ02     15.8276209  0.0833992   189.78   &lt;2e-16 ***\nORIGIN_SZDTSZ03     16.2512838  0.0737972   220.22   &lt;2e-16 ***\nORIGIN_SZDTSZ13     16.7744385  0.0312450   536.87   &lt;2e-16 ***\nORIGIN_SZGLSZ01     18.2368248  0.0096104  1897.62   &lt;2e-16 ***\nORIGIN_SZGLSZ02     19.8705255  0.0049014  4054.06   &lt;2e-16 ***\nORIGIN_SZGLSZ03     19.8249435  0.0053109  3732.85   &lt;2e-16 ***\nORIGIN_SZGLSZ04     20.7800335  0.0041261  5036.20   &lt;2e-16 ***\nORIGIN_SZGLSZ05     20.6040494  0.0043049  4786.23   &lt;2e-16 ***\nORIGIN_SZHGSZ01     20.0273475  0.0044824  4468.04   &lt;2e-16 ***\nORIGIN_SZHGSZ02     20.2480656  0.0044575  4542.47   &lt;2e-16 ***\nORIGIN_SZHGSZ03     20.0756442  0.0049003  4096.81   &lt;2e-16 ***\nORIGIN_SZHGSZ04     20.7577748  0.0040465  5129.84   &lt;2e-16 ***\nORIGIN_SZHGSZ05     20.9779992  0.0040123  5228.42   &lt;2e-16 ***\nORIGIN_SZHGSZ06     19.7403058  0.0054229  3640.20   &lt;2e-16 ***\nORIGIN_SZHGSZ07     20.1896268  0.0046051  4384.22   &lt;2e-16 ***\nORIGIN_SZHGSZ08     19.8646492  0.0052403  3790.72   &lt;2e-16 ***\nORIGIN_SZHGSZ09     18.3647736  0.0069196  2654.04   &lt;2e-16 ***\nORIGIN_SZHGSZ10     16.8720475  0.0421046   400.72   &lt;2e-16 ***\nORIGIN_SZJESZ01     20.2673794  0.0046723  4337.79   &lt;2e-16 ***\nORIGIN_SZJESZ02     20.0595982  0.0046503  4313.61   &lt;2e-16 ***\nORIGIN_SZJESZ03     19.9128778  0.0049848  3994.75   &lt;2e-16 ***\nORIGIN_SZJESZ04     18.5053667  0.0099227  1864.94   &lt;2e-16 ***\nORIGIN_SZJESZ05     17.8172930  0.0138840  1283.29   &lt;2e-16 ***\nORIGIN_SZJESZ06     20.0124157  0.0045009  4446.36   &lt;2e-16 ***\nORIGIN_SZJESZ07     18.1821423  0.0117267  1550.49   &lt;2e-16 ***\nORIGIN_SZJESZ08     18.8713046  0.0116456  1620.46   &lt;2e-16 ***\nORIGIN_SZJESZ09     20.5535527  0.0048456  4241.72   &lt;2e-16 ***\nORIGIN_SZJESZ10     18.4922322  0.0191243   966.95   &lt;2e-16 ***\nORIGIN_SZJESZ11     18.2891211  0.0197114   927.85   &lt;2e-16 ***\nORIGIN_SZJWSZ01     20.4912737  0.0063102  3247.35   &lt;2e-16 ***\nORIGIN_SZJWSZ02     20.8236694  0.0042249  4928.82   &lt;2e-16 ***\nORIGIN_SZJWSZ03     21.2587613  0.0039733  5350.40   &lt;2e-16 ***\nORIGIN_SZJWSZ04     20.3816464  0.0046199  4411.67   &lt;2e-16 ***\nORIGIN_SZJWSZ05     18.0607448  0.0128857  1401.61   &lt;2e-16 ***\nORIGIN_SZJWSZ06     18.7015202  0.0107614  1737.83   &lt;2e-16 ***\nORIGIN_SZJWSZ07     17.3991822  0.0277096   627.91   &lt;2e-16 ***\nORIGIN_SZJWSZ08     21.8044465  0.0037356  5836.95   &lt;2e-16 ***\nORIGIN_SZJWSZ09     21.5414930  0.0036033  5978.19   &lt;2e-16 ***\nORIGIN_SZKLSZ01     20.0307712  0.0047868  4184.59   &lt;2e-16 ***\nORIGIN_SZKLSZ02     19.0634769  0.0062318  3059.05   &lt;2e-16 ***\nORIGIN_SZKLSZ03     19.2685700  0.0057172  3370.25   &lt;2e-16 ***\nORIGIN_SZKLSZ04     17.7085067  0.0119809  1478.06   &lt;2e-16 ***\nORIGIN_SZKLSZ05     18.6384471  0.0107596  1732.26   &lt;2e-16 ***\nORIGIN_SZKLSZ06     13.7280296  0.1857160    73.92   &lt;2e-16 ***\nORIGIN_SZKLSZ07     18.6425146  0.0084952  2194.47   &lt;2e-16 ***\nORIGIN_SZKLSZ08     18.0928506  0.0101567  1781.37   &lt;2e-16 ***\nORIGIN_SZLKSZ01     17.8907138  0.0397083   450.55   &lt;2e-16 ***\nORIGIN_SZMDSZ01     18.7605188  0.0285455   657.22   &lt;2e-16 ***\nORIGIN_SZMDSZ02     19.1533927  0.0102815  1862.90   &lt;2e-16 ***\nORIGIN_SZMDSZ03     17.8404982  0.0169690  1051.36   &lt;2e-16 ***\nORIGIN_SZMPSZ01     19.0765941  0.0083937  2272.74   &lt;2e-16 ***\nORIGIN_SZMPSZ02     19.2162527  0.0068331  2812.24   &lt;2e-16 ***\nORIGIN_SZMPSZ03     19.9965344  0.0054569  3664.44   &lt;2e-16 ***\nORIGIN_SZMUSZ02     15.9130765  0.1037472   153.38   &lt;2e-16 ***\nORIGIN_SZNTSZ01     17.0840999  0.0352513   484.64   &lt;2e-16 ***\nORIGIN_SZNTSZ02     16.5792122  0.0233186   710.99   &lt;2e-16 ***\nORIGIN_SZNTSZ03     18.9506415  0.0075957  2494.93   &lt;2e-16 ***\nORIGIN_SZNTSZ05     15.8770261  0.0495825   320.21   &lt;2e-16 ***\nORIGIN_SZNTSZ06     15.3997415  0.0557029   276.46   &lt;2e-16 ***\nORIGIN_SZNVSZ01     20.2241694  0.0043487  4650.65   &lt;2e-16 ***\nORIGIN_SZNVSZ02     19.1897826  0.0065383  2934.97   &lt;2e-16 ***\nORIGIN_SZNVSZ03     18.8854268  0.0080459  2347.22   &lt;2e-16 ***\nORIGIN_SZNVSZ04     18.8940191  0.0090985  2076.61   &lt;2e-16 ***\nORIGIN_SZNVSZ05     17.6278585  0.0168107  1048.61   &lt;2e-16 ***\nORIGIN_SZPGSZ01     19.4825220  0.0122960  1584.46   &lt;2e-16 ***\nORIGIN_SZPGSZ02     19.4726761  0.0073116  2663.25   &lt;2e-16 ***\nORIGIN_SZPGSZ03     20.5515713  0.0045631  4503.86   &lt;2e-16 ***\nORIGIN_SZPGSZ04     21.0527131  0.0041500  5072.89   &lt;2e-16 ***\nORIGIN_SZPGSZ05     20.1436604  0.0057267  3517.48   &lt;2e-16 ***\nORIGIN_SZPLSZ01     19.1832002  0.0120006  1598.53   &lt;2e-16 ***\nORIGIN_SZPLSZ02     18.8752206  0.0149740  1260.53   &lt;2e-16 ***\nORIGIN_SZPLSZ03     18.1000818  0.0371769   486.86   &lt;2e-16 ***\nORIGIN_SZPLSZ04     17.1730559  0.0370280   463.79   &lt;2e-16 ***\nORIGIN_SZPLSZ05     17.9084439  0.0225031   795.82   &lt;2e-16 ***\nORIGIN_SZPNSZ01     21.0804425  0.0044829  4702.41   &lt;2e-16 ***\nORIGIN_SZPNSZ02     19.8822123  0.0111507  1783.05   &lt;2e-16 ***\nORIGIN_SZPNSZ03     17.9293289  0.0193571   926.24   &lt;2e-16 ***\nORIGIN_SZPNSZ04     17.1039594  0.0334954   510.64   &lt;2e-16 ***\nORIGIN_SZPNSZ05     18.2543864  0.0275554   662.46   &lt;2e-16 ***\nORIGIN_SZPRSZ01     19.8777935  0.0117586  1690.49   &lt;2e-16 ***\nORIGIN_SZPRSZ02     21.0751780  0.0044832  4700.88   &lt;2e-16 ***\nORIGIN_SZPRSZ03     20.6717019  0.0045577  4535.55   &lt;2e-16 ***\nORIGIN_SZPRSZ04     19.6365125  0.0074923  2620.90   &lt;2e-16 ***\nORIGIN_SZPRSZ05     21.3132151  0.0042119  5060.24   &lt;2e-16 ***\nORIGIN_SZPRSZ06     18.9314574  0.0117278  1614.24   &lt;2e-16 ***\nORIGIN_SZPRSZ07     17.2822918  0.0162430  1063.98   &lt;2e-16 ***\nORIGIN_SZPRSZ08     19.9267642  0.0062298  3198.62   &lt;2e-16 ***\nORIGIN_SZQTSZ01     19.7357175  0.0066359  2974.08   &lt;2e-16 ***\nORIGIN_SZQTSZ02     19.2082141  0.0061402  3128.26   &lt;2e-16 ***\nORIGIN_SZQTSZ03     19.7771883  0.0056220  3517.83   &lt;2e-16 ***\nORIGIN_SZQTSZ04     18.7114421  0.0072842  2568.76   &lt;2e-16 ***\nORIGIN_SZQTSZ05     19.3049324  0.0062401  3093.69   &lt;2e-16 ***\nORIGIN_SZQTSZ06     19.2643228  0.0065590  2937.09   &lt;2e-16 ***\nORIGIN_SZQTSZ07     18.5697347  0.0095373  1947.06   &lt;2e-16 ***\nORIGIN_SZQTSZ08     19.6147001  0.0061330  3198.21   &lt;2e-16 ***\nORIGIN_SZQTSZ09     19.2550793  0.0069947  2752.82   &lt;2e-16 ***\nORIGIN_SZQTSZ10     19.5801866  0.0064513  3035.07   &lt;2e-16 ***\nORIGIN_SZQTSZ11     17.7398366  0.0143648  1234.95   &lt;2e-16 ***\nORIGIN_SZQTSZ12     17.2420354  0.0186736   923.34   &lt;2e-16 ***\nORIGIN_SZQTSZ13     19.3857418  0.0078878  2457.69   &lt;2e-16 ***\nORIGIN_SZQTSZ14     18.1300753  0.0122096  1484.90   &lt;2e-16 ***\nORIGIN_SZQTSZ15     19.4222283  0.0120871  1606.86   &lt;2e-16 ***\nORIGIN_SZRCSZ01     18.1549045  0.0125108  1451.13   &lt;2e-16 ***\nORIGIN_SZRCSZ06     18.8836400  0.0082161  2298.38   &lt;2e-16 ***\nORIGIN_SZRVSZ01     16.7864438  0.0323796   518.43   &lt;2e-16 ***\nORIGIN_SZRVSZ02     16.4203244  0.0276836   593.14   &lt;2e-16 ***\nORIGIN_SZRVSZ03     16.6453738  0.0244992   679.42   &lt;2e-16 ***\nORIGIN_SZRVSZ04     15.9559213  0.0556344   286.80   &lt;2e-16 ***\nORIGIN_SZRVSZ05     17.0476331  0.0164122  1038.71   &lt;2e-16 ***\nORIGIN_SZSBSZ01     20.0417968  0.0062488  3207.29   &lt;2e-16 ***\nORIGIN_SZSBSZ02     19.1869565  0.0081051  2367.26   &lt;2e-16 ***\nORIGIN_SZSBSZ03     20.5769861  0.0045108  4561.70   &lt;2e-16 ***\nORIGIN_SZSBSZ04     20.5154199  0.0050548  4058.57   &lt;2e-16 ***\nORIGIN_SZSBSZ05     19.6250669  0.0065562  2993.35   &lt;2e-16 ***\nORIGIN_SZSBSZ06     18.8419757  0.0171135  1101.00   &lt;2e-16 ***\nORIGIN_SZSBSZ07     19.4897259  0.0124528  1565.09   &lt;2e-16 ***\nORIGIN_SZSBSZ08     18.7027917  0.0140545  1330.73   &lt;2e-16 ***\nORIGIN_SZSBSZ09     18.8893480  0.0088571  2132.67   &lt;2e-16 ***\nORIGIN_SZSESZ02     20.8962192  0.0041665  5015.34   &lt;2e-16 ***\nORIGIN_SZSESZ03     20.9452771  0.0039737  5270.94   &lt;2e-16 ***\nORIGIN_SZSESZ04     20.6576142  0.0046364  4455.55   &lt;2e-16 ***\nORIGIN_SZSESZ05     19.5170732  0.0058912  3312.92   &lt;2e-16 ***\nORIGIN_SZSESZ06     20.7595824  0.0045747  4537.89   &lt;2e-16 ***\nORIGIN_SZSESZ07     17.6888256  0.0195787   903.47   &lt;2e-16 ***\nORIGIN_SZSGSZ01     19.1359250  0.0085781  2230.79   &lt;2e-16 ***\nORIGIN_SZSGSZ02     18.5614369  0.0102037  1819.10   &lt;2e-16 ***\nORIGIN_SZSGSZ03     19.9933176  0.0050434  3964.23   &lt;2e-16 ***\nORIGIN_SZSGSZ04     20.2426871  0.0047211  4287.71   &lt;2e-16 ***\nORIGIN_SZSGSZ05     18.0114965  0.0107743  1671.70   &lt;2e-16 ***\nORIGIN_SZSGSZ06     20.2593194  0.0044538  4548.76   &lt;2e-16 ***\nORIGIN_SZSGSZ07     19.0763664  0.0062968  3029.54   &lt;2e-16 ***\nORIGIN_SZSKSZ01     19.9222451  0.0085136  2340.04   &lt;2e-16 ***\nORIGIN_SZSKSZ02     20.8633383  0.0055248  3776.33   &lt;2e-16 ***\nORIGIN_SZSKSZ03     19.6528148  0.0080534  2440.33   &lt;2e-16 ***\nORIGIN_SZSKSZ04     18.0754470  0.0275771   655.45   &lt;2e-16 ***\nORIGIN_SZSKSZ05     19.1192521  0.0155579  1228.91   &lt;2e-16 ***\nORIGIN_SZSLSZ01     17.1501034  0.0329384   520.67   &lt;2e-16 ***\nORIGIN_SZSLSZ04     19.5949774  0.0076753  2552.98   &lt;2e-16 ***\nORIGIN_SZSRSZ01     16.9761403  0.0162020  1047.78   &lt;2e-16 ***\nORIGIN_SZTHSZ01     17.9695687  0.0488559   367.81   &lt;2e-16 ***\nORIGIN_SZTHSZ03     18.5427522  0.0223617   829.22   &lt;2e-16 ***\nORIGIN_SZTHSZ04     17.4760374  0.0286247   610.52   &lt;2e-16 ***\nORIGIN_SZTHSZ06     17.8401186  0.0183322   973.16   &lt;2e-16 ***\nORIGIN_SZTMSZ01     20.3406361  0.0056607  3593.33   &lt;2e-16 ***\nORIGIN_SZTMSZ02     22.0307026  0.0037386  5892.85   &lt;2e-16 ***\nORIGIN_SZTMSZ03     21.3451920  0.0040606  5256.65   &lt;2e-16 ***\nORIGIN_SZTMSZ04     20.6611593  0.0049896  4140.87   &lt;2e-16 ***\nORIGIN_SZTMSZ05     19.3323133  0.0112868  1712.82   &lt;2e-16 ***\nORIGIN_SZTNSZ01     17.9513571  0.0128266  1399.54   &lt;2e-16 ***\nORIGIN_SZTNSZ02     18.0267387  0.0098372  1832.51   &lt;2e-16 ***\nORIGIN_SZTNSZ03     17.7253700  0.0134668  1316.23   &lt;2e-16 ***\nORIGIN_SZTNSZ04     19.4474075  0.0073760  2636.59   &lt;2e-16 ***\nORIGIN_SZTPSZ01     19.1078631  0.0065635  2911.25   &lt;2e-16 ***\nORIGIN_SZTPSZ02     20.2837634  0.0041411  4898.18   &lt;2e-16 ***\nORIGIN_SZTPSZ03     19.1838238  0.0059552  3221.37   &lt;2e-16 ***\nORIGIN_SZTPSZ04     19.1805388  0.0054778  3501.53   &lt;2e-16 ***\nORIGIN_SZTPSZ05     19.3718076  0.0058610  3305.18   &lt;2e-16 ***\nORIGIN_SZTPSZ06     19.6605723  0.0054968  3576.70   &lt;2e-16 ***\nORIGIN_SZTPSZ07     19.4499807  0.0060491  3215.36   &lt;2e-16 ***\nORIGIN_SZTPSZ08     18.7996538  0.0095757  1963.28   &lt;2e-16 ***\nORIGIN_SZTPSZ09     19.0025110  0.0067068  2833.31   &lt;2e-16 ***\nORIGIN_SZTPSZ10     18.8899657  0.0076094  2482.46   &lt;2e-16 ***\nORIGIN_SZTPSZ11     19.6277780  0.0053983  3635.93   &lt;2e-16 ***\nORIGIN_SZTPSZ12     19.1471104  0.0065742  2912.45   &lt;2e-16 ***\nORIGIN_SZTSSZ01     17.4901113  0.0478954   365.17   &lt;2e-16 ***\nORIGIN_SZTSSZ02     20.4997466  0.0081850  2504.55   &lt;2e-16 ***\nORIGIN_SZTSSZ03     20.1076553  0.0084728  2373.19   &lt;2e-16 ***\nORIGIN_SZTSSZ04     20.0646610  0.0089008  2254.26   &lt;2e-16 ***\nORIGIN_SZTSSZ05     19.3962067  0.0151392  1281.19   &lt;2e-16 ***\nORIGIN_SZTSSZ06     20.9235857  0.0178278  1173.65   &lt;2e-16 ***\nORIGIN_SZWCSZ01     20.8411600  0.0086519  2408.86   &lt;2e-16 ***\nORIGIN_SZWCSZ02     17.7355404  0.0328889   539.26   &lt;2e-16 ***\nORIGIN_SZWCSZ03     14.9380886  0.1240699   120.40   &lt;2e-16 ***\nORIGIN_SZWDSZ01     21.1969012  0.0037830  5603.23   &lt;2e-16 ***\nORIGIN_SZWDSZ02     20.5930001  0.0044572  4620.13   &lt;2e-16 ***\nORIGIN_SZWDSZ03     21.2521867  0.0041672  5099.85   &lt;2e-16 ***\nORIGIN_SZWDSZ04     21.0702687  0.0048648  4331.13   &lt;2e-16 ***\nORIGIN_SZWDSZ05     20.4008998  0.0051801  3938.35   &lt;2e-16 ***\nORIGIN_SZWDSZ06     20.6669176  0.0049280  4193.78   &lt;2e-16 ***\nORIGIN_SZWDSZ07     19.0500370  0.0082729  2302.71   &lt;2e-16 ***\nORIGIN_SZWDSZ08     19.0816252  0.0080667  2365.49   &lt;2e-16 ***\nORIGIN_SZWDSZ09     21.4182096  0.0040391  5302.73   &lt;2e-16 ***\nORIGIN_SZYSSZ01     19.5355157  0.0057540  3395.14   &lt;2e-16 ***\nORIGIN_SZYSSZ02     20.8737972  0.0048278  4323.64   &lt;2e-16 ***\nORIGIN_SZYSSZ03     21.6614437  0.0040011  5413.81   &lt;2e-16 ***\nORIGIN_SZYSSZ04     20.9305289  0.0043595  4801.10   &lt;2e-16 ***\nORIGIN_SZYSSZ05     20.1727678  0.0058466  3450.34   &lt;2e-16 ***\nORIGIN_SZYSSZ06     19.1481507  0.0116724  1640.47   &lt;2e-16 ***\nORIGIN_SZYSSZ07     18.7919074  0.0141636  1326.78   &lt;2e-16 ***\nORIGIN_SZYSSZ08     19.9733515  0.0061229  3262.07   &lt;2e-16 ***\nORIGIN_SZYSSZ09     20.9366181  0.0040347  5189.15   &lt;2e-16 ***\nlog(SCHOOL_COUNT)    0.4755516  0.0004701  1011.55   &lt;2e-16 ***\nlog(BUSINESS_COUNT)  0.1796905  0.0001856   968.12   &lt;2e-16 ***\nlog(DIST)           -1.6929522  0.0004093 -4136.01   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 189463537  on 14471  degrees of freedom\nResidual deviance:  15526121  on 14189  degrees of freedom\nAIC: 15615824\n\nNumber of Fisher Scoring iterations: 6\n\n\n\n\n\n\n\n\nImportant\n\n\n\n\n\n\n\nGoodness-of-Fit\n\nCalcRSquared &lt;- function(observed, estimated){\n  r &lt;- cor(observed, estimated)\n  R2 &lt;- r^2\n  R2\n}\n\nWe can examine how the constraints hold for destinations this time.\n\nCalcRSquared(orcSIM_Poisson$data$TRIPS, orcSIM_Poisson$fitted.values)\n\n[1] 0.4362208\n\n\n\nperformance_rmse(orcSIM_Poisson, \n                 normalized = FALSE)\n\n[1] 2613.236\n\n\n\n\nDoubly constrained\nIn this section, we will fit a doubly constrained SIM by using the code chunk below.\nThe general formula of Doubly Constrained Spatial Interaction Model\n\ndbcSIM_Poisson &lt;- glm(formula = TRIPS ~ \n                ORIGIN_SZ + \n                DESTIN_SZ +\n                log(DIST),\n              family = poisson(link = \"log\"),\n              data = inter_zonal_flow,\n              na.action = na.exclude)\ndbcSIM_Poisson\n\n\nCall:  glm(formula = TRIPS ~ ORIGIN_SZ + DESTIN_SZ + log(DIST), family = poisson(link = \"log\"), \n    data = inter_zonal_flow, na.action = na.exclude)\n\nCoefficients:\n    (Intercept)  ORIGIN_SZAMSZ02  ORIGIN_SZAMSZ03  ORIGIN_SZAMSZ04  \n     21.8312374        0.5263502        0.3139982       -0.2146257  \nORIGIN_SZAMSZ05  ORIGIN_SZAMSZ06  ORIGIN_SZAMSZ07  ORIGIN_SZAMSZ08  \n     -0.1890446        0.1539201       -0.9826565       -0.4488417  \nORIGIN_SZAMSZ09  ORIGIN_SZAMSZ10  ORIGIN_SZAMSZ11  ORIGIN_SZAMSZ12  \n      0.0713474        0.4313742       -1.4712226       -1.7250733  \nORIGIN_SZBDSZ01  ORIGIN_SZBDSZ02  ORIGIN_SZBDSZ03  ORIGIN_SZBDSZ04  \n      0.8810576        0.1100240        0.3606166        1.4624347  \nORIGIN_SZBDSZ05  ORIGIN_SZBDSZ06  ORIGIN_SZBDSZ07  ORIGIN_SZBDSZ08  \n      0.6207557        0.6712973       -1.2338669       -1.0444562  \nORIGIN_SZBKSZ01  ORIGIN_SZBKSZ02  ORIGIN_SZBKSZ03  ORIGIN_SZBKSZ04  \n     -0.2838426        0.5550522        0.7396640       -0.2242451  \nORIGIN_SZBKSZ05  ORIGIN_SZBKSZ06  ORIGIN_SZBKSZ07  ORIGIN_SZBKSZ08  \n     -0.2371614       -0.1413812        0.7089989       -0.0907065  \nORIGIN_SZBKSZ09  ORIGIN_SZBLSZ01  ORIGIN_SZBLSZ02  ORIGIN_SZBLSZ03  \n     -0.1775146       -2.3684539       -2.8078475       -3.3122763  \nORIGIN_SZBLSZ04  ORIGIN_SZBMSZ01  ORIGIN_SZBMSZ02  ORIGIN_SZBMSZ03  \n     -2.6770542        0.0618035       -1.3535767       -0.7569095  \nORIGIN_SZBMSZ04  ORIGIN_SZBMSZ05  ORIGIN_SZBMSZ06  ORIGIN_SZBMSZ07  \n     -0.2949304       -2.6131992       -3.0315024       -0.6962524  \nORIGIN_SZBMSZ08  ORIGIN_SZBMSZ09  ORIGIN_SZBMSZ10  ORIGIN_SZBMSZ11  \n     -0.9310730       -1.2911253       -1.6687004       -1.1152794  \nORIGIN_SZBMSZ12  ORIGIN_SZBMSZ13  ORIGIN_SZBMSZ14  ORIGIN_SZBMSZ15  \n     -1.5323954       -0.6267376       -1.0475467       -0.5049444  \nORIGIN_SZBMSZ16  ORIGIN_SZBMSZ17  ORIGIN_SZBPSZ01  ORIGIN_SZBPSZ02  \n     -1.5282897       -1.5722349        0.5814175        0.0875442  \nORIGIN_SZBPSZ03  ORIGIN_SZBPSZ04  ORIGIN_SZBPSZ05  ORIGIN_SZBPSZ06  \n      0.3358227        0.6507586        0.9502124       -1.0480314  \nORIGIN_SZBPSZ07  ORIGIN_SZBSSZ01  ORIGIN_SZBSSZ02  ORIGIN_SZBSSZ03  \n     -0.5467931        0.2998334        0.2841036       -0.2331505  \nORIGIN_SZBTSZ01  ORIGIN_SZBTSZ02  ORIGIN_SZBTSZ03  ORIGIN_SZBTSZ04  \n      0.0987284       -0.6261229       -0.4326963       -1.4998668  \nORIGIN_SZBTSZ05  ORIGIN_SZBTSZ06  ORIGIN_SZBTSZ07  ORIGIN_SZBTSZ08  \n     -0.9564768       -1.2853131       -2.3870991       -1.3715855  \nORIGIN_SZCBSZ01  ORIGIN_SZCCSZ01  ORIGIN_SZCHSZ01  ORIGIN_SZCHSZ02  \n     -3.5940232       -0.7008220       -0.9109524       -0.8566547  \nORIGIN_SZCHSZ03  ORIGIN_SZCKSZ01  ORIGIN_SZCKSZ02  ORIGIN_SZCKSZ03  \n      1.1153731        0.3001815        0.7185711        1.1389824  \nORIGIN_SZCKSZ04  ORIGIN_SZCKSZ05  ORIGIN_SZCKSZ06  ORIGIN_SZCLSZ01  \n      1.6281772        0.8338470        0.6528993       -0.7174758  \nORIGIN_SZCLSZ02  ORIGIN_SZCLSZ03  ORIGIN_SZCLSZ04  ORIGIN_SZCLSZ05  \n     -1.7513100       -1.0362873        0.6160017       -2.1005122  \nORIGIN_SZCLSZ06  ORIGIN_SZCLSZ07  ORIGIN_SZCLSZ08  ORIGIN_SZCLSZ09  \n      0.7252108       -0.5343482       -0.2153408       -1.8019961  \nORIGIN_SZDTSZ02  ORIGIN_SZDTSZ03  ORIGIN_SZDTSZ13  ORIGIN_SZGLSZ01  \n     -3.9057711       -3.4152419       -3.0183438       -1.7812384  \nORIGIN_SZGLSZ02  ORIGIN_SZGLSZ03  ORIGIN_SZGLSZ04  ORIGIN_SZGLSZ05  \n     -0.1074991       -0.2461106        0.8657186        0.5871393  \nORIGIN_SZHGSZ01  ORIGIN_SZHGSZ02  ORIGIN_SZHGSZ03  ORIGIN_SZHGSZ04  \n      0.3543819        0.4218178        0.2411309        0.8180622  \nORIGIN_SZHGSZ05  ORIGIN_SZHGSZ06  ORIGIN_SZHGSZ07  ORIGIN_SZHGSZ08  \n      1.2173687       -0.1826300        0.3172839       -0.1151369  \nORIGIN_SZHGSZ09  ORIGIN_SZHGSZ10  ORIGIN_SZJESZ01  ORIGIN_SZJESZ02  \n     -1.2873441       -3.3783178        0.4859234        0.1766088  \nORIGIN_SZJESZ03  ORIGIN_SZJESZ04  ORIGIN_SZJESZ05  ORIGIN_SZJESZ06  \n     -0.2177441       -1.5532182       -2.3332926        0.3007382  \nORIGIN_SZJESZ07  ORIGIN_SZJESZ08  ORIGIN_SZJESZ09  ORIGIN_SZJESZ10  \n     -1.9687994       -1.3032070        0.5762635       -1.4423113  \nORIGIN_SZJESZ11  ORIGIN_SZJWSZ01  ORIGIN_SZJWSZ02  ORIGIN_SZJWSZ03  \n     -1.9720897        0.3808627        0.7963999        1.5429636  \nORIGIN_SZJWSZ04  ORIGIN_SZJWSZ05  ORIGIN_SZJWSZ06  ORIGIN_SZJWSZ07  \n      0.6410760       -2.1571049       -1.5174532       -2.7089963  \nORIGIN_SZJWSZ08  ORIGIN_SZJWSZ09  ORIGIN_SZKLSZ01  ORIGIN_SZKLSZ02  \n      1.5343415        1.8837410        0.1081286       -0.8844695  \nORIGIN_SZKLSZ03  ORIGIN_SZKLSZ04  ORIGIN_SZKLSZ05  ORIGIN_SZKLSZ06  \n     -0.6872640       -2.2090319       -1.1728726       -6.1162315  \nORIGIN_SZKLSZ07  ORIGIN_SZKLSZ08  ORIGIN_SZLKSZ01  ORIGIN_SZMDSZ01  \n     -1.4082749       -1.7781551       -2.0531568       -0.8825639  \nORIGIN_SZMDSZ02  ORIGIN_SZMDSZ03  ORIGIN_SZMPSZ01  ORIGIN_SZMPSZ02  \n     -0.6219993       -2.0840156       -0.9659093       -1.0411153  \nORIGIN_SZMPSZ03  ORIGIN_SZMUSZ02  ORIGIN_SZNTSZ01  ORIGIN_SZNTSZ02  \n      0.0001659       -3.7599031       -3.0388366       -3.4230640  \nORIGIN_SZNTSZ03  ORIGIN_SZNTSZ05  ORIGIN_SZNTSZ06  ORIGIN_SZNVSZ01  \n     -0.9094796       -4.0861681       -3.9497128        0.3235636  \nORIGIN_SZNVSZ02  ORIGIN_SZNVSZ03  ORIGIN_SZNVSZ04  ORIGIN_SZNVSZ05  \n     -0.6946748       -1.0540196       -0.9897977       -2.2578432  \nORIGIN_SZPGSZ01  ORIGIN_SZPGSZ02  ORIGIN_SZPGSZ03  ORIGIN_SZPGSZ04  \n      0.2399827       -0.3352342        0.9515148        1.3998952  \nORIGIN_SZPGSZ05  ORIGIN_SZPLSZ01  ORIGIN_SZPLSZ02  ORIGIN_SZPLSZ03  \n      0.4451629       -0.9705918       -1.0670151       -2.1229124  \nORIGIN_SZPLSZ04  ORIGIN_SZPLSZ05  ORIGIN_SZPNSZ01  ORIGIN_SZPNSZ02  \n     -3.0911932       -2.1705708        0.9052637       -0.1720425  \nORIGIN_SZPNSZ03  ORIGIN_SZPNSZ04  ORIGIN_SZPNSZ05  ORIGIN_SZPRSZ01  \n     -2.3973459       -3.4483689       -2.0588530       -0.6399015  \nORIGIN_SZPRSZ02  ORIGIN_SZPRSZ03  ORIGIN_SZPRSZ04  ORIGIN_SZPRSZ05  \n      0.8122270        0.3990960       -0.8485348        0.8008791  \nORIGIN_SZPRSZ06  ORIGIN_SZPRSZ07  ORIGIN_SZPRSZ08  ORIGIN_SZQTSZ01  \n     -1.4498806       -3.2025045       -0.5862269       -0.1859270  \nORIGIN_SZQTSZ02  ORIGIN_SZQTSZ03  ORIGIN_SZQTSZ04  ORIGIN_SZQTSZ05  \n     -0.8715122       -0.1259816       -1.4620032       -0.6675643  \nORIGIN_SZQTSZ06  ORIGIN_SZQTSZ07  ORIGIN_SZQTSZ08  ORIGIN_SZQTSZ09  \n     -0.8190026       -1.5189403       -0.4976238       -0.9006162  \nORIGIN_SZQTSZ10  ORIGIN_SZQTSZ11  ORIGIN_SZQTSZ12  ORIGIN_SZQTSZ13  \n     -0.6690184       -2.5203437       -3.0461675       -0.7501068  \nORIGIN_SZQTSZ14  ORIGIN_SZQTSZ15  ORIGIN_SZRCSZ01  ORIGIN_SZRCSZ06  \n     -1.9321849       -0.9576828       -1.8167951       -0.5560563  \nORIGIN_SZRVSZ01  ORIGIN_SZRVSZ02  ORIGIN_SZRVSZ03  ORIGIN_SZRVSZ04  \n     -2.8862570       -3.1555662       -2.9836089       -3.5520422  \nORIGIN_SZRVSZ05  ORIGIN_SZSBSZ01  ORIGIN_SZSBSZ02  ORIGIN_SZSBSZ03  \n     -2.5866584        0.2867444       -0.9012334        0.8311038  \nORIGIN_SZSBSZ04  ORIGIN_SZSBSZ05  ORIGIN_SZSBSZ06  ORIGIN_SZSBSZ07  \n      0.4044170       -0.2661845       -0.9023075        0.0505870  \nORIGIN_SZSBSZ08  ORIGIN_SZSBSZ09  ORIGIN_SZSESZ02  ORIGIN_SZSESZ03  \n     -1.1158011       -0.9682835        1.1452735        1.2815277  \nORIGIN_SZSESZ04  ORIGIN_SZSESZ05  ORIGIN_SZSESZ06  ORIGIN_SZSESZ07  \n      0.8085857       -0.2329413        1.0576879       -2.3165908  \nORIGIN_SZSGSZ01  ORIGIN_SZSGSZ02  ORIGIN_SZSGSZ03  ORIGIN_SZSGSZ04  \n     -0.6606350       -1.3638984        0.1152591        0.2954067  \nORIGIN_SZSGSZ05  ORIGIN_SZSGSZ06  ORIGIN_SZSGSZ07  ORIGIN_SZSKSZ01  \n     -2.0792678        0.4563227       -0.8955254       -0.3184402  \nORIGIN_SZSKSZ02  ORIGIN_SZSKSZ03  ORIGIN_SZSKSZ04  ORIGIN_SZSKSZ05  \n      1.1160484       -0.2566692       -1.5781827       -0.2724361  \nORIGIN_SZSLSZ01  ORIGIN_SZSLSZ04  ORIGIN_SZSRSZ01  ORIGIN_SZTHSZ01  \n     -2.4458625       -0.0987076       -2.2584977       -2.5878524  \nORIGIN_SZTHSZ03  ORIGIN_SZTHSZ04  ORIGIN_SZTHSZ06  ORIGIN_SZTMSZ01  \n     -0.8101746       -2.4186655       -1.7080541       -0.2193476  \nORIGIN_SZTMSZ02  ORIGIN_SZTMSZ03  ORIGIN_SZTMSZ04  ORIGIN_SZTMSZ05  \n      1.7772464        1.0051343        0.1642370       -1.2878706  \nORIGIN_SZTNSZ01  ORIGIN_SZTNSZ02  ORIGIN_SZTNSZ03  ORIGIN_SZTNSZ04  \n     -1.7163504       -1.6508988       -2.1545577       -0.3949120  \nORIGIN_SZTPSZ01  ORIGIN_SZTPSZ02  ORIGIN_SZTPSZ03  ORIGIN_SZTPSZ04  \n     -0.8058100        0.5369060       -0.7779333       -0.8153581  \nORIGIN_SZTPSZ05  ORIGIN_SZTPSZ06  ORIGIN_SZTPSZ07  ORIGIN_SZTPSZ08  \n     -0.5073676        0.0847301       -0.5839519       -1.0577941  \nORIGIN_SZTPSZ09  ORIGIN_SZTPSZ10  ORIGIN_SZTPSZ11  ORIGIN_SZTPSZ12  \n     -0.9067707       -1.1362091       -0.2374621       -0.8028874  \nORIGIN_SZTSSZ01  ORIGIN_SZTSSZ02  ORIGIN_SZTSSZ03  ORIGIN_SZTSSZ04  \n     -2.7809271        0.0425804        0.1142369       -0.6186261  \nORIGIN_SZTSSZ05  ORIGIN_SZTSSZ06  ORIGIN_SZWCSZ01  ORIGIN_SZWCSZ02  \n     -1.0846732        0.3980173        1.3545143       -2.9863278  \nORIGIN_SZWCSZ03  ORIGIN_SZWDSZ01  ORIGIN_SZWDSZ02  ORIGIN_SZWDSZ03  \n     -5.0504916        1.5238429        0.2832576        1.3702524  \nORIGIN_SZWDSZ04  ORIGIN_SZWDSZ05  ORIGIN_SZWDSZ06  ORIGIN_SZWDSZ07  \n      1.0248225        0.2356778        0.3146925       -1.4971897  \nORIGIN_SZWDSZ08  ORIGIN_SZWDSZ09  ORIGIN_SZYSSZ01  ORIGIN_SZYSSZ02  \n     -0.8894079        1.4437633       -0.2519398        0.8726785  \nORIGIN_SZYSSZ03  ORIGIN_SZYSSZ04  ORIGIN_SZYSSZ05  ORIGIN_SZYSSZ06  \n      1.7868139        0.8418040        0.4292096       -0.7459961  \nORIGIN_SZYSSZ07  ORIGIN_SZYSSZ08  ORIGIN_SZYSSZ09  DESTIN_SZAMSZ02  \n     -0.8422281        0.1829428        1.1159712        0.0694567  \nDESTIN_SZAMSZ03  DESTIN_SZAMSZ04  DESTIN_SZAMSZ05  DESTIN_SZAMSZ06  \n      0.0760100       -1.1306391       -1.0751133       -0.9624298  \nDESTIN_SZAMSZ07  DESTIN_SZAMSZ08  DESTIN_SZAMSZ09  DESTIN_SZAMSZ10  \n     -1.5060319       -0.4813202       -1.0220675        0.1235142  \nDESTIN_SZAMSZ11  DESTIN_SZAMSZ12  DESTIN_SZBDSZ01  DESTIN_SZBDSZ02  \n     -0.8917993        0.0195208        0.9736349       -0.1969470  \nDESTIN_SZBDSZ03  DESTIN_SZBDSZ04  DESTIN_SZBDSZ05  DESTIN_SZBDSZ06  \n      0.1266471        1.1608485        0.9293840        0.4090567  \nDESTIN_SZBDSZ07  DESTIN_SZBDSZ08  DESTIN_SZBKSZ01  DESTIN_SZBKSZ02  \n     -0.8171478       -1.5895287       -1.3793311       -0.5253670  \nDESTIN_SZBKSZ03  DESTIN_SZBKSZ04  DESTIN_SZBKSZ05  DESTIN_SZBKSZ06  \n     -1.0095362       -0.5662858       -0.9406607       -1.3129276  \nDESTIN_SZBKSZ07  DESTIN_SZBKSZ08  DESTIN_SZBKSZ09  DESTIN_SZBLSZ01  \n      0.0120605       -1.3658471       -0.1771310       -0.8175223  \nDESTIN_SZBLSZ02  DESTIN_SZBLSZ03  DESTIN_SZBLSZ04  DESTIN_SZBMSZ01  \n      0.1631280        1.2598494       -0.5642975        0.6921844  \nDESTIN_SZBMSZ02  DESTIN_SZBMSZ03  DESTIN_SZBMSZ04  DESTIN_SZBMSZ05  \n     -0.1209392       -0.2373881       -0.0407117       -0.2363309  \nDESTIN_SZBMSZ06  DESTIN_SZBMSZ07  DESTIN_SZBMSZ08  DESTIN_SZBMSZ09  \n     -1.1930710        0.4625103       -0.8604731       -2.1290239  \nDESTIN_SZBMSZ10  DESTIN_SZBMSZ11  DESTIN_SZBMSZ12  DESTIN_SZBMSZ13  \n     -1.4617153       -1.3234050       -0.8399230        0.1366529  \nDESTIN_SZBMSZ14  DESTIN_SZBMSZ15  DESTIN_SZBMSZ16  DESTIN_SZBMSZ17  \n     -1.0491968       -0.6726684       -1.4011734       -1.5682752  \nDESTIN_SZBPSZ01  DESTIN_SZBPSZ02  DESTIN_SZBPSZ03  DESTIN_SZBPSZ04  \n     -1.1120017       -2.0833466       -1.6937265       -0.7964999  \nDESTIN_SZBPSZ05  DESTIN_SZBPSZ06  DESTIN_SZBPSZ07  DESTIN_SZBSSZ01  \n      0.2109118       -1.1808365       -0.2077428        0.3164175  \nDESTIN_SZBSSZ02  DESTIN_SZBSSZ03  DESTIN_SZBTSZ01  DESTIN_SZBTSZ02  \n     -0.4852688        0.4130432        0.6215095       -0.0145076  \nDESTIN_SZBTSZ03  DESTIN_SZBTSZ04  DESTIN_SZBTSZ05  DESTIN_SZBTSZ06  \n      0.4919981       -0.6957555        0.3329814       -0.1333295  \nDESTIN_SZBTSZ07  DESTIN_SZBTSZ08  DESTIN_SZCBSZ01  DESTIN_SZCCSZ01  \n     -1.4449581       -0.7079056       -5.7344725       -0.0009541  \nDESTIN_SZCHSZ01  DESTIN_SZCHSZ02  DESTIN_SZCHSZ03  DESTIN_SZCKSZ01  \n     -0.2083016        0.5369606        2.5530638       -0.5725975  \nDESTIN_SZCKSZ02  DESTIN_SZCKSZ03  DESTIN_SZCKSZ04  DESTIN_SZCKSZ05  \n     -1.1181852        0.1156680       -0.8647725       -1.1641791  \nDESTIN_SZCKSZ06  DESTIN_SZCLSZ01  DESTIN_SZCLSZ02  DESTIN_SZCLSZ03  \n     -0.4397612        0.1930552       -2.0436501       -0.9338571  \nDESTIN_SZCLSZ04  DESTIN_SZCLSZ05  DESTIN_SZCLSZ06  DESTIN_SZCLSZ07  \n      0.0532041       -1.0782781        0.4068171       -0.3579507  \nDESTIN_SZCLSZ08  DESTIN_SZCLSZ09  DESTIN_SZDTSZ02  DESTIN_SZDTSZ03  \n     -0.2487993        0.1611080       -1.7308348       -0.5994253  \nDESTIN_SZDTSZ13  DESTIN_SZGLSZ01  DESTIN_SZGLSZ02  DESTIN_SZGLSZ03  \n     -1.3685031       -0.0910001       -0.0692224        0.6493421  \nDESTIN_SZGLSZ04  DESTIN_SZGLSZ05  DESTIN_SZHGSZ01  DESTIN_SZHGSZ02  \n      0.9327947        0.8161728        0.0658625       -0.8134329  \nDESTIN_SZHGSZ03  DESTIN_SZHGSZ04  DESTIN_SZHGSZ05  DESTIN_SZHGSZ06  \n     -1.3546132       -0.4500588       -0.5026431       -0.8673686  \nDESTIN_SZHGSZ07  DESTIN_SZHGSZ08  DESTIN_SZHGSZ09  DESTIN_SZHGSZ10  \n      0.0560490       -0.0443189       -0.0126355       -3.5821793  \nDESTIN_SZJESZ01  DESTIN_SZJESZ02  DESTIN_SZJESZ03  DESTIN_SZJESZ04  \n     -0.3704281       -0.7369159       -0.8985484       -1.0511995  \nDESTIN_SZJESZ05  DESTIN_SZJESZ06  DESTIN_SZJESZ07  DESTIN_SZJESZ08  \n     -1.5324974        0.3105267       -1.3234483       -0.6559742  \nDESTIN_SZJESZ09  DESTIN_SZJESZ10  DESTIN_SZJESZ11  DESTIN_SZJWSZ01  \n      0.2663752        0.8529026        0.5559641       -0.9790971  \nDESTIN_SZJWSZ02  DESTIN_SZJWSZ03  DESTIN_SZJWSZ04  DESTIN_SZJWSZ05  \n     -0.8746590        0.5689062        0.4520963       -1.0249671  \nDESTIN_SZJWSZ06  DESTIN_SZJWSZ07  DESTIN_SZJWSZ08  DESTIN_SZJWSZ09  \n     -0.7451483       -2.8453099       -0.3372309        1.0505330  \nDESTIN_SZKLSZ01  DESTIN_SZKLSZ02  DESTIN_SZKLSZ03  DESTIN_SZKLSZ04  \n     -0.2334836       -0.5416148       -0.8026495       -1.2918594  \nDESTIN_SZKLSZ05  DESTIN_SZKLSZ06  DESTIN_SZKLSZ07  DESTIN_SZKLSZ08  \n     -0.4069101       -2.5333101       -0.6623343       -0.1408205  \nDESTIN_SZLKSZ01  DESTIN_SZMDSZ01  DESTIN_SZMDSZ02  DESTIN_SZMDSZ03  \n     -1.2639235       -1.5655800       -0.9767682       -3.3328109  \nDESTIN_SZMPSZ01  DESTIN_SZMPSZ02  DESTIN_SZMPSZ03  DESTIN_SZMUSZ02  \n     -0.4552859       -0.5386560        0.4952000       -1.4434175  \nDESTIN_SZNTSZ01  DESTIN_SZNTSZ02  DESTIN_SZNTSZ03  DESTIN_SZNTSZ05  \n     -2.9194067       -1.3780179       -0.5044699       -2.0017134  \nDESTIN_SZNTSZ06  DESTIN_SZNVSZ01  DESTIN_SZNVSZ02  DESTIN_SZNVSZ03  \n     -3.8120537       -0.1071506       -0.0274710        0.1076352  \nDESTIN_SZNVSZ04  DESTIN_SZNVSZ05  DESTIN_SZPGSZ01  DESTIN_SZPGSZ02  \n     -1.2087250       -1.0058290       -1.2029931       -1.2878671  \nDESTIN_SZPGSZ03  DESTIN_SZPGSZ04  DESTIN_SZPGSZ05  DESTIN_SZPLSZ01  \n     -0.1520894       -0.1985959       -1.5290983       -0.3567934  \nDESTIN_SZPLSZ02  DESTIN_SZPLSZ03  DESTIN_SZPLSZ04  DESTIN_SZPLSZ05  \n     -1.7114351       -0.3241427       -1.7117196       -0.5086379  \nDESTIN_SZPNSZ01  DESTIN_SZPNSZ02  DESTIN_SZPNSZ03  DESTIN_SZPNSZ04  \n      0.2026781        0.8313754       -0.4041254        1.5814539  \nDESTIN_SZPNSZ05  DESTIN_SZPRSZ01  DESTIN_SZPRSZ02  DESTIN_SZPRSZ03  \n      1.1823430       -1.1057553        0.0895099        0.6921925  \nDESTIN_SZPRSZ04  DESTIN_SZPRSZ05  DESTIN_SZPRSZ06  DESTIN_SZPRSZ07  \n     -0.2848336        0.1744480        0.4279206       -1.5123108  \nDESTIN_SZPRSZ08  DESTIN_SZQTSZ01  DESTIN_SZQTSZ02  DESTIN_SZQTSZ03  \n     -0.5650226       -0.5952360       -0.7728170       -0.5066812  \nDESTIN_SZQTSZ04  DESTIN_SZQTSZ05  DESTIN_SZQTSZ06  DESTIN_SZQTSZ07  \n     -0.6398414       -0.4354527       -0.6597391       -0.9392696  \nDESTIN_SZQTSZ08  DESTIN_SZQTSZ09  DESTIN_SZQTSZ10  DESTIN_SZQTSZ11  \n      0.4617774       -0.3174497        0.1993449        0.2551535  \nDESTIN_SZQTSZ12  DESTIN_SZQTSZ13  DESTIN_SZQTSZ14  DESTIN_SZQTSZ15  \n     -0.1662603        0.5500978        0.5364435        1.3611043  \nDESTIN_SZRCSZ01  DESTIN_SZRCSZ06  DESTIN_SZRVSZ01  DESTIN_SZRVSZ02  \n     -0.1034049       -1.0633902       -1.5486221       -2.4092611  \nDESTIN_SZRVSZ03  DESTIN_SZRVSZ04  DESTIN_SZRVSZ05  DESTIN_SZSBSZ01  \n     -1.5172079       -1.1663615       -2.2404292       -1.3783780  \nDESTIN_SZSBSZ02  DESTIN_SZSBSZ03  DESTIN_SZSBSZ04  DESTIN_SZSBSZ05  \n     -1.4445213        0.5149906        0.2389086       -1.2737442  \nDESTIN_SZSBSZ06  DESTIN_SZSBSZ07  DESTIN_SZSBSZ08  DESTIN_SZSBSZ09  \n     -1.8683520       -0.5993154        0.8156302        0.0900611  \nDESTIN_SZSESZ02  DESTIN_SZSESZ03  DESTIN_SZSESZ04  DESTIN_SZSESZ05  \n     -0.6397704        0.1714103       -1.0596175       -0.8071891  \nDESTIN_SZSESZ06  DESTIN_SZSESZ07  DESTIN_SZSGSZ01  DESTIN_SZSGSZ02  \n     -0.5580934       -3.1448863       -0.1795225       -0.2986570  \nDESTIN_SZSGSZ03  DESTIN_SZSGSZ04  DESTIN_SZSGSZ05  DESTIN_SZSGSZ06  \n     -0.4074671       -0.1505164       -1.9908372        0.6715268  \nDESTIN_SZSGSZ07  DESTIN_SZSISZ01  DESTIN_SZSKSZ01  DESTIN_SZSKSZ02  \n     -0.4494757       -0.5517983       -0.4749154        0.9400302  \nDESTIN_SZSKSZ03  DESTIN_SZSKSZ04  DESTIN_SZSKSZ05  DESTIN_SZSLSZ01  \n     -0.2800377       -1.2570212       -0.2600474       -0.7775604  \nDESTIN_SZSLSZ04  DESTIN_SZSRSZ01  DESTIN_SZTHSZ01  DESTIN_SZTHSZ03  \n     -0.8586515       -1.1370887       -4.3259988       -2.6632914  \nDESTIN_SZTHSZ04  DESTIN_SZTHSZ06  DESTIN_SZTMSZ01  DESTIN_SZTMSZ02  \n     -3.1000906       -2.5952642       -0.2092828        1.8238139  \nDESTIN_SZTMSZ03  DESTIN_SZTMSZ04  DESTIN_SZTMSZ05  DESTIN_SZTNSZ01  \n      0.8518259        1.0222812        0.6323777       -0.3336078  \nDESTIN_SZTNSZ02  DESTIN_SZTNSZ03  DESTIN_SZTNSZ04  DESTIN_SZTPSZ01  \n     -1.0820469       -1.4186505       -0.3058199       -0.4872299  \nDESTIN_SZTPSZ02  DESTIN_SZTPSZ03  DESTIN_SZTPSZ04  DESTIN_SZTPSZ05  \n      0.7158441       -0.4314229       -1.5898245       -1.0445550  \nDESTIN_SZTPSZ06  DESTIN_SZTPSZ07  DESTIN_SZTPSZ08  DESTIN_SZTPSZ09  \n     -0.4319582       -2.1602303       -1.1920493       -0.2022481  \nDESTIN_SZTPSZ10  DESTIN_SZTPSZ11  DESTIN_SZTPSZ12  DESTIN_SZTSSZ01  \n     -1.2464793       -0.0808445       -0.6784376       -1.5845062  \nDESTIN_SZTSSZ02  DESTIN_SZTSSZ03  DESTIN_SZTSSZ04  DESTIN_SZTSSZ05  \n     -0.1886010        0.6525526        0.5285464        1.4670106  \nDESTIN_SZTSSZ06  DESTIN_SZWCSZ01  DESTIN_SZWCSZ02  DESTIN_SZWCSZ03  \n      2.5043588        1.9787931       -2.2593108       -3.1897655  \nDESTIN_SZWDSZ01  DESTIN_SZWDSZ02  DESTIN_SZWDSZ03  DESTIN_SZWDSZ04  \n      1.0476108       -1.3176990        0.3432057       -0.7895927  \nDESTIN_SZWDSZ05  DESTIN_SZWDSZ06  DESTIN_SZWDSZ07  DESTIN_SZWDSZ08  \n     -0.8751665       -0.2106221       -1.6050834       -0.5124717  \nDESTIN_SZWDSZ09  DESTIN_SZYSSZ01  DESTIN_SZYSSZ02  DESTIN_SZYSSZ03  \n      0.3813542        0.0853753       -0.3227172       -0.4151283  \nDESTIN_SZYSSZ04  DESTIN_SZYSSZ05  DESTIN_SZYSSZ06  DESTIN_SZYSSZ07  \n     -0.4637327       -1.5888242       -1.4606209       -0.7839065  \nDESTIN_SZYSSZ08  DESTIN_SZYSSZ09        log(DIST)  \n      0.6265412        0.1520067       -1.8468315  \n\nDegrees of Freedom: 14470 Total (i.e. Null);  13912 Residual\nNull Deviance:      47090000 \nResidual Deviance: 10420000     AIC: 10510000\n\n\nWe can examine how the constraints hold for destinations this time.\n\nCalcRSquared(dbcSIM_Poisson$data$TRIPS,\n             dbcSIM_Poisson$fitted.values)\n\n[1] 0.7001882\n\n\nNotice that there is a relatively greater improvement in the R^2 value.\nSimilary, we can compute the rmse of the model by using the code chunk below.\n\nperformance_rmse(dbcSIM_Poisson, \n                 normalized = FALSE)\n\n[1] 1906.694"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/In-class_Ex4-SIMs.html#calibrating-spatial-interaction-models",
    "href": "In-class_Ex/In-class_Ex4/In-class_Ex4-SIMs.html#calibrating-spatial-interaction-models",
    "title": "In-class Exercise 4: Calibrating Spatial Interaction Models with R",
    "section": "Calibrating Spatial Interaction Models",
    "text": "Calibrating Spatial Interaction Models\nIn this section, we will focus on calibrating an origin constrained SIM and a doubly constrained by using flow_data prepared. They complement what you have learned in Hands-on Exercise 3.\n\n\n\n\n\n\nNote\n\n\n\nStudents are encouraged to revise the lesson slides as well as Sub-section 2.2 of Kingsley E. Haynes and A. Stewart Fotheringham (2020) Gravity and Spatial Interaction Models.\n\n\n\nOrigin- (Production-) constrained Model\nFigure below shows the general formula of the origin-constrained model.\n\nCode chunk below shows the calibration of the model by using glm() of R and flow_data.\n\norcSIM_Poisson &lt;- glm(formula = TRIPS ~ \n                ORIGIN_SZ +\n                log(SCHOOL_COUNT) +\n                log(BUSINESS_COUNT) +\n                log(DIST) - 1,\n              family = poisson(link = \"log\"),\n              data = inter_zonal_flow,\n              na.action = na.exclude)\nsummary(orcSIM_Poisson)\n\n\n\n\n\n\n\nThings to learning from the conde chunk\n\n\n\n\nFor origin-constrained model, only explanatory variables representing the attractiveness at the destinations will be used.\nAll the explanatory variables including distance will be log transformed.\nORIGIN_SZ is used to model 𝜇𝑖 . It must be in categorical data type.\nIt is important to note that -1 is added in the equation after the distance variable. The -1 serves the purpose of removing the intercept that by default, glm will insert into the model.\n\n\n\n\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_SZ + log(SCHOOL_COUNT) + log(BUSINESS_COUNT) + \n    log(DIST) - 1, family = poisson(link = \"log\"), data = inter_zonal_flow, \n    na.action = na.exclude)\n\nCoefficients:\n                      Estimate Std. Error  z value Pr(&gt;|z|)    \nORIGIN_SZAMSZ01     19.8739840  0.0047627  4172.84   &lt;2e-16 ***\nORIGIN_SZAMSZ02     20.5902203  0.0042786  4812.33   &lt;2e-16 ***\nORIGIN_SZAMSZ03     20.2327026  0.0045531  4443.70   &lt;2e-16 ***\nORIGIN_SZAMSZ04     19.7744438  0.0049837  3967.79   &lt;2e-16 ***\nORIGIN_SZAMSZ05     19.6574529  0.0056396  3485.61   &lt;2e-16 ***\nORIGIN_SZAMSZ06     19.9659115  0.0048946  4079.16   &lt;2e-16 ***\nORIGIN_SZAMSZ07     18.6746164  0.0096316  1938.90   &lt;2e-16 ***\nORIGIN_SZAMSZ08     19.2701601  0.0090776  2122.82   &lt;2e-16 ***\nORIGIN_SZAMSZ09     19.9889467  0.0052858  3781.64   &lt;2e-16 ***\nORIGIN_SZAMSZ10     20.3422035  0.0045778  4443.62   &lt;2e-16 ***\nORIGIN_SZAMSZ11     18.3944113  0.0129212  1423.58   &lt;2e-16 ***\nORIGIN_SZAMSZ12     18.3484209  0.0109652  1673.33   &lt;2e-16 ***\nORIGIN_SZBDSZ01     20.9668587  0.0043388  4832.36   &lt;2e-16 ***\nORIGIN_SZBDSZ02     20.4059518  0.0050601  4032.75   &lt;2e-16 ***\nORIGIN_SZBDSZ03     20.6725514  0.0045276  4565.93   &lt;2e-16 ***\nORIGIN_SZBDSZ04     21.6703853  0.0038930  5566.44   &lt;2e-16 ***\nORIGIN_SZBDSZ05     20.7497445  0.0046085  4502.46   &lt;2e-16 ***\nORIGIN_SZBDSZ06     20.9119361  0.0046432  4503.77   &lt;2e-16 ***\nORIGIN_SZBDSZ07     18.9749815  0.0097896  1938.28   &lt;2e-16 ***\nORIGIN_SZBDSZ08     19.1933901  0.0091312  2101.95   &lt;2e-16 ***\nORIGIN_SZBKSZ01     19.5422606  0.0064732  3018.96   &lt;2e-16 ***\nORIGIN_SZBKSZ02     20.1748913  0.0050076  4028.89   &lt;2e-16 ***\nORIGIN_SZBKSZ03     20.3984624  0.0047226  4319.35   &lt;2e-16 ***\nORIGIN_SZBKSZ04     19.6182212  0.0059652  3288.76   &lt;2e-16 ***\nORIGIN_SZBKSZ05     19.6033818  0.0063181  3102.74   &lt;2e-16 ***\nORIGIN_SZBKSZ06     19.7145224  0.0056372  3497.20   &lt;2e-16 ***\nORIGIN_SZBKSZ07     20.4237448  0.0041912  4873.03   &lt;2e-16 ***\nORIGIN_SZBKSZ08     19.7992538  0.0050405  3928.02   &lt;2e-16 ***\nORIGIN_SZBKSZ09     19.7821586  0.0055558  3560.66   &lt;2e-16 ***\nORIGIN_SZBLSZ01     17.7977276  0.0149058  1194.01   &lt;2e-16 ***\nORIGIN_SZBLSZ02     17.4287491  0.0192364   906.03   &lt;2e-16 ***\nORIGIN_SZBLSZ03     16.5884288  0.0459848   360.74   &lt;2e-16 ***\nORIGIN_SZBLSZ04     17.7851626  0.0232823   763.89   &lt;2e-16 ***\nORIGIN_SZBMSZ01     20.0751840  0.0052887  3795.89   &lt;2e-16 ***\nORIGIN_SZBMSZ02     18.6956140  0.0066656  2804.80   &lt;2e-16 ***\nORIGIN_SZBMSZ03     19.3204425  0.0054755  3528.56   &lt;2e-16 ***\nORIGIN_SZBMSZ04     19.4724220  0.0049390  3942.59   &lt;2e-16 ***\nORIGIN_SZBMSZ05     16.9581801  0.0168804  1004.61   &lt;2e-16 ***\nORIGIN_SZBMSZ06     16.9898638  0.0181852   934.27   &lt;2e-16 ***\nORIGIN_SZBMSZ07     19.2868403  0.0056231  3429.91   &lt;2e-16 ***\nORIGIN_SZBMSZ08     19.1477543  0.0055918  3424.28   &lt;2e-16 ***\nORIGIN_SZBMSZ09     18.7564539  0.0086298  2173.46   &lt;2e-16 ***\nORIGIN_SZBMSZ10     18.3617854  0.0089250  2057.35   &lt;2e-16 ***\nORIGIN_SZBMSZ11     18.9167941  0.0063340  2986.54   &lt;2e-16 ***\nORIGIN_SZBMSZ12     18.7874661  0.0093024  2019.63   &lt;2e-16 ***\nORIGIN_SZBMSZ13     19.5654046  0.0057517  3401.70   &lt;2e-16 ***\nORIGIN_SZBMSZ14     19.0685619  0.0063346  3010.24   &lt;2e-16 ***\nORIGIN_SZBMSZ15     19.4403124  0.0058147  3343.30   &lt;2e-16 ***\nORIGIN_SZBMSZ16     18.4469203  0.0092638  1991.28   &lt;2e-16 ***\nORIGIN_SZBMSZ17     18.3430175  0.0157692  1163.22   &lt;2e-16 ***\nORIGIN_SZBPSZ01     20.1806714  0.0053660  3760.81   &lt;2e-16 ***\nORIGIN_SZBPSZ02     19.8116707  0.0061485  3222.19   &lt;2e-16 ***\nORIGIN_SZBPSZ03     19.8467602  0.0059769  3320.57   &lt;2e-16 ***\nORIGIN_SZBPSZ04     20.4613200  0.0048398  4227.72   &lt;2e-16 ***\nORIGIN_SZBPSZ05     20.5379711  0.0043769  4692.39   &lt;2e-16 ***\nORIGIN_SZBPSZ06     18.8948034  0.0093668  2017.21   &lt;2e-16 ***\nORIGIN_SZBPSZ07     19.4104568  0.0087961  2206.70   &lt;2e-16 ***\nORIGIN_SZBSSZ01     20.0139503  0.0056561  3538.45   &lt;2e-16 ***\nORIGIN_SZBSSZ02     20.2543885  0.0047198  4291.38   &lt;2e-16 ***\nORIGIN_SZBSSZ03     19.5428803  0.0052713  3707.41   &lt;2e-16 ***\nORIGIN_SZBTSZ01     20.0198045  0.0058541  3419.77   &lt;2e-16 ***\nORIGIN_SZBTSZ02     19.3618525  0.0081472  2376.51   &lt;2e-16 ***\nORIGIN_SZBTSZ03     19.5883853  0.0068935  2841.59   &lt;2e-16 ***\nORIGIN_SZBTSZ04     18.7720238  0.0103909  1806.58   &lt;2e-16 ***\nORIGIN_SZBTSZ05     18.8069026  0.0120628  1559.08   &lt;2e-16 ***\nORIGIN_SZBTSZ06     18.7068633  0.0094575  1978.00   &lt;2e-16 ***\nORIGIN_SZBTSZ07     17.6292257  0.0141551  1245.43   &lt;2e-16 ***\nORIGIN_SZBTSZ08     18.6989374  0.0109610  1705.94   &lt;2e-16 ***\nORIGIN_SZCBSZ01     18.2189868  0.0548317   332.27   &lt;2e-16 ***\nORIGIN_SZCCSZ01     18.9734563  0.0139450  1360.59   &lt;2e-16 ***\nORIGIN_SZCHSZ01     19.5955119  0.0121035  1619.00   &lt;2e-16 ***\nORIGIN_SZCHSZ02     19.3320960  0.0081620  2368.55   &lt;2e-16 ***\nORIGIN_SZCHSZ03     21.2164518  0.0063552  3338.43   &lt;2e-16 ***\nORIGIN_SZCKSZ01     20.1046845  0.0049333  4075.29   &lt;2e-16 ***\nORIGIN_SZCKSZ02     20.5371946  0.0050256  4086.53   &lt;2e-16 ***\nORIGIN_SZCKSZ03     20.7210560  0.0042184  4912.07   &lt;2e-16 ***\nORIGIN_SZCKSZ04     21.4013886  0.0042524  5032.80   &lt;2e-16 ***\nORIGIN_SZCKSZ05     20.9413146  0.0049434  4236.18   &lt;2e-16 ***\nORIGIN_SZCKSZ06     20.2557727  0.0071832  2819.88   &lt;2e-16 ***\nORIGIN_SZCLSZ01     19.3383703  0.0076634  2523.46   &lt;2e-16 ***\nORIGIN_SZCLSZ02     18.5226956  0.0135522  1366.77   &lt;2e-16 ***\nORIGIN_SZCLSZ03     19.0225512  0.0080145  2373.51   &lt;2e-16 ***\nORIGIN_SZCLSZ04     20.7981505  0.0042400  4905.22   &lt;2e-16 ***\nORIGIN_SZCLSZ05     18.3015625  0.0146815  1246.58   &lt;2e-16 ***\nORIGIN_SZCLSZ06     20.8207386  0.0039567  5262.09   &lt;2e-16 ***\nORIGIN_SZCLSZ07     19.6728958  0.0054199  3629.76   &lt;2e-16 ***\nORIGIN_SZCLSZ08     20.0851929  0.0056956  3526.43   &lt;2e-16 ***\nORIGIN_SZCLSZ09     18.5749589  0.0165415  1122.93   &lt;2e-16 ***\nORIGIN_SZDTSZ02     15.8276209  0.0833992   189.78   &lt;2e-16 ***\nORIGIN_SZDTSZ03     16.2512838  0.0737972   220.22   &lt;2e-16 ***\nORIGIN_SZDTSZ13     16.7744385  0.0312450   536.87   &lt;2e-16 ***\nORIGIN_SZGLSZ01     18.2368248  0.0096104  1897.62   &lt;2e-16 ***\nORIGIN_SZGLSZ02     19.8705255  0.0049014  4054.06   &lt;2e-16 ***\nORIGIN_SZGLSZ03     19.8249435  0.0053109  3732.85   &lt;2e-16 ***\nORIGIN_SZGLSZ04     20.7800335  0.0041261  5036.20   &lt;2e-16 ***\nORIGIN_SZGLSZ05     20.6040494  0.0043049  4786.23   &lt;2e-16 ***\nORIGIN_SZHGSZ01     20.0273475  0.0044824  4468.04   &lt;2e-16 ***\nORIGIN_SZHGSZ02     20.2480656  0.0044575  4542.47   &lt;2e-16 ***\nORIGIN_SZHGSZ03     20.0756442  0.0049003  4096.81   &lt;2e-16 ***\nORIGIN_SZHGSZ04     20.7577748  0.0040465  5129.84   &lt;2e-16 ***\nORIGIN_SZHGSZ05     20.9779992  0.0040123  5228.42   &lt;2e-16 ***\nORIGIN_SZHGSZ06     19.7403058  0.0054229  3640.20   &lt;2e-16 ***\nORIGIN_SZHGSZ07     20.1896268  0.0046051  4384.22   &lt;2e-16 ***\nORIGIN_SZHGSZ08     19.8646492  0.0052403  3790.72   &lt;2e-16 ***\nORIGIN_SZHGSZ09     18.3647736  0.0069196  2654.04   &lt;2e-16 ***\nORIGIN_SZHGSZ10     16.8720475  0.0421046   400.72   &lt;2e-16 ***\nORIGIN_SZJESZ01     20.2673794  0.0046723  4337.79   &lt;2e-16 ***\nORIGIN_SZJESZ02     20.0595982  0.0046503  4313.61   &lt;2e-16 ***\nORIGIN_SZJESZ03     19.9128778  0.0049848  3994.75   &lt;2e-16 ***\nORIGIN_SZJESZ04     18.5053667  0.0099227  1864.94   &lt;2e-16 ***\nORIGIN_SZJESZ05     17.8172930  0.0138840  1283.29   &lt;2e-16 ***\nORIGIN_SZJESZ06     20.0124157  0.0045009  4446.36   &lt;2e-16 ***\nORIGIN_SZJESZ07     18.1821423  0.0117267  1550.49   &lt;2e-16 ***\nORIGIN_SZJESZ08     18.8713046  0.0116456  1620.46   &lt;2e-16 ***\nORIGIN_SZJESZ09     20.5535527  0.0048456  4241.72   &lt;2e-16 ***\nORIGIN_SZJESZ10     18.4922322  0.0191243   966.95   &lt;2e-16 ***\nORIGIN_SZJESZ11     18.2891211  0.0197114   927.85   &lt;2e-16 ***\nORIGIN_SZJWSZ01     20.4912737  0.0063102  3247.35   &lt;2e-16 ***\nORIGIN_SZJWSZ02     20.8236694  0.0042249  4928.82   &lt;2e-16 ***\nORIGIN_SZJWSZ03     21.2587613  0.0039733  5350.40   &lt;2e-16 ***\nORIGIN_SZJWSZ04     20.3816464  0.0046199  4411.67   &lt;2e-16 ***\nORIGIN_SZJWSZ05     18.0607448  0.0128857  1401.61   &lt;2e-16 ***\nORIGIN_SZJWSZ06     18.7015202  0.0107614  1737.83   &lt;2e-16 ***\nORIGIN_SZJWSZ07     17.3991822  0.0277096   627.91   &lt;2e-16 ***\nORIGIN_SZJWSZ08     21.8044465  0.0037356  5836.95   &lt;2e-16 ***\nORIGIN_SZJWSZ09     21.5414930  0.0036033  5978.19   &lt;2e-16 ***\nORIGIN_SZKLSZ01     20.0307712  0.0047868  4184.59   &lt;2e-16 ***\nORIGIN_SZKLSZ02     19.0634769  0.0062318  3059.05   &lt;2e-16 ***\nORIGIN_SZKLSZ03     19.2685700  0.0057172  3370.25   &lt;2e-16 ***\nORIGIN_SZKLSZ04     17.7085067  0.0119809  1478.06   &lt;2e-16 ***\nORIGIN_SZKLSZ05     18.6384471  0.0107596  1732.26   &lt;2e-16 ***\nORIGIN_SZKLSZ06     13.7280296  0.1857160    73.92   &lt;2e-16 ***\nORIGIN_SZKLSZ07     18.6425146  0.0084952  2194.47   &lt;2e-16 ***\nORIGIN_SZKLSZ08     18.0928506  0.0101567  1781.37   &lt;2e-16 ***\nORIGIN_SZLKSZ01     17.8907138  0.0397083   450.55   &lt;2e-16 ***\nORIGIN_SZMDSZ01     18.7605188  0.0285455   657.22   &lt;2e-16 ***\nORIGIN_SZMDSZ02     19.1533927  0.0102815  1862.90   &lt;2e-16 ***\nORIGIN_SZMDSZ03     17.8404982  0.0169690  1051.36   &lt;2e-16 ***\nORIGIN_SZMPSZ01     19.0765941  0.0083937  2272.74   &lt;2e-16 ***\nORIGIN_SZMPSZ02     19.2162527  0.0068331  2812.24   &lt;2e-16 ***\nORIGIN_SZMPSZ03     19.9965344  0.0054569  3664.44   &lt;2e-16 ***\nORIGIN_SZMUSZ02     15.9130765  0.1037472   153.38   &lt;2e-16 ***\nORIGIN_SZNTSZ01     17.0840999  0.0352513   484.64   &lt;2e-16 ***\nORIGIN_SZNTSZ02     16.5792122  0.0233186   710.99   &lt;2e-16 ***\nORIGIN_SZNTSZ03     18.9506415  0.0075957  2494.93   &lt;2e-16 ***\nORIGIN_SZNTSZ05     15.8770261  0.0495825   320.21   &lt;2e-16 ***\nORIGIN_SZNTSZ06     15.3997415  0.0557029   276.46   &lt;2e-16 ***\nORIGIN_SZNVSZ01     20.2241694  0.0043487  4650.65   &lt;2e-16 ***\nORIGIN_SZNVSZ02     19.1897826  0.0065383  2934.97   &lt;2e-16 ***\nORIGIN_SZNVSZ03     18.8854268  0.0080459  2347.22   &lt;2e-16 ***\nORIGIN_SZNVSZ04     18.8940191  0.0090985  2076.61   &lt;2e-16 ***\nORIGIN_SZNVSZ05     17.6278585  0.0168107  1048.61   &lt;2e-16 ***\nORIGIN_SZPGSZ01     19.4825220  0.0122960  1584.46   &lt;2e-16 ***\nORIGIN_SZPGSZ02     19.4726761  0.0073116  2663.25   &lt;2e-16 ***\nORIGIN_SZPGSZ03     20.5515713  0.0045631  4503.86   &lt;2e-16 ***\nORIGIN_SZPGSZ04     21.0527131  0.0041500  5072.89   &lt;2e-16 ***\nORIGIN_SZPGSZ05     20.1436604  0.0057267  3517.48   &lt;2e-16 ***\nORIGIN_SZPLSZ01     19.1832002  0.0120006  1598.53   &lt;2e-16 ***\nORIGIN_SZPLSZ02     18.8752206  0.0149740  1260.53   &lt;2e-16 ***\nORIGIN_SZPLSZ03     18.1000818  0.0371769   486.86   &lt;2e-16 ***\nORIGIN_SZPLSZ04     17.1730559  0.0370280   463.79   &lt;2e-16 ***\nORIGIN_SZPLSZ05     17.9084439  0.0225031   795.82   &lt;2e-16 ***\nORIGIN_SZPNSZ01     21.0804425  0.0044829  4702.41   &lt;2e-16 ***\nORIGIN_SZPNSZ02     19.8822123  0.0111507  1783.05   &lt;2e-16 ***\nORIGIN_SZPNSZ03     17.9293289  0.0193571   926.24   &lt;2e-16 ***\nORIGIN_SZPNSZ04     17.1039594  0.0334954   510.64   &lt;2e-16 ***\nORIGIN_SZPNSZ05     18.2543864  0.0275554   662.46   &lt;2e-16 ***\nORIGIN_SZPRSZ01     19.8777935  0.0117586  1690.49   &lt;2e-16 ***\nORIGIN_SZPRSZ02     21.0751780  0.0044832  4700.88   &lt;2e-16 ***\nORIGIN_SZPRSZ03     20.6717019  0.0045577  4535.55   &lt;2e-16 ***\nORIGIN_SZPRSZ04     19.6365125  0.0074923  2620.90   &lt;2e-16 ***\nORIGIN_SZPRSZ05     21.3132151  0.0042119  5060.24   &lt;2e-16 ***\nORIGIN_SZPRSZ06     18.9314574  0.0117278  1614.24   &lt;2e-16 ***\nORIGIN_SZPRSZ07     17.2822918  0.0162430  1063.98   &lt;2e-16 ***\nORIGIN_SZPRSZ08     19.9267642  0.0062298  3198.62   &lt;2e-16 ***\nORIGIN_SZQTSZ01     19.7357175  0.0066359  2974.08   &lt;2e-16 ***\nORIGIN_SZQTSZ02     19.2082141  0.0061402  3128.26   &lt;2e-16 ***\nORIGIN_SZQTSZ03     19.7771883  0.0056220  3517.83   &lt;2e-16 ***\nORIGIN_SZQTSZ04     18.7114421  0.0072842  2568.76   &lt;2e-16 ***\nORIGIN_SZQTSZ05     19.3049324  0.0062401  3093.69   &lt;2e-16 ***\nORIGIN_SZQTSZ06     19.2643228  0.0065590  2937.09   &lt;2e-16 ***\nORIGIN_SZQTSZ07     18.5697347  0.0095373  1947.06   &lt;2e-16 ***\nORIGIN_SZQTSZ08     19.6147001  0.0061330  3198.21   &lt;2e-16 ***\nORIGIN_SZQTSZ09     19.2550793  0.0069947  2752.82   &lt;2e-16 ***\nORIGIN_SZQTSZ10     19.5801866  0.0064513  3035.07   &lt;2e-16 ***\nORIGIN_SZQTSZ11     17.7398366  0.0143648  1234.95   &lt;2e-16 ***\nORIGIN_SZQTSZ12     17.2420354  0.0186736   923.34   &lt;2e-16 ***\nORIGIN_SZQTSZ13     19.3857418  0.0078878  2457.69   &lt;2e-16 ***\nORIGIN_SZQTSZ14     18.1300753  0.0122096  1484.90   &lt;2e-16 ***\nORIGIN_SZQTSZ15     19.4222283  0.0120871  1606.86   &lt;2e-16 ***\nORIGIN_SZRCSZ01     18.1549045  0.0125108  1451.13   &lt;2e-16 ***\nORIGIN_SZRCSZ06     18.8836400  0.0082161  2298.38   &lt;2e-16 ***\nORIGIN_SZRVSZ01     16.7864438  0.0323796   518.43   &lt;2e-16 ***\nORIGIN_SZRVSZ02     16.4203244  0.0276836   593.14   &lt;2e-16 ***\nORIGIN_SZRVSZ03     16.6453738  0.0244992   679.42   &lt;2e-16 ***\nORIGIN_SZRVSZ04     15.9559213  0.0556344   286.80   &lt;2e-16 ***\nORIGIN_SZRVSZ05     17.0476331  0.0164122  1038.71   &lt;2e-16 ***\nORIGIN_SZSBSZ01     20.0417968  0.0062488  3207.29   &lt;2e-16 ***\nORIGIN_SZSBSZ02     19.1869565  0.0081051  2367.26   &lt;2e-16 ***\nORIGIN_SZSBSZ03     20.5769861  0.0045108  4561.70   &lt;2e-16 ***\nORIGIN_SZSBSZ04     20.5154199  0.0050548  4058.57   &lt;2e-16 ***\nORIGIN_SZSBSZ05     19.6250669  0.0065562  2993.35   &lt;2e-16 ***\nORIGIN_SZSBSZ06     18.8419757  0.0171135  1101.00   &lt;2e-16 ***\nORIGIN_SZSBSZ07     19.4897259  0.0124528  1565.09   &lt;2e-16 ***\nORIGIN_SZSBSZ08     18.7027917  0.0140545  1330.73   &lt;2e-16 ***\nORIGIN_SZSBSZ09     18.8893480  0.0088571  2132.67   &lt;2e-16 ***\nORIGIN_SZSESZ02     20.8962192  0.0041665  5015.34   &lt;2e-16 ***\nORIGIN_SZSESZ03     20.9452771  0.0039737  5270.94   &lt;2e-16 ***\nORIGIN_SZSESZ04     20.6576142  0.0046364  4455.55   &lt;2e-16 ***\nORIGIN_SZSESZ05     19.5170732  0.0058912  3312.92   &lt;2e-16 ***\nORIGIN_SZSESZ06     20.7595824  0.0045747  4537.89   &lt;2e-16 ***\nORIGIN_SZSESZ07     17.6888256  0.0195787   903.47   &lt;2e-16 ***\nORIGIN_SZSGSZ01     19.1359250  0.0085781  2230.79   &lt;2e-16 ***\nORIGIN_SZSGSZ02     18.5614369  0.0102037  1819.10   &lt;2e-16 ***\nORIGIN_SZSGSZ03     19.9933176  0.0050434  3964.23   &lt;2e-16 ***\nORIGIN_SZSGSZ04     20.2426871  0.0047211  4287.71   &lt;2e-16 ***\nORIGIN_SZSGSZ05     18.0114965  0.0107743  1671.70   &lt;2e-16 ***\nORIGIN_SZSGSZ06     20.2593194  0.0044538  4548.76   &lt;2e-16 ***\nORIGIN_SZSGSZ07     19.0763664  0.0062968  3029.54   &lt;2e-16 ***\nORIGIN_SZSKSZ01     19.9222451  0.0085136  2340.04   &lt;2e-16 ***\nORIGIN_SZSKSZ02     20.8633383  0.0055248  3776.33   &lt;2e-16 ***\nORIGIN_SZSKSZ03     19.6528148  0.0080534  2440.33   &lt;2e-16 ***\nORIGIN_SZSKSZ04     18.0754470  0.0275771   655.45   &lt;2e-16 ***\nORIGIN_SZSKSZ05     19.1192521  0.0155579  1228.91   &lt;2e-16 ***\nORIGIN_SZSLSZ01     17.1501034  0.0329384   520.67   &lt;2e-16 ***\nORIGIN_SZSLSZ04     19.5949774  0.0076753  2552.98   &lt;2e-16 ***\nORIGIN_SZSRSZ01     16.9761403  0.0162020  1047.78   &lt;2e-16 ***\nORIGIN_SZTHSZ01     17.9695687  0.0488559   367.81   &lt;2e-16 ***\nORIGIN_SZTHSZ03     18.5427522  0.0223617   829.22   &lt;2e-16 ***\nORIGIN_SZTHSZ04     17.4760374  0.0286247   610.52   &lt;2e-16 ***\nORIGIN_SZTHSZ06     17.8401186  0.0183322   973.16   &lt;2e-16 ***\nORIGIN_SZTMSZ01     20.3406361  0.0056607  3593.33   &lt;2e-16 ***\nORIGIN_SZTMSZ02     22.0307026  0.0037386  5892.85   &lt;2e-16 ***\nORIGIN_SZTMSZ03     21.3451920  0.0040606  5256.65   &lt;2e-16 ***\nORIGIN_SZTMSZ04     20.6611593  0.0049896  4140.87   &lt;2e-16 ***\nORIGIN_SZTMSZ05     19.3323133  0.0112868  1712.82   &lt;2e-16 ***\nORIGIN_SZTNSZ01     17.9513571  0.0128266  1399.54   &lt;2e-16 ***\nORIGIN_SZTNSZ02     18.0267387  0.0098372  1832.51   &lt;2e-16 ***\nORIGIN_SZTNSZ03     17.7253700  0.0134668  1316.23   &lt;2e-16 ***\nORIGIN_SZTNSZ04     19.4474075  0.0073760  2636.59   &lt;2e-16 ***\nORIGIN_SZTPSZ01     19.1078631  0.0065635  2911.25   &lt;2e-16 ***\nORIGIN_SZTPSZ02     20.2837634  0.0041411  4898.18   &lt;2e-16 ***\nORIGIN_SZTPSZ03     19.1838238  0.0059552  3221.37   &lt;2e-16 ***\nORIGIN_SZTPSZ04     19.1805388  0.0054778  3501.53   &lt;2e-16 ***\nORIGIN_SZTPSZ05     19.3718076  0.0058610  3305.18   &lt;2e-16 ***\nORIGIN_SZTPSZ06     19.6605723  0.0054968  3576.70   &lt;2e-16 ***\nORIGIN_SZTPSZ07     19.4499807  0.0060491  3215.36   &lt;2e-16 ***\nORIGIN_SZTPSZ08     18.7996538  0.0095757  1963.28   &lt;2e-16 ***\nORIGIN_SZTPSZ09     19.0025110  0.0067068  2833.31   &lt;2e-16 ***\nORIGIN_SZTPSZ10     18.8899657  0.0076094  2482.46   &lt;2e-16 ***\nORIGIN_SZTPSZ11     19.6277780  0.0053983  3635.93   &lt;2e-16 ***\nORIGIN_SZTPSZ12     19.1471104  0.0065742  2912.45   &lt;2e-16 ***\nORIGIN_SZTSSZ01     17.4901113  0.0478954   365.17   &lt;2e-16 ***\nORIGIN_SZTSSZ02     20.4997466  0.0081850  2504.55   &lt;2e-16 ***\nORIGIN_SZTSSZ03     20.1076553  0.0084728  2373.19   &lt;2e-16 ***\nORIGIN_SZTSSZ04     20.0646610  0.0089008  2254.26   &lt;2e-16 ***\nORIGIN_SZTSSZ05     19.3962067  0.0151392  1281.19   &lt;2e-16 ***\nORIGIN_SZTSSZ06     20.9235857  0.0178278  1173.65   &lt;2e-16 ***\nORIGIN_SZWCSZ01     20.8411600  0.0086519  2408.86   &lt;2e-16 ***\nORIGIN_SZWCSZ02     17.7355404  0.0328889   539.26   &lt;2e-16 ***\nORIGIN_SZWCSZ03     14.9380886  0.1240699   120.40   &lt;2e-16 ***\nORIGIN_SZWDSZ01     21.1969012  0.0037830  5603.23   &lt;2e-16 ***\nORIGIN_SZWDSZ02     20.5930001  0.0044572  4620.13   &lt;2e-16 ***\nORIGIN_SZWDSZ03     21.2521867  0.0041672  5099.85   &lt;2e-16 ***\nORIGIN_SZWDSZ04     21.0702687  0.0048648  4331.13   &lt;2e-16 ***\nORIGIN_SZWDSZ05     20.4008998  0.0051801  3938.35   &lt;2e-16 ***\nORIGIN_SZWDSZ06     20.6669176  0.0049280  4193.78   &lt;2e-16 ***\nORIGIN_SZWDSZ07     19.0500370  0.0082729  2302.71   &lt;2e-16 ***\nORIGIN_SZWDSZ08     19.0816252  0.0080667  2365.49   &lt;2e-16 ***\nORIGIN_SZWDSZ09     21.4182096  0.0040391  5302.73   &lt;2e-16 ***\nORIGIN_SZYSSZ01     19.5355157  0.0057540  3395.14   &lt;2e-16 ***\nORIGIN_SZYSSZ02     20.8737972  0.0048278  4323.64   &lt;2e-16 ***\nORIGIN_SZYSSZ03     21.6614437  0.0040011  5413.81   &lt;2e-16 ***\nORIGIN_SZYSSZ04     20.9305289  0.0043595  4801.10   &lt;2e-16 ***\nORIGIN_SZYSSZ05     20.1727678  0.0058466  3450.34   &lt;2e-16 ***\nORIGIN_SZYSSZ06     19.1481507  0.0116724  1640.47   &lt;2e-16 ***\nORIGIN_SZYSSZ07     18.7919074  0.0141636  1326.78   &lt;2e-16 ***\nORIGIN_SZYSSZ08     19.9733515  0.0061229  3262.07   &lt;2e-16 ***\nORIGIN_SZYSSZ09     20.9366181  0.0040347  5189.15   &lt;2e-16 ***\nlog(SCHOOL_COUNT)    0.4755516  0.0004701  1011.55   &lt;2e-16 ***\nlog(BUSINESS_COUNT)  0.1796905  0.0001856   968.12   &lt;2e-16 ***\nlog(DIST)           -1.6929522  0.0004093 -4136.01   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 189463537  on 14471  degrees of freedom\nResidual deviance:  15526121  on 14189  degrees of freedom\nAIC: 15615824\n\nNumber of Fisher Scoring iterations: 6\n\n\n\n\n\n\n\n\nWhat can we learn from the report above?\n\n\n\n\nthe ⍺1 and ⍺2 of SCHOOL_COUNT and BUSINESS_COUNT are 0.4755516 and 0.1796905 respectively.\n𝛽, the distance decay parameter is -1.6929522\nthere are a series of parameters which are the vector of 𝜇𝑖 values associated with the origin constraints.\n\n\n\n\n\nGoodness of fit\nIn statistical modelling, the next question we would like to answer is how well the proportion of variance in the dependent variable (i.e. TRIPS) that can be explained by the explanatory variables.\nIn order to provide answer to this question, R-squared statistics will be used. However, R-squared is not an output of glm(). Hence we will write a function called CalcRSquared by using the code chunk below.\n\nCalcRSquared &lt;- function(observed, estimated){\n  r &lt;- cor(observed, estimated)\n  R2 &lt;- r^2\n  R2\n}\n\nNOw, we can examine how the constraints hold for destinations this time.\n\nCalcRSquared(orcSIM_Poisson$data$TRIPS, orcSIM_Poisson$fitted.values)\n\n[1] 0.4362208\n\n\nWith reference to the R-Squared above, we can conclude that the model accounts for about 44% of the variation of flows in the systems. Not bad, but not brilliant either.\n\n\nDoubly constrained model\nIn this section, we will fit a doubly constrained SIM by using the general formula shown below:\n\nand the code chunk used is shown below.\n\ndbcSIM_Poisson &lt;- glm(formula = TRIPS ~ \n                ORIGIN_SZ + \n                DESTIN_SZ +\n                log(DIST),\n              family = poisson(link = \"log\"),\n              data = inter_zonal_flow,\n              na.action = na.exclude)\nsummary(dbcSIM_Poisson)\n\n\n\n\n\n\n\nImportant\n\n\n\nIt is important to note that there is a slight change of the code chunk. I have removed the -1 which means that an intercept will appear in the model again. This is not because I want an intercept as it makes the origin and destination coefficients harder to interpret, rather the -1 cheat for removing the intercept only works with one factor level but in double-constrained model we have two factor levels, namely: origins and destinations.\n\n\n\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_SZ + DESTIN_SZ + log(DIST), family = poisson(link = \"log\"), \n    data = inter_zonal_flow, na.action = na.exclude)\n\nCoefficients:\n                  Estimate Std. Error   z value Pr(&gt;|z|)    \n(Intercept)     21.8312374  0.0059160  3690.190  &lt; 2e-16 ***\nORIGIN_SZAMSZ02  0.5263502  0.0048031   109.585  &lt; 2e-16 ***\nORIGIN_SZAMSZ03  0.3139982  0.0049254    63.751  &lt; 2e-16 ***\nORIGIN_SZAMSZ04 -0.2146257  0.0053639   -40.013  &lt; 2e-16 ***\nORIGIN_SZAMSZ05 -0.1890446  0.0060386   -31.306  &lt; 2e-16 ***\nORIGIN_SZAMSZ06  0.1539201  0.0054401    28.294  &lt; 2e-16 ***\nORIGIN_SZAMSZ07 -0.9826565  0.0098676   -99.584  &lt; 2e-16 ***\nORIGIN_SZAMSZ08 -0.4488417  0.0093070   -48.226  &lt; 2e-16 ***\nORIGIN_SZAMSZ09  0.0713474  0.0057402    12.429  &lt; 2e-16 ***\nORIGIN_SZAMSZ10  0.4313742  0.0050370    85.641  &lt; 2e-16 ***\nORIGIN_SZAMSZ11 -1.4712226  0.0131178  -112.154  &lt; 2e-16 ***\nORIGIN_SZAMSZ12 -1.7250733  0.0111603  -154.573  &lt; 2e-16 ***\nORIGIN_SZBDSZ01  0.8810576  0.0048168   182.914  &lt; 2e-16 ***\nORIGIN_SZBDSZ02  0.1100240  0.0055529    19.814  &lt; 2e-16 ***\nORIGIN_SZBDSZ03  0.3606166  0.0050672    71.167  &lt; 2e-16 ***\nORIGIN_SZBDSZ04  1.4624347  0.0044212   330.781  &lt; 2e-16 ***\nORIGIN_SZBDSZ05  0.6207557  0.0050843   122.092  &lt; 2e-16 ***\nORIGIN_SZBDSZ06  0.6712973  0.0051953   129.214  &lt; 2e-16 ***\nORIGIN_SZBDSZ07 -1.2338669  0.0100775  -122.437  &lt; 2e-16 ***\nORIGIN_SZBDSZ08 -1.0444562  0.0094555  -110.460  &lt; 2e-16 ***\nORIGIN_SZBKSZ01 -0.2838426  0.0071354   -39.780  &lt; 2e-16 ***\nORIGIN_SZBKSZ02  0.5550522  0.0059014    94.054  &lt; 2e-16 ***\nORIGIN_SZBKSZ03  0.7396640  0.0056796   130.231  &lt; 2e-16 ***\nORIGIN_SZBKSZ04 -0.2242451  0.0067482   -33.230  &lt; 2e-16 ***\nORIGIN_SZBKSZ05 -0.2371614  0.0069386   -34.180  &lt; 2e-16 ***\nORIGIN_SZBKSZ06 -0.1413812  0.0065035   -21.739  &lt; 2e-16 ***\nORIGIN_SZBKSZ07  0.7089989  0.0051843   136.758  &lt; 2e-16 ***\nORIGIN_SZBKSZ08 -0.0907065  0.0059157   -15.333  &lt; 2e-16 ***\nORIGIN_SZBKSZ09 -0.1775146  0.0063302   -28.042  &lt; 2e-16 ***\nORIGIN_SZBLSZ01 -2.3684539  0.0154280  -153.516  &lt; 2e-16 ***\nORIGIN_SZBLSZ02 -2.8078475  0.0197839  -141.926  &lt; 2e-16 ***\nORIGIN_SZBLSZ03 -3.3122763  0.0466091   -71.065  &lt; 2e-16 ***\nORIGIN_SZBLSZ04 -2.6770542  0.0241793  -110.717  &lt; 2e-16 ***\nORIGIN_SZBMSZ01  0.0618035  0.0059400    10.405  &lt; 2e-16 ***\nORIGIN_SZBMSZ02 -1.3535767  0.0073741  -183.557  &lt; 2e-16 ***\nORIGIN_SZBMSZ03 -0.7569095  0.0063187  -119.790  &lt; 2e-16 ***\nORIGIN_SZBMSZ04 -0.2949304  0.0059603   -49.483  &lt; 2e-16 ***\nORIGIN_SZBMSZ05 -2.6131992  0.0172376  -151.599  &lt; 2e-16 ***\nORIGIN_SZBMSZ06 -3.0315024  0.0185502  -163.422  &lt; 2e-16 ***\nORIGIN_SZBMSZ07 -0.6962524  0.0064068  -108.674  &lt; 2e-16 ***\nORIGIN_SZBMSZ08 -0.9310730  0.0064541  -144.261  &lt; 2e-16 ***\nORIGIN_SZBMSZ09 -1.2911253  0.0092047  -140.268  &lt; 2e-16 ***\nORIGIN_SZBMSZ10 -1.6687004  0.0095708  -174.353  &lt; 2e-16 ***\nORIGIN_SZBMSZ11 -1.1152794  0.0072027  -154.841  &lt; 2e-16 ***\nORIGIN_SZBMSZ12 -1.5323954  0.0099932  -153.344  &lt; 2e-16 ***\nORIGIN_SZBMSZ13 -0.6267376  0.0065863   -95.158  &lt; 2e-16 ***\nORIGIN_SZBMSZ14 -1.0475467  0.0072472  -144.544  &lt; 2e-16 ***\nORIGIN_SZBMSZ15 -0.5049444  0.0067390   -74.929  &lt; 2e-16 ***\nORIGIN_SZBMSZ16 -1.5282897  0.0099545  -153.527  &lt; 2e-16 ***\nORIGIN_SZBMSZ17 -1.5722349  0.0161533   -97.332  &lt; 2e-16 ***\nORIGIN_SZBPSZ01  0.5814175  0.0062904    92.429  &lt; 2e-16 ***\nORIGIN_SZBPSZ02  0.0875442  0.0072190    12.127  &lt; 2e-16 ***\nORIGIN_SZBPSZ03  0.3358227  0.0070460    47.662  &lt; 2e-16 ***\nORIGIN_SZBPSZ04  0.6507586  0.0057726   112.733  &lt; 2e-16 ***\nORIGIN_SZBPSZ05  0.9502124  0.0052971   179.384  &lt; 2e-16 ***\nORIGIN_SZBPSZ06 -1.0480314  0.0098191  -106.734  &lt; 2e-16 ***\nORIGIN_SZBPSZ07 -0.5467931  0.0091676   -59.644  &lt; 2e-16 ***\nORIGIN_SZBSSZ01  0.2998334  0.0059193    50.654  &lt; 2e-16 ***\nORIGIN_SZBSSZ02  0.2841036  0.0050863    55.856  &lt; 2e-16 ***\nORIGIN_SZBSSZ03 -0.2331505  0.0056565   -41.218  &lt; 2e-16 ***\nORIGIN_SZBTSZ01  0.0987284  0.0063715    15.495  &lt; 2e-16 ***\nORIGIN_SZBTSZ02 -0.6261229  0.0084604   -74.006  &lt; 2e-16 ***\nORIGIN_SZBTSZ03 -0.4326963  0.0073452   -58.909  &lt; 2e-16 ***\nORIGIN_SZBTSZ04 -1.4998668  0.0110013  -136.336  &lt; 2e-16 ***\nORIGIN_SZBTSZ05 -0.9564768  0.0122202   -78.270  &lt; 2e-16 ***\nORIGIN_SZBTSZ06 -1.2853131  0.0099328  -129.401  &lt; 2e-16 ***\nORIGIN_SZBTSZ07 -2.3870991  0.0144589  -165.096  &lt; 2e-16 ***\nORIGIN_SZBTSZ08 -1.3715855  0.0113825  -120.499  &lt; 2e-16 ***\nORIGIN_SZCBSZ01 -3.5940232  0.0548979   -65.467  &lt; 2e-16 ***\nORIGIN_SZCCSZ01 -0.7008220  0.0140373   -49.926  &lt; 2e-16 ***\nORIGIN_SZCHSZ01 -0.9109524  0.0122869   -74.140  &lt; 2e-16 ***\nORIGIN_SZCHSZ02 -0.8566547  0.0088749   -96.526  &lt; 2e-16 ***\nORIGIN_SZCHSZ03  1.1153731  0.0066136   168.650  &lt; 2e-16 ***\nORIGIN_SZCKSZ01  0.3001815  0.0058548    51.271  &lt; 2e-16 ***\nORIGIN_SZCKSZ02  0.7185711  0.0060595   118.585  &lt; 2e-16 ***\nORIGIN_SZCKSZ03  1.1389824  0.0053179   214.178  &lt; 2e-16 ***\nORIGIN_SZCKSZ04  1.6281772  0.0054761   297.324  &lt; 2e-16 ***\nORIGIN_SZCKSZ05  0.8338470  0.0064178   129.927  &lt; 2e-16 ***\nORIGIN_SZCKSZ06  0.6528993  0.0082375    79.259  &lt; 2e-16 ***\nORIGIN_SZCLSZ01 -0.7174758  0.0082123   -87.366  &lt; 2e-16 ***\nORIGIN_SZCLSZ02 -1.7513100  0.0139062  -125.938  &lt; 2e-16 ***\nORIGIN_SZCLSZ03 -1.0362873  0.0085485  -121.224  &lt; 2e-16 ***\nORIGIN_SZCLSZ04  0.6160017  0.0051276   120.136  &lt; 2e-16 ***\nORIGIN_SZCLSZ05 -2.1005122  0.0150228  -139.821  &lt; 2e-16 ***\nORIGIN_SZCLSZ06  0.7252108  0.0049447   146.665  &lt; 2e-16 ***\nORIGIN_SZCLSZ07 -0.5343482  0.0062500   -85.496  &lt; 2e-16 ***\nORIGIN_SZCLSZ08 -0.2153408  0.0067571   -31.869  &lt; 2e-16 ***\nORIGIN_SZCLSZ09 -1.8019961  0.0169078  -106.578  &lt; 2e-16 ***\nORIGIN_SZDTSZ02 -3.9057711  0.0834668   -46.794  &lt; 2e-16 ***\nORIGIN_SZDTSZ03 -3.4152419  0.0738650   -46.236  &lt; 2e-16 ***\nORIGIN_SZDTSZ13 -3.0183438  0.0315257   -95.742  &lt; 2e-16 ***\nORIGIN_SZGLSZ01 -1.7812384  0.0099367  -179.258  &lt; 2e-16 ***\nORIGIN_SZGLSZ02 -0.1074991  0.0054325   -19.788  &lt; 2e-16 ***\nORIGIN_SZGLSZ03 -0.2461106  0.0057176   -43.045  &lt; 2e-16 ***\nORIGIN_SZGLSZ04  0.8657186  0.0046413   186.524  &lt; 2e-16 ***\nORIGIN_SZGLSZ05  0.5871393  0.0047939   122.477  &lt; 2e-16 ***\nORIGIN_SZHGSZ01  0.3543819  0.0050461    70.229  &lt; 2e-16 ***\nORIGIN_SZHGSZ02  0.4218178  0.0050820    83.003  &lt; 2e-16 ***\nORIGIN_SZHGSZ03  0.2411309  0.0054241    44.456  &lt; 2e-16 ***\nORIGIN_SZHGSZ04  0.8180622  0.0046153   177.252  &lt; 2e-16 ***\nORIGIN_SZHGSZ05  1.2173687  0.0045655   266.647  &lt; 2e-16 ***\nORIGIN_SZHGSZ06 -0.1826300  0.0058214   -31.372  &lt; 2e-16 ***\nORIGIN_SZHGSZ07  0.3172839  0.0050733    62.540  &lt; 2e-16 ***\nORIGIN_SZHGSZ08 -0.1151369  0.0057067   -20.176  &lt; 2e-16 ***\nORIGIN_SZHGSZ09 -1.2873441  0.0091690  -140.401  &lt; 2e-16 ***\nORIGIN_SZHGSZ10 -3.3783178  0.0424682   -79.549  &lt; 2e-16 ***\nORIGIN_SZJESZ01  0.4859234  0.0055927    86.885  &lt; 2e-16 ***\nORIGIN_SZJESZ02  0.1766088  0.0055800    31.650  &lt; 2e-16 ***\nORIGIN_SZJESZ03 -0.2177441  0.0059535   -36.574  &lt; 2e-16 ***\nORIGIN_SZJESZ04 -1.5532182  0.0104526  -148.597  &lt; 2e-16 ***\nORIGIN_SZJESZ05 -2.3332926  0.0142701  -163.509  &lt; 2e-16 ***\nORIGIN_SZJESZ06  0.3007382  0.0055019    54.661  &lt; 2e-16 ***\nORIGIN_SZJESZ07 -1.9687994  0.0121092  -162.587  &lt; 2e-16 ***\nORIGIN_SZJESZ08 -1.3032070  0.0122024  -106.800  &lt; 2e-16 ***\nORIGIN_SZJESZ09  0.5762635  0.0058766    98.061  &lt; 2e-16 ***\nORIGIN_SZJESZ10 -1.4423113  0.0194773   -74.051  &lt; 2e-16 ***\nORIGIN_SZJESZ11 -1.9720897  0.0200811   -98.206  &lt; 2e-16 ***\nORIGIN_SZJWSZ01  0.3808627  0.0071357    53.374  &lt; 2e-16 ***\nORIGIN_SZJWSZ02  0.7963999  0.0053150   149.840  &lt; 2e-16 ***\nORIGIN_SZJWSZ03  1.5429636  0.0049961   308.834  &lt; 2e-16 ***\nORIGIN_SZJWSZ04  0.6410760  0.0056711   113.042  &lt; 2e-16 ***\nORIGIN_SZJWSZ05 -2.1571049  0.0133584  -161.479  &lt; 2e-16 ***\nORIGIN_SZJWSZ06 -1.5174532  0.0113384  -133.833  &lt; 2e-16 ***\nORIGIN_SZJWSZ07 -2.7089963  0.0280439   -96.598  &lt; 2e-16 ***\nORIGIN_SZJWSZ08  1.5343415  0.0051711   296.713  &lt; 2e-16 ***\nORIGIN_SZJWSZ09  1.8837410  0.0048845   385.656  &lt; 2e-16 ***\nORIGIN_SZKLSZ01  0.1081286  0.0053307    20.284  &lt; 2e-16 ***\nORIGIN_SZKLSZ02 -0.8844695  0.0067728  -130.591  &lt; 2e-16 ***\nORIGIN_SZKLSZ03 -0.6872640  0.0062857  -109.337  &lt; 2e-16 ***\nORIGIN_SZKLSZ04 -2.2090319  0.0122440  -180.418  &lt; 2e-16 ***\nORIGIN_SZKLSZ05 -1.1728726  0.0110765  -105.888  &lt; 2e-16 ***\nORIGIN_SZKLSZ06 -6.1162315  0.1857789   -32.922  &lt; 2e-16 ***\nORIGIN_SZKLSZ07 -1.4082749  0.0092299  -152.578  &lt; 2e-16 ***\nORIGIN_SZKLSZ08 -1.7781551  0.0104682  -169.862  &lt; 2e-16 ***\nORIGIN_SZLKSZ01 -2.0531568  0.0398803   -51.483  &lt; 2e-16 ***\nORIGIN_SZMDSZ01 -0.8825639  0.0287621   -30.685  &lt; 2e-16 ***\nORIGIN_SZMDSZ02 -0.6219993  0.0107388   -57.921  &lt; 2e-16 ***\nORIGIN_SZMDSZ03 -2.0840156  0.0173117  -120.382  &lt; 2e-16 ***\nORIGIN_SZMPSZ01 -0.9659093  0.0086972  -111.060  &lt; 2e-16 ***\nORIGIN_SZMPSZ02 -1.0411153  0.0073403  -141.836  &lt; 2e-16 ***\nORIGIN_SZMPSZ03  0.0001659  0.0059401     0.028 0.977719    \nORIGIN_SZMUSZ02 -3.7599031  0.1037937   -36.225  &lt; 2e-16 ***\nORIGIN_SZNTSZ01 -3.0388366  0.0355325   -85.523  &lt; 2e-16 ***\nORIGIN_SZNTSZ02 -3.4230640  0.0235902  -145.106  &lt; 2e-16 ***\nORIGIN_SZNTSZ03 -0.9094796  0.0082551  -110.172  &lt; 2e-16 ***\nORIGIN_SZNTSZ05 -4.0861681  0.0499630   -81.784  &lt; 2e-16 ***\nORIGIN_SZNTSZ06 -3.9497128  0.0565388   -69.858  &lt; 2e-16 ***\nORIGIN_SZNVSZ01  0.3235636  0.0049439    65.447  &lt; 2e-16 ***\nORIGIN_SZNVSZ02 -0.6946748  0.0070536   -98.485  &lt; 2e-16 ***\nORIGIN_SZNVSZ03 -1.0540196  0.0083781  -125.806  &lt; 2e-16 ***\nORIGIN_SZNVSZ04 -0.9897977  0.0093463  -105.903  &lt; 2e-16 ***\nORIGIN_SZNVSZ05 -2.2578432  0.0169180  -133.458  &lt; 2e-16 ***\nORIGIN_SZPGSZ01  0.2399827  0.0130436    18.398  &lt; 2e-16 ***\nORIGIN_SZPGSZ02 -0.3352342  0.0078451   -42.732  &lt; 2e-16 ***\nORIGIN_SZPGSZ03  0.9515148  0.0051376   185.207  &lt; 2e-16 ***\nORIGIN_SZPGSZ04  1.3998952  0.0047991   291.697  &lt; 2e-16 ***\nORIGIN_SZPGSZ05  0.4451629  0.0063423    70.189  &lt; 2e-16 ***\nORIGIN_SZPLSZ01 -0.9705918  0.0122781   -79.050  &lt; 2e-16 ***\nORIGIN_SZPLSZ02 -1.0670151  0.0153358   -69.577  &lt; 2e-16 ***\nORIGIN_SZPLSZ03 -2.1229124  0.0373527   -56.834  &lt; 2e-16 ***\nORIGIN_SZPLSZ04 -3.0911932  0.0371296   -83.254  &lt; 2e-16 ***\nORIGIN_SZPLSZ05 -2.1705708  0.0226085   -96.007  &lt; 2e-16 ***\nORIGIN_SZPNSZ01  0.9052637  0.0065952   137.262  &lt; 2e-16 ***\nORIGIN_SZPNSZ02 -0.1720425  0.0125658   -13.691  &lt; 2e-16 ***\nORIGIN_SZPNSZ03 -2.3973459  0.0201408  -119.029  &lt; 2e-16 ***\nORIGIN_SZPNSZ04 -3.4483689  0.0343741  -100.319  &lt; 2e-16 ***\nORIGIN_SZPNSZ05 -2.0588530  0.0282328   -72.924  &lt; 2e-16 ***\nORIGIN_SZPRSZ01 -0.6399015  0.0120470   -53.117  &lt; 2e-16 ***\nORIGIN_SZPRSZ02  0.8122270  0.0050886   159.617  &lt; 2e-16 ***\nORIGIN_SZPRSZ03  0.3990960  0.0051810    77.031  &lt; 2e-16 ***\nORIGIN_SZPRSZ04 -0.8485348  0.0079236  -107.089  &lt; 2e-16 ***\nORIGIN_SZPRSZ05  0.8008791  0.0048532   165.021  &lt; 2e-16 ***\nORIGIN_SZPRSZ06 -1.4498806  0.0121422  -119.408  &lt; 2e-16 ***\nORIGIN_SZPRSZ07 -3.2025045  0.0167118  -191.631  &lt; 2e-16 ***\nORIGIN_SZPRSZ08 -0.5862269  0.0067255   -87.165  &lt; 2e-16 ***\nORIGIN_SZQTSZ01 -0.1859270  0.0075531   -24.616  &lt; 2e-16 ***\nORIGIN_SZQTSZ02 -0.8715122  0.0068124  -127.929  &lt; 2e-16 ***\nORIGIN_SZQTSZ03 -0.1259816  0.0064796   -19.443  &lt; 2e-16 ***\nORIGIN_SZQTSZ04 -1.4620032  0.0079848  -183.098  &lt; 2e-16 ***\nORIGIN_SZQTSZ05 -0.6675643  0.0069616   -95.892  &lt; 2e-16 ***\nORIGIN_SZQTSZ06 -0.8190026  0.0072713  -112.634  &lt; 2e-16 ***\nORIGIN_SZQTSZ07 -1.5189403  0.0099864  -152.101  &lt; 2e-16 ***\nORIGIN_SZQTSZ08 -0.4976238  0.0067874   -73.316  &lt; 2e-16 ***\nORIGIN_SZQTSZ09 -0.9006162  0.0075978  -118.536  &lt; 2e-16 ***\nORIGIN_SZQTSZ10 -0.6690184  0.0071574   -93.473  &lt; 2e-16 ***\nORIGIN_SZQTSZ11 -2.5203437  0.0147000  -171.452  &lt; 2e-16 ***\nORIGIN_SZQTSZ12 -3.0461675  0.0190193  -160.162  &lt; 2e-16 ***\nORIGIN_SZQTSZ13 -0.7501068  0.0084481   -88.791  &lt; 2e-16 ***\nORIGIN_SZQTSZ14 -1.9321849  0.0126114  -153.209  &lt; 2e-16 ***\nORIGIN_SZQTSZ15 -0.9576828  0.0127157   -75.315  &lt; 2e-16 ***\nORIGIN_SZRCSZ01 -1.8167951  0.0129234  -140.582  &lt; 2e-16 ***\nORIGIN_SZRCSZ06 -0.5560563  0.0090507   -61.438  &lt; 2e-16 ***\nORIGIN_SZRVSZ01 -2.8862570  0.0325532   -88.663  &lt; 2e-16 ***\nORIGIN_SZRVSZ02 -3.1555662  0.0281279  -112.186  &lt; 2e-16 ***\nORIGIN_SZRVSZ03 -2.9836089  0.0248449  -120.089  &lt; 2e-16 ***\nORIGIN_SZRVSZ04 -3.5520422  0.0561371   -63.274  &lt; 2e-16 ***\nORIGIN_SZRVSZ05 -2.5866584  0.0180382  -143.399  &lt; 2e-16 ***\nORIGIN_SZSBSZ01  0.2867444  0.0071098    40.331  &lt; 2e-16 ***\nORIGIN_SZSBSZ02 -0.9012334  0.0087262  -103.278  &lt; 2e-16 ***\nORIGIN_SZSBSZ03  0.8311038  0.0055422   149.958  &lt; 2e-16 ***\nORIGIN_SZSBSZ04  0.4044170  0.0062047    65.179  &lt; 2e-16 ***\nORIGIN_SZSBSZ05 -0.2661845  0.0074162   -35.892  &lt; 2e-16 ***\nORIGIN_SZSBSZ06 -0.9023075  0.0175046   -51.547  &lt; 2e-16 ***\nORIGIN_SZSBSZ07  0.0505870  0.0131317     3.852 0.000117 ***\nORIGIN_SZSBSZ08 -1.1158011  0.0145416   -76.732  &lt; 2e-16 ***\nORIGIN_SZSBSZ09 -0.9682835  0.0095396  -101.501  &lt; 2e-16 ***\nORIGIN_SZSESZ02  1.1452735  0.0047810   239.548  &lt; 2e-16 ***\nORIGIN_SZSESZ03  1.2815277  0.0045677   280.564  &lt; 2e-16 ***\nORIGIN_SZSESZ04  0.8085857  0.0052756   153.269  &lt; 2e-16 ***\nORIGIN_SZSESZ05 -0.2329413  0.0063113   -36.909  &lt; 2e-16 ***\nORIGIN_SZSESZ06  1.0576879  0.0049909   211.925  &lt; 2e-16 ***\nORIGIN_SZSESZ07 -2.3165908  0.0196831  -117.695  &lt; 2e-16 ***\nORIGIN_SZSGSZ01 -0.6606350  0.0088079   -75.005  &lt; 2e-16 ***\nORIGIN_SZSGSZ02 -1.3638984  0.0104040  -131.094  &lt; 2e-16 ***\nORIGIN_SZSGSZ03  0.1152591  0.0054649    21.091  &lt; 2e-16 ***\nORIGIN_SZSGSZ04  0.2954067  0.0050865    58.077  &lt; 2e-16 ***\nORIGIN_SZSGSZ05 -2.0792678  0.0109882  -189.227  &lt; 2e-16 ***\nORIGIN_SZSGSZ06  0.4563227  0.0048880    93.356  &lt; 2e-16 ***\nORIGIN_SZSGSZ07 -0.8955254  0.0067100  -133.461  &lt; 2e-16 ***\nORIGIN_SZSKSZ01 -0.3184402  0.0093032   -34.229  &lt; 2e-16 ***\nORIGIN_SZSKSZ02  1.1160484  0.0063851   174.790  &lt; 2e-16 ***\nORIGIN_SZSKSZ03 -0.2566692  0.0086021   -29.838  &lt; 2e-16 ***\nORIGIN_SZSKSZ04 -1.5781827  0.0279394   -56.486  &lt; 2e-16 ***\nORIGIN_SZSKSZ05 -0.2724361  0.0163597   -16.653  &lt; 2e-16 ***\nORIGIN_SZSLSZ01 -2.4458625  0.0330301   -74.050  &lt; 2e-16 ***\nORIGIN_SZSLSZ04 -0.0987076  0.0079626   -12.396  &lt; 2e-16 ***\nORIGIN_SZSRSZ01 -2.2584977  0.0176647  -127.854  &lt; 2e-16 ***\nORIGIN_SZTHSZ01 -2.5878524  0.0489998   -52.814  &lt; 2e-16 ***\nORIGIN_SZTHSZ03 -0.8101746  0.0226814   -35.720  &lt; 2e-16 ***\nORIGIN_SZTHSZ04 -2.4186655  0.0288663   -83.789  &lt; 2e-16 ***\nORIGIN_SZTHSZ06 -1.7080541  0.0186353   -91.657  &lt; 2e-16 ***\nORIGIN_SZTMSZ01 -0.2193476  0.0061823   -35.480  &lt; 2e-16 ***\nORIGIN_SZTMSZ02  1.7772464  0.0043394   409.558  &lt; 2e-16 ***\nORIGIN_SZTMSZ03  1.0051343  0.0046055   218.249  &lt; 2e-16 ***\nORIGIN_SZTMSZ04  0.1642370  0.0055078    29.819  &lt; 2e-16 ***\nORIGIN_SZTMSZ05 -1.2878706  0.0114828  -112.157  &lt; 2e-16 ***\nORIGIN_SZTNSZ01 -1.7163504  0.0131268  -130.751  &lt; 2e-16 ***\nORIGIN_SZTNSZ02 -1.6508988  0.0103851  -158.968  &lt; 2e-16 ***\nORIGIN_SZTNSZ03 -2.1545577  0.0137947  -156.187  &lt; 2e-16 ***\nORIGIN_SZTNSZ04 -0.3949120  0.0078496   -50.310  &lt; 2e-16 ***\nORIGIN_SZTPSZ01 -0.8058100  0.0069916  -115.253  &lt; 2e-16 ***\nORIGIN_SZTPSZ02  0.5369060  0.0047272   113.577  &lt; 2e-16 ***\nORIGIN_SZTPSZ03 -0.7779333  0.0064278  -121.027  &lt; 2e-16 ***\nORIGIN_SZTPSZ04 -0.8153581  0.0061387  -132.823  &lt; 2e-16 ***\nORIGIN_SZTPSZ05 -0.5073676  0.0067771   -74.865  &lt; 2e-16 ***\nORIGIN_SZTPSZ06  0.0847301  0.0065717    12.893  &lt; 2e-16 ***\nORIGIN_SZTPSZ07 -0.5839519  0.0066148   -88.280  &lt; 2e-16 ***\nORIGIN_SZTPSZ08 -1.0577941  0.0098480  -107.412  &lt; 2e-16 ***\nORIGIN_SZTPSZ09 -0.9067707  0.0071367  -127.057  &lt; 2e-16 ***\nORIGIN_SZTPSZ10 -1.1362091  0.0080905  -140.438  &lt; 2e-16 ***\nORIGIN_SZTPSZ11 -0.2374621  0.0059472   -39.928  &lt; 2e-16 ***\nORIGIN_SZTPSZ12 -0.8028874  0.0069663  -115.253  &lt; 2e-16 ***\nORIGIN_SZTSSZ01 -2.7809271  0.0482843   -57.595  &lt; 2e-16 ***\nORIGIN_SZTSSZ02  0.0425804  0.0105088     4.052 5.08e-05 ***\nORIGIN_SZTSSZ03  0.1142369  0.0109412    10.441  &lt; 2e-16 ***\nORIGIN_SZTSSZ04 -0.6186261  0.0116324   -53.181  &lt; 2e-16 ***\nORIGIN_SZTSSZ05 -1.0846732  0.0173555   -62.497  &lt; 2e-16 ***\nORIGIN_SZTSSZ06  0.3980173  0.0198100    20.092  &lt; 2e-16 ***\nORIGIN_SZWCSZ01  1.3545143  0.0092002   147.227  &lt; 2e-16 ***\nORIGIN_SZWCSZ02 -2.9863278  0.0330906   -90.247  &lt; 2e-16 ***\nORIGIN_SZWCSZ03 -5.0504916  0.1241385   -40.684  &lt; 2e-16 ***\nORIGIN_SZWDSZ01  1.5238429  0.0049404   308.448  &lt; 2e-16 ***\nORIGIN_SZWDSZ02  0.2832576  0.0056218    50.386  &lt; 2e-16 ***\nORIGIN_SZWDSZ03  1.3702524  0.0053266   257.245  &lt; 2e-16 ***\nORIGIN_SZWDSZ04  1.0248225  0.0059272   172.903  &lt; 2e-16 ***\nORIGIN_SZWDSZ05  0.2356778  0.0060587    38.899  &lt; 2e-16 ***\nORIGIN_SZWDSZ06  0.3146925  0.0059919    52.520  &lt; 2e-16 ***\nORIGIN_SZWDSZ07 -1.4971897  0.0091243  -164.088  &lt; 2e-16 ***\nORIGIN_SZWDSZ08 -0.8894079  0.0087414  -101.747  &lt; 2e-16 ***\nORIGIN_SZWDSZ09  1.4437633  0.0053160   271.590  &lt; 2e-16 ***\nORIGIN_SZYSSZ01 -0.2519398  0.0064443   -39.095  &lt; 2e-16 ***\nORIGIN_SZYSSZ02  0.8726785  0.0057658   151.354  &lt; 2e-16 ***\nORIGIN_SZYSSZ03  1.7868139  0.0050674   352.611  &lt; 2e-16 ***\nORIGIN_SZYSSZ04  0.8418040  0.0051738   162.704  &lt; 2e-16 ***\nORIGIN_SZYSSZ05  0.4292096  0.0062520    68.652  &lt; 2e-16 ***\nORIGIN_SZYSSZ06 -0.7459961  0.0119123   -62.624  &lt; 2e-16 ***\nORIGIN_SZYSSZ07 -0.8422281  0.0144559   -58.262  &lt; 2e-16 ***\nORIGIN_SZYSSZ08  0.1829428  0.0067885    26.949  &lt; 2e-16 ***\nORIGIN_SZYSSZ09  1.1159712  0.0050760   219.853  &lt; 2e-16 ***\nDESTIN_SZAMSZ02  0.0694567  0.0045966    15.111  &lt; 2e-16 ***\nDESTIN_SZAMSZ03  0.0760100  0.0044639    17.028  &lt; 2e-16 ***\nDESTIN_SZAMSZ04 -1.1306391  0.0064373  -175.639  &lt; 2e-16 ***\nDESTIN_SZAMSZ05 -1.0751133  0.0065164  -164.985  &lt; 2e-16 ***\nDESTIN_SZAMSZ06 -0.9624298  0.0065937  -145.962  &lt; 2e-16 ***\nDESTIN_SZAMSZ07 -1.5060319  0.0097616  -154.281  &lt; 2e-16 ***\nDESTIN_SZAMSZ08 -0.4813202  0.0069794   -68.963  &lt; 2e-16 ***\nDESTIN_SZAMSZ09 -1.0220675  0.0066313  -154.129  &lt; 2e-16 ***\nDESTIN_SZAMSZ10  0.1235142  0.0047044    26.255  &lt; 2e-16 ***\nDESTIN_SZAMSZ11 -0.8917993  0.0088519  -100.746  &lt; 2e-16 ***\nDESTIN_SZAMSZ12  0.0195208  0.0051704     3.775 0.000160 ***\nDESTIN_SZBDSZ01  0.9736349  0.0042757   227.713  &lt; 2e-16 ***\nDESTIN_SZBDSZ02 -0.1969470  0.0055284   -35.625  &lt; 2e-16 ***\nDESTIN_SZBDSZ03  0.1266471  0.0050786    24.938  &lt; 2e-16 ***\nDESTIN_SZBDSZ04  1.1608485  0.0041956   276.684  &lt; 2e-16 ***\nDESTIN_SZBDSZ05  0.9293840  0.0044412   209.265  &lt; 2e-16 ***\nDESTIN_SZBDSZ06  0.4090567  0.0050300    81.323  &lt; 2e-16 ***\nDESTIN_SZBDSZ07 -0.8171478  0.0098945   -82.586  &lt; 2e-16 ***\nDESTIN_SZBDSZ08 -1.5895287  0.0111632  -142.391  &lt; 2e-16 ***\nDESTIN_SZBKSZ01 -1.3793311  0.0072145  -191.189  &lt; 2e-16 ***\nDESTIN_SZBKSZ02 -0.5253670  0.0061879   -84.903  &lt; 2e-16 ***\nDESTIN_SZBKSZ03 -1.0095362  0.0065426  -154.301  &lt; 2e-16 ***\nDESTIN_SZBKSZ04 -0.5662858  0.0056453  -100.311  &lt; 2e-16 ***\nDESTIN_SZBKSZ05 -0.9406607  0.0070597  -133.244  &lt; 2e-16 ***\nDESTIN_SZBKSZ06 -1.3129276  0.0067414  -194.755  &lt; 2e-16 ***\nDESTIN_SZBKSZ07  0.0120605  0.0049284     2.447 0.014400 *  \nDESTIN_SZBKSZ08 -1.3658471  0.0075109  -181.849  &lt; 2e-16 ***\nDESTIN_SZBKSZ09 -0.1771310  0.0055645   -31.832  &lt; 2e-16 ***\nDESTIN_SZBLSZ01 -0.8175223  0.0075645  -108.074  &lt; 2e-16 ***\nDESTIN_SZBLSZ02  0.1631280  0.0071753    22.735  &lt; 2e-16 ***\nDESTIN_SZBLSZ03  1.2598494  0.0081706   154.194  &lt; 2e-16 ***\nDESTIN_SZBLSZ04 -0.5642975  0.0137827   -40.943  &lt; 2e-16 ***\nDESTIN_SZBMSZ01  0.6921844  0.0054211   127.684  &lt; 2e-16 ***\nDESTIN_SZBMSZ02 -0.1209392  0.0055362   -21.845  &lt; 2e-16 ***\nDESTIN_SZBMSZ03 -0.2373881  0.0062427   -38.027  &lt; 2e-16 ***\nDESTIN_SZBMSZ04 -0.0407117  0.0058001    -7.019 2.23e-12 ***\nDESTIN_SZBMSZ05 -0.2363309  0.0075967   -31.110  &lt; 2e-16 ***\nDESTIN_SZBMSZ06 -1.1930710  0.0134761   -88.532  &lt; 2e-16 ***\nDESTIN_SZBMSZ07  0.4625103  0.0051864    89.178  &lt; 2e-16 ***\nDESTIN_SZBMSZ08 -0.8604731  0.0069899  -123.102  &lt; 2e-16 ***\nDESTIN_SZBMSZ09 -2.1290239  0.0154841  -137.498  &lt; 2e-16 ***\nDESTIN_SZBMSZ10 -1.4617153  0.0094014  -155.478  &lt; 2e-16 ***\nDESTIN_SZBMSZ11 -1.3234050  0.0085506  -154.773  &lt; 2e-16 ***\nDESTIN_SZBMSZ12 -0.8399230  0.0085361   -98.397  &lt; 2e-16 ***\nDESTIN_SZBMSZ13  0.1366529  0.0059697    22.891  &lt; 2e-16 ***\nDESTIN_SZBMSZ14 -1.0491968  0.0083021  -126.378  &lt; 2e-16 ***\nDESTIN_SZBMSZ15 -0.6726684  0.0076276   -88.189  &lt; 2e-16 ***\nDESTIN_SZBMSZ16 -1.4011734  0.0116569  -120.201  &lt; 2e-16 ***\nDESTIN_SZBMSZ17 -1.5682752  0.0167333   -93.722  &lt; 2e-16 ***\nDESTIN_SZBPSZ01 -1.1120017  0.0063197  -175.959  &lt; 2e-16 ***\nDESTIN_SZBPSZ02 -2.0833466  0.0091139  -228.590  &lt; 2e-16 ***\nDESTIN_SZBPSZ03 -1.6937265  0.0087437  -193.709  &lt; 2e-16 ***\nDESTIN_SZBPSZ04 -0.7964999  0.0066129  -120.447  &lt; 2e-16 ***\nDESTIN_SZBPSZ05  0.2109118  0.0048815    43.206  &lt; 2e-16 ***\nDESTIN_SZBPSZ06 -1.1808365  0.0083657  -141.152  &lt; 2e-16 ***\nDESTIN_SZBPSZ07 -0.2077428  0.0084543   -24.572  &lt; 2e-16 ***\nDESTIN_SZBSSZ01  0.3164175  0.0050682    62.431  &lt; 2e-16 ***\nDESTIN_SZBSSZ02 -0.4852688  0.0057001   -85.134  &lt; 2e-16 ***\nDESTIN_SZBSSZ03  0.4130432  0.0043061    95.921  &lt; 2e-16 ***\nDESTIN_SZBTSZ01  0.6215095  0.0048914   127.061  &lt; 2e-16 ***\nDESTIN_SZBTSZ02 -0.0145076  0.0071799    -2.021 0.043324 *  \nDESTIN_SZBTSZ03  0.4919981  0.0058498    84.105  &lt; 2e-16 ***\nDESTIN_SZBTSZ04 -0.6957555  0.0114078   -60.989  &lt; 2e-16 ***\nDESTIN_SZBTSZ05  0.3329814  0.0073568    45.262  &lt; 2e-16 ***\nDESTIN_SZBTSZ06 -0.1333295  0.0073965   -18.026  &lt; 2e-16 ***\nDESTIN_SZBTSZ07 -1.4449581  0.0113186  -127.663  &lt; 2e-16 ***\nDESTIN_SZBTSZ08 -0.7079056  0.0103797   -68.201  &lt; 2e-16 ***\nDESTIN_SZCBSZ01 -5.7344725  0.3162767   -18.131  &lt; 2e-16 ***\nDESTIN_SZCCSZ01 -0.0009541  0.0083381    -0.114 0.908900    \nDESTIN_SZCHSZ01 -0.2083016  0.0099054   -21.029  &lt; 2e-16 ***\nDESTIN_SZCHSZ02  0.5369606  0.0057531    93.334  &lt; 2e-16 ***\nDESTIN_SZCHSZ03  2.5530638  0.0043945   580.971  &lt; 2e-16 ***\nDESTIN_SZCKSZ01 -0.5725975  0.0056507  -101.333  &lt; 2e-16 ***\nDESTIN_SZCKSZ02 -1.1181852  0.0063287  -176.685  &lt; 2e-16 ***\nDESTIN_SZCKSZ03  0.1156680  0.0049440    23.396  &lt; 2e-16 ***\nDESTIN_SZCKSZ04 -0.8647725  0.0071003  -121.794  &lt; 2e-16 ***\nDESTIN_SZCKSZ05 -1.1641791  0.0076248  -152.684  &lt; 2e-16 ***\nDESTIN_SZCKSZ06 -0.4397612  0.0073040   -60.208  &lt; 2e-16 ***\nDESTIN_SZCLSZ01  0.1930552  0.0053752    35.916  &lt; 2e-16 ***\nDESTIN_SZCLSZ02 -2.0436501  0.0136039  -150.225  &lt; 2e-16 ***\nDESTIN_SZCLSZ03 -0.9338571  0.0082908  -112.638  &lt; 2e-16 ***\nDESTIN_SZCLSZ04  0.0532041  0.0053276     9.987  &lt; 2e-16 ***\nDESTIN_SZCLSZ05 -1.0782781  0.0088184  -122.276  &lt; 2e-16 ***\nDESTIN_SZCLSZ06  0.4068171  0.0049068    82.910  &lt; 2e-16 ***\nDESTIN_SZCLSZ07 -0.3579507  0.0060289   -59.373  &lt; 2e-16 ***\nDESTIN_SZCLSZ08 -0.2487993  0.0066588   -37.364  &lt; 2e-16 ***\nDESTIN_SZCLSZ09  0.1611080  0.0071178    22.635  &lt; 2e-16 ***\nDESTIN_SZDTSZ02 -1.7308348  0.0349466   -49.528  &lt; 2e-16 ***\nDESTIN_SZDTSZ03 -0.5994253  0.0146230   -40.992  &lt; 2e-16 ***\nDESTIN_SZDTSZ13 -1.3685031  0.0162803   -84.059  &lt; 2e-16 ***\nDESTIN_SZGLSZ01 -0.0910001  0.0055275   -16.463  &lt; 2e-16 ***\nDESTIN_SZGLSZ02 -0.0692224  0.0052840   -13.100  &lt; 2e-16 ***\nDESTIN_SZGLSZ03  0.6493421  0.0043446   149.459  &lt; 2e-16 ***\nDESTIN_SZGLSZ04  0.9327947  0.0043674   213.583  &lt; 2e-16 ***\nDESTIN_SZGLSZ05  0.8161728  0.0043625   187.087  &lt; 2e-16 ***\nDESTIN_SZHGSZ01  0.0658625  0.0042516    15.491  &lt; 2e-16 ***\nDESTIN_SZHGSZ02 -0.8134329  0.0056721  -143.409  &lt; 2e-16 ***\nDESTIN_SZHGSZ03 -1.3546132  0.0066257  -204.448  &lt; 2e-16 ***\nDESTIN_SZHGSZ04 -0.4500588  0.0048448   -92.895  &lt; 2e-16 ***\nDESTIN_SZHGSZ05 -0.5026431  0.0050996   -98.566  &lt; 2e-16 ***\nDESTIN_SZHGSZ06 -0.8673686  0.0059530  -145.704  &lt; 2e-16 ***\nDESTIN_SZHGSZ07  0.0560490  0.0047702    11.750  &lt; 2e-16 ***\nDESTIN_SZHGSZ08 -0.0443189  0.0052599    -8.426  &lt; 2e-16 ***\nDESTIN_SZHGSZ09 -0.0126355  0.0054966    -2.299 0.021518 *  \nDESTIN_SZHGSZ10 -3.5821793  0.0263281  -136.059  &lt; 2e-16 ***\nDESTIN_SZJESZ01 -0.3704281  0.0056684   -65.350  &lt; 2e-16 ***\nDESTIN_SZJESZ02 -0.7369159  0.0058686  -125.570  &lt; 2e-16 ***\nDESTIN_SZJESZ03 -0.8985484  0.0063627  -141.222  &lt; 2e-16 ***\nDESTIN_SZJESZ04 -1.0511995  0.0073996  -142.061  &lt; 2e-16 ***\nDESTIN_SZJESZ05 -1.5324974  0.0102612  -149.349  &lt; 2e-16 ***\nDESTIN_SZJESZ06  0.3105267  0.0048241    64.370  &lt; 2e-16 ***\nDESTIN_SZJESZ07 -1.3234483  0.0085497  -154.795  &lt; 2e-16 ***\nDESTIN_SZJESZ08 -0.6559742  0.0083174   -78.867  &lt; 2e-16 ***\nDESTIN_SZJESZ09  0.2663752  0.0063370    42.035  &lt; 2e-16 ***\nDESTIN_SZJESZ10  0.8529026  0.0076067   112.126  &lt; 2e-16 ***\nDESTIN_SZJESZ11  0.5559641  0.0074629    74.497  &lt; 2e-16 ***\nDESTIN_SZJWSZ01 -0.9790971  0.0071830  -136.308  &lt; 2e-16 ***\nDESTIN_SZJWSZ02 -0.8746590  0.0060179  -145.342  &lt; 2e-16 ***\nDESTIN_SZJWSZ03  0.5689062  0.0049105   115.855  &lt; 2e-16 ***\nDESTIN_SZJWSZ04  0.4520963  0.0050302    89.876  &lt; 2e-16 ***\nDESTIN_SZJWSZ05 -1.0249671  0.0067371  -152.137  &lt; 2e-16 ***\nDESTIN_SZJWSZ06 -0.7451483  0.0062189  -119.819  &lt; 2e-16 ***\nDESTIN_SZJWSZ07 -2.8453099  0.0287335   -99.024  &lt; 2e-16 ***\nDESTIN_SZJWSZ08 -0.3372309  0.0058003   -58.141  &lt; 2e-16 ***\nDESTIN_SZJWSZ09  1.0505330  0.0045908   228.832  &lt; 2e-16 ***\nDESTIN_SZKLSZ01 -0.2334836  0.0057970   -40.277  &lt; 2e-16 ***\nDESTIN_SZKLSZ02 -0.5416148  0.0061432   -88.164  &lt; 2e-16 ***\nDESTIN_SZKLSZ03 -0.8026495  0.0068745  -116.757  &lt; 2e-16 ***\nDESTIN_SZKLSZ04 -1.2918594  0.0090197  -143.227  &lt; 2e-16 ***\nDESTIN_SZKLSZ05 -0.4069101  0.0087812   -46.339  &lt; 2e-16 ***\nDESTIN_SZKLSZ06 -2.5333101  0.0363215   -69.747  &lt; 2e-16 ***\nDESTIN_SZKLSZ07 -0.6623343  0.0070761   -93.601  &lt; 2e-16 ***\nDESTIN_SZKLSZ08 -0.1408205  0.0054965   -25.620  &lt; 2e-16 ***\nDESTIN_SZLKSZ01 -1.2639235  0.0208254   -60.691  &lt; 2e-16 ***\nDESTIN_SZMDSZ01 -1.5655800  0.0202787   -77.203  &lt; 2e-16 ***\nDESTIN_SZMDSZ02 -0.9767682  0.0114687   -85.168  &lt; 2e-16 ***\nDESTIN_SZMDSZ03 -3.3328109  0.0254294  -131.061  &lt; 2e-16 ***\nDESTIN_SZMPSZ01 -0.4552859  0.0080666   -56.441  &lt; 2e-16 ***\nDESTIN_SZMPSZ02 -0.5386560  0.0064620   -83.358  &lt; 2e-16 ***\nDESTIN_SZMPSZ03  0.4952000  0.0052295    94.694  &lt; 2e-16 ***\nDESTIN_SZMUSZ02 -1.4434175  0.0202509   -71.277  &lt; 2e-16 ***\nDESTIN_SZNTSZ01 -2.9194067  0.0449654   -64.926  &lt; 2e-16 ***\nDESTIN_SZNTSZ02 -1.3780179  0.0112867  -122.092  &lt; 2e-16 ***\nDESTIN_SZNTSZ03 -0.5044699  0.0080449   -62.707  &lt; 2e-16 ***\nDESTIN_SZNTSZ05 -2.0017134  0.0258750   -77.361  &lt; 2e-16 ***\nDESTIN_SZNTSZ06 -3.8120537  0.0434271   -87.781  &lt; 2e-16 ***\nDESTIN_SZNVSZ01 -0.1071506  0.0051026   -20.999  &lt; 2e-16 ***\nDESTIN_SZNVSZ02 -0.0274710  0.0057611    -4.768 1.86e-06 ***\nDESTIN_SZNVSZ03  0.1076352  0.0057909    18.587  &lt; 2e-16 ***\nDESTIN_SZNVSZ04 -1.2087250  0.0110438  -109.448  &lt; 2e-16 ***\nDESTIN_SZNVSZ05 -1.0058290  0.0092167  -109.131  &lt; 2e-16 ***\nDESTIN_SZPGSZ01 -1.2029931  0.0163170   -73.726  &lt; 2e-16 ***\nDESTIN_SZPGSZ02 -1.2878671  0.0074139  -173.709  &lt; 2e-16 ***\nDESTIN_SZPGSZ03 -0.1520894  0.0048629   -31.275  &lt; 2e-16 ***\nDESTIN_SZPGSZ04 -0.1985959  0.0050374   -39.424  &lt; 2e-16 ***\nDESTIN_SZPGSZ05 -1.5290983  0.0082617  -185.083  &lt; 2e-16 ***\nDESTIN_SZPLSZ01 -0.3567934  0.0074298   -48.022  &lt; 2e-16 ***\nDESTIN_SZPLSZ02 -1.7114351  0.0134462  -127.280  &lt; 2e-16 ***\nDESTIN_SZPLSZ03 -0.3241427  0.0098895   -32.776  &lt; 2e-16 ***\nDESTIN_SZPLSZ04 -1.7117196  0.0119003  -143.838  &lt; 2e-16 ***\nDESTIN_SZPLSZ05 -0.5086379  0.0120051   -42.368  &lt; 2e-16 ***\nDESTIN_SZPNSZ01  0.2026781  0.0068977    29.383  &lt; 2e-16 ***\nDESTIN_SZPNSZ02  0.8313754  0.0078544   105.848  &lt; 2e-16 ***\nDESTIN_SZPNSZ03 -0.4041254  0.0086586   -46.673  &lt; 2e-16 ***\nDESTIN_SZPNSZ04  1.5814539  0.0093641   168.885  &lt; 2e-16 ***\nDESTIN_SZPNSZ05  1.1823430  0.0129843    91.059  &lt; 2e-16 ***\nDESTIN_SZPRSZ01 -1.1057553  0.0088197  -125.374  &lt; 2e-16 ***\nDESTIN_SZPRSZ02  0.0895099  0.0056308    15.897  &lt; 2e-16 ***\nDESTIN_SZPRSZ03  0.6921925  0.0043977   157.397  &lt; 2e-16 ***\nDESTIN_SZPRSZ04 -0.2848336  0.0084725   -33.619  &lt; 2e-16 ***\nDESTIN_SZPRSZ05  0.1744480  0.0053553    32.575  &lt; 2e-16 ***\nDESTIN_SZPRSZ06  0.4279206  0.0058735    72.856  &lt; 2e-16 ***\nDESTIN_SZPRSZ07 -1.5123108  0.0124303  -121.664  &lt; 2e-16 ***\nDESTIN_SZPRSZ08 -0.5650226  0.0068530   -82.449  &lt; 2e-16 ***\nDESTIN_SZQTSZ01 -0.5952360  0.0090505   -65.769  &lt; 2e-16 ***\nDESTIN_SZQTSZ02 -0.7728170  0.0078910   -97.937  &lt; 2e-16 ***\nDESTIN_SZQTSZ03 -0.5066812  0.0073996   -68.474  &lt; 2e-16 ***\nDESTIN_SZQTSZ04 -0.6398414  0.0075411   -84.847  &lt; 2e-16 ***\nDESTIN_SZQTSZ05 -0.4354527  0.0069345   -62.795  &lt; 2e-16 ***\nDESTIN_SZQTSZ06 -0.6597391  0.0071919   -91.733  &lt; 2e-16 ***\nDESTIN_SZQTSZ07 -0.9392696  0.0112518   -83.477  &lt; 2e-16 ***\nDESTIN_SZQTSZ08  0.4617774  0.0057011    80.998  &lt; 2e-16 ***\nDESTIN_SZQTSZ09 -0.3174497  0.0065890   -48.178  &lt; 2e-16 ***\nDESTIN_SZQTSZ10  0.1993449  0.0059923    33.267  &lt; 2e-16 ***\nDESTIN_SZQTSZ11  0.2551535  0.0061885    41.230  &lt; 2e-16 ***\nDESTIN_SZQTSZ12 -0.1662603  0.0086701   -19.176  &lt; 2e-16 ***\nDESTIN_SZQTSZ13  0.5500978  0.0063091    87.192  &lt; 2e-16 ***\nDESTIN_SZQTSZ14  0.5364435  0.0070157    76.463  &lt; 2e-16 ***\nDESTIN_SZQTSZ15  1.3611043  0.0081643   166.715  &lt; 2e-16 ***\nDESTIN_SZRCSZ01 -0.1034049  0.0076769   -13.470  &lt; 2e-16 ***\nDESTIN_SZRCSZ06 -1.0633902  0.0189846   -56.013  &lt; 2e-16 ***\nDESTIN_SZRVSZ01 -1.5486221  0.0165272   -93.701  &lt; 2e-16 ***\nDESTIN_SZRVSZ02 -2.4092611  0.0326906   -73.699  &lt; 2e-16 ***\nDESTIN_SZRVSZ03 -1.5172079  0.0139258  -108.950  &lt; 2e-16 ***\nDESTIN_SZRVSZ04 -1.1663615  0.0157430   -74.088  &lt; 2e-16 ***\nDESTIN_SZRVSZ05 -2.2404292  0.0281339   -79.634  &lt; 2e-16 ***\nDESTIN_SZSBSZ01 -1.3783780  0.0096022  -143.549  &lt; 2e-16 ***\nDESTIN_SZSBSZ02 -1.4445213  0.0081630  -176.959  &lt; 2e-16 ***\nDESTIN_SZSBSZ03  0.5149906  0.0051663    99.683  &lt; 2e-16 ***\nDESTIN_SZSBSZ04  0.2389086  0.0060765    39.317  &lt; 2e-16 ***\nDESTIN_SZSBSZ05 -1.2737442  0.0082818  -153.801  &lt; 2e-16 ***\nDESTIN_SZSBSZ06 -1.8683520  0.0227277   -82.206  &lt; 2e-16 ***\nDESTIN_SZSBSZ07 -0.5993154  0.0184895   -32.414  &lt; 2e-16 ***\nDESTIN_SZSBSZ08  0.8156302  0.0059840   136.302  &lt; 2e-16 ***\nDESTIN_SZSBSZ09  0.0900611  0.0057054    15.785  &lt; 2e-16 ***\nDESTIN_SZSESZ02 -0.6397704  0.0052491  -121.882  &lt; 2e-16 ***\nDESTIN_SZSESZ03  0.1714103  0.0042357    40.468  &lt; 2e-16 ***\nDESTIN_SZSESZ04 -1.0596175  0.0059865  -177.002  &lt; 2e-16 ***\nDESTIN_SZSESZ05 -0.8071891  0.0051229  -157.566  &lt; 2e-16 ***\nDESTIN_SZSESZ06 -0.5580934  0.0066216   -84.284  &lt; 2e-16 ***\nDESTIN_SZSESZ07 -3.1448863  0.0227788  -138.062  &lt; 2e-16 ***\nDESTIN_SZSGSZ01 -0.1795225  0.0060127   -29.857  &lt; 2e-16 ***\nDESTIN_SZSGSZ02 -0.2986570  0.0053561   -55.760  &lt; 2e-16 ***\nDESTIN_SZSGSZ03 -0.4074671  0.0050609   -80.513  &lt; 2e-16 ***\nDESTIN_SZSGSZ04 -0.1505164  0.0050931   -29.553  &lt; 2e-16 ***\nDESTIN_SZSGSZ05 -1.9908372  0.0101448  -196.242  &lt; 2e-16 ***\nDESTIN_SZSGSZ06  0.6715268  0.0041161   163.148  &lt; 2e-16 ***\nDESTIN_SZSGSZ07 -0.4494757  0.0055319   -81.252  &lt; 2e-16 ***\nDESTIN_SZSISZ01 -0.5517983  0.0261860   -21.072  &lt; 2e-16 ***\nDESTIN_SZSKSZ01 -0.4749154  0.0079257   -59.921  &lt; 2e-16 ***\nDESTIN_SZSKSZ02  0.9400302  0.0057218   164.290  &lt; 2e-16 ***\nDESTIN_SZSKSZ03 -0.2800377  0.0066081   -42.378  &lt; 2e-16 ***\nDESTIN_SZSKSZ04 -1.2570212  0.0145351   -86.482  &lt; 2e-16 ***\nDESTIN_SZSKSZ05 -0.2600474  0.0112800   -23.054  &lt; 2e-16 ***\nDESTIN_SZSLSZ01 -0.7775604  0.0085818   -90.606  &lt; 2e-16 ***\nDESTIN_SZSLSZ04 -0.8586515  0.0073142  -117.396  &lt; 2e-16 ***\nDESTIN_SZSRSZ01 -1.1370887  0.0142148   -79.993  &lt; 2e-16 ***\nDESTIN_SZTHSZ01 -4.3259988  0.0368554  -117.378  &lt; 2e-16 ***\nDESTIN_SZTHSZ03 -2.6632914  0.0252720  -105.385  &lt; 2e-16 ***\nDESTIN_SZTHSZ04 -3.1000906  0.0216372  -143.276  &lt; 2e-16 ***\nDESTIN_SZTHSZ06 -2.5952642  0.0156340  -166.001  &lt; 2e-16 ***\nDESTIN_SZTMSZ01 -0.2092828  0.0059257   -35.318  &lt; 2e-16 ***\nDESTIN_SZTMSZ02  1.8238139  0.0039155   465.798  &lt; 2e-16 ***\nDESTIN_SZTMSZ03  0.8518259  0.0043636   195.210  &lt; 2e-16 ***\nDESTIN_SZTMSZ04  1.0222812  0.0043466   235.191  &lt; 2e-16 ***\nDESTIN_SZTMSZ05  0.6323777  0.0060058   105.294  &lt; 2e-16 ***\nDESTIN_SZTNSZ01 -0.3336078  0.0074388   -44.847  &lt; 2e-16 ***\nDESTIN_SZTNSZ02 -1.0820469  0.0101689  -106.408  &lt; 2e-16 ***\nDESTIN_SZTNSZ03 -1.4186505  0.0119906  -118.313  &lt; 2e-16 ***\nDESTIN_SZTNSZ04 -0.3058199  0.0074743   -40.916  &lt; 2e-16 ***\nDESTIN_SZTPSZ01 -0.4872299  0.0061571   -79.133  &lt; 2e-16 ***\nDESTIN_SZTPSZ02  0.7158441  0.0041312   173.278  &lt; 2e-16 ***\nDESTIN_SZTPSZ03 -0.4314229  0.0059917   -72.004  &lt; 2e-16 ***\nDESTIN_SZTPSZ04 -1.5898245  0.0076083  -208.959  &lt; 2e-16 ***\nDESTIN_SZTPSZ05 -1.0445550  0.0062363  -167.497  &lt; 2e-16 ***\nDESTIN_SZTPSZ06 -0.4319582  0.0070100   -61.621  &lt; 2e-16 ***\nDESTIN_SZTPSZ07 -2.1602303  0.0120352  -179.493  &lt; 2e-16 ***\nDESTIN_SZTPSZ08 -1.1920493  0.0093083  -128.063  &lt; 2e-16 ***\nDESTIN_SZTPSZ09 -0.2022481  0.0071137   -28.431  &lt; 2e-16 ***\nDESTIN_SZTPSZ10 -1.2464793  0.0090124  -138.308  &lt; 2e-16 ***\nDESTIN_SZTPSZ11 -0.0808445  0.0056019   -14.432  &lt; 2e-16 ***\nDESTIN_SZTPSZ12 -0.6784376  0.0066340  -102.267  &lt; 2e-16 ***\nDESTIN_SZTSSZ01 -1.5845062  0.0222086   -71.346  &lt; 2e-16 ***\nDESTIN_SZTSSZ02 -0.1886010  0.0146338   -12.888  &lt; 2e-16 ***\nDESTIN_SZTSSZ03  0.6525526  0.0092450    70.585  &lt; 2e-16 ***\nDESTIN_SZTSSZ04  0.5285464  0.0100182    52.759  &lt; 2e-16 ***\nDESTIN_SZTSSZ05  1.4670106  0.0104357   140.577  &lt; 2e-16 ***\nDESTIN_SZTSSZ06  2.5043588  0.0167444   149.564  &lt; 2e-16 ***\nDESTIN_SZWCSZ01  1.9787931  0.0054306   364.375  &lt; 2e-16 ***\nDESTIN_SZWCSZ02 -2.2593108  0.0127916  -176.624  &lt; 2e-16 ***\nDESTIN_SZWCSZ03 -3.1897655  0.0326927   -97.568  &lt; 2e-16 ***\nDESTIN_SZWDSZ01  1.0476108  0.0044629   234.738  &lt; 2e-16 ***\nDESTIN_SZWDSZ02 -1.3176990  0.0065894  -199.973  &lt; 2e-16 ***\nDESTIN_SZWDSZ03  0.3432057  0.0052496    65.377  &lt; 2e-16 ***\nDESTIN_SZWDSZ04 -0.7895927  0.0073392  -107.586  &lt; 2e-16 ***\nDESTIN_SZWDSZ05 -0.8751665  0.0072946  -119.975  &lt; 2e-16 ***\nDESTIN_SZWDSZ06 -0.2106221  0.0053027   -39.720  &lt; 2e-16 ***\nDESTIN_SZWDSZ07 -1.6050834  0.0071754  -223.692  &lt; 2e-16 ***\nDESTIN_SZWDSZ08 -0.5124717  0.0069223   -74.032  &lt; 2e-16 ***\nDESTIN_SZWDSZ09  0.3813542  0.0054697    69.721  &lt; 2e-16 ***\nDESTIN_SZYSSZ01  0.0853753  0.0046572    18.332  &lt; 2e-16 ***\nDESTIN_SZYSSZ02 -0.3227172  0.0057351   -56.271  &lt; 2e-16 ***\nDESTIN_SZYSSZ03 -0.4151283  0.0066299   -62.615  &lt; 2e-16 ***\nDESTIN_SZYSSZ04 -0.4637327  0.0058206   -79.671  &lt; 2e-16 ***\nDESTIN_SZYSSZ05 -1.5888242  0.0111001  -143.136  &lt; 2e-16 ***\nDESTIN_SZYSSZ06 -1.4606209  0.0107759  -135.545  &lt; 2e-16 ***\nDESTIN_SZYSSZ07 -0.7839065  0.0144357   -54.304  &lt; 2e-16 ***\nDESTIN_SZYSSZ08  0.6265412  0.0045504   137.691  &lt; 2e-16 ***\nDESTIN_SZYSSZ09  0.1520067  0.0048092    31.607  &lt; 2e-16 ***\nlog(DIST)       -1.8468315  0.0004608 -4008.033  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 47094011  on 14470  degrees of freedom\nResidual deviance: 10420261  on 13912  degrees of freedom\nAIC: 10510518\n\nNumber of Fisher Scoring iterations: 7\n\n\n\n\n\n\n\n\nDo it yourself\n\n\n\nWhat statistical conclusion you can draw from the report above?\n\n\nNext, let us examine how well the proportion of variance in the dependent variable (i.e. TRIPS) that can be explained by the explanatory variables.\n\n\n\n\n\n\nDo it yourself\n\n\n\nUsing the R-Squared function written earlier, compute the R-Squared of the Doubly-constrined Model.\n\n\n\n\nShow the code chunk\nCalcRSquared(dbcSIM_Poisson$data$TRIPS,\n             dbcSIM_Poisson$fitted.values)\n\n\n[1] 0.7001882\n\n\nNotice that there is a relatively greater improvement in the R-Squared value."
  }
]